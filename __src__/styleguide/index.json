{
  "sections": {
    "getting started": [
      {
        "category": "Getting Started",
        "id": "getting_started-getting_started-setup",
        "articles": [
          {
            "id": "getting_started-getting_started-setup",
            "section": {
              "name": "getting started",
              "gettingStarted": true
            },
            "category": "Getting Started",
            "heading": "Setup",
            "code": [],
            "markup": [],
            "comment": "<ol>\n<li><a href=\"https://github.com/UWHealth/Front-End-Framework.git\">Clone or Fork</a></li>\n<li>Using the command line (preferably using PowerShell rather than cmd.exe), <code class=\"sg-code sg-codespan\">cd</code> to the project&#x2019;s directory.</li>\n<li>Run <code class=\"sg-code sg-codespan\">npm install</code>.</li>\n<li>Run <code class=\"sg-code sg-codespan\">npm install gulp -g</code> to install gulp globally (if you haven&#x2019;t already)</li>\n<li>Run <code class=\"sg-code sg-codespan\">gulp</code></li>\n<li>Open a browser and go to <a href=\"http://localhost:80/\">localhost:80</a>. This is your local running copy of the framework.</li>\n<li><strong>Start codin&#x2019; and compilin&#x2019;.</strong></li>\n</ol>",
            "priority": 50,
            "filelocation": "styleguide/_styleguide-readme.md"
          },
          {
            "id": "getting_started-getting_started-software",
            "section": {
              "name": "getting started",
              "gettingStarted": true
            },
            "category": "Getting Started",
            "heading": "Software",
            "code": [],
            "markup": [],
            "comment": "<ol>\n<li><a href=\"https://nodejs.org/\">Node</a></li>\n<li><a href=\"http://gulpjs.com/\">Gulp</a><ul>\n<li>Run <code class=\"sg-code sg-codespan\">npm install --global gulp</code> from the command line after Node has been installed.</li>\n</ul>\n</li>\n</ol>",
            "priority": 50,
            "filelocation": "styleguide/_styleguide-readme.md"
          },
          {
            "id": "getting_started-getting_started-tips_and_tricks",
            "section": {
              "name": "getting started",
              "gettingStarted": true
            },
            "category": "Getting Started",
            "heading": "Tips and Tricks",
            "code": [],
            "markup": [],
            "comment": "<h2 id=\"style-guide-generation\" class=\"sg-heading sg-heading-2\">Style Guide generation</h2>\n<p>The style guide you are reading is generated on the fly by the <code class=\"sg-code sg-codespan\">gulp</code> task <code class=\"sg-code sg-codespan\">styleguide</code> (using the markdown-styleguide-generator node module).</p><p>To create style guide entries, create a comment block with the <code class=\"sg-code sg-codespan\">SG</code> in the first line. The next immediate line should be title of your style guide entry (using a <code class=\"sg-code sg-codespan\">#</code> to demarcate the start). A <code class=\"sg-code sg-codespan\">/</code> will indicate a sub-section title. So <code class=\"sg-code sg-codespan\">#Title/Sub-section</code> will create a parent section named &#x201C;Title&#x201D;, with a child named &#x201C;Sub-section&#x201D;.</p><p>Create <code class=\"sg-code sg-codespan\">html</code> examples (with a code snippet) by creating a code block followed by &#x201C;html_example&#x201D; (```html_example).</p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \">/* SG\n<span class=\"hljs-comment\"># Section/Component</span>\nThis <span class=\"hljs-keyword\">is</span> an example Component.\n\n```html_example\n&lt;<span class=\"hljs-keyword\">div</span>&gt;...&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n```\n*/\n</code></pre>\n</div>\n<p>Separating &#x201C;development&#x201D; comments from &#x201C;styles&#x201D; requires adding a <code class=\"sg-code sg-codespan\">[[dev]]</code> anywhere within the title of that section.</p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \">/* SG\n# Section/Component <span class=\"hljs-string\">[[dev]]</span>\n</code></pre>\n</div>\n<p>Everything will be run through <a href=\"https://guides.github.com/features/mastering-markdown/\">Markdown (GitHub-flavored)</a>. This allows text formatting and code samples.</p>\n                <h4 id=\"markdown-use\" class=\"sg-heading sg-heading-4\">Markdown Use</h4>\n<p>Sometimes meta information that does not fit logically into a scss file is necessary. In those cases, you can use a plain markdown file. To start a style guide block, wrap your comments in an <code class=\"sg-code sg-codespan\">&lt;SG&gt;</code> &#x201C;tag&#x201D; rather than a <code class=\"sg-code sg-codespan\">/* SG */</code> comment.</p><hr>",
            "priority": 50,
            "filelocation": "styleguide/_styleguide-readme.md"
          },
          {
            "id": "getting_started-getting_started-gulp_arguments",
            "section": {
              "name": "getting started",
              "gettingStarted": true
            },
            "category": "Getting Started",
            "heading": "Gulp arguments",
            "code": [],
            "markup": [],
            "comment": "<p>Running <code class=\"sg-code sg-codespan\">gulp</code> by itself will compile your Sass and concatenate your Javascript, but you may need some additional build steps for a complete workflow. Our gulp file accepts arguments in the form of <code class=\"sg-code sg-codespan\">gulp --argument1 --argument2</code> to turn certain tasks on and off.</p>\n                <h4 id=\"minify-uglify\" class=\"sg-heading sg-heading-4\">Minify/Uglify</h4>\n\n                <h6 id=\"-minify\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">--minify</code></h6>\n<p>Compress and uglify your css and js files.</p>\n                <h4 id=\"no-style-guide\" class=\"sg-heading sg-heading-4\">No Style Guide</h4>\n\n                <h6 id=\"-no-sg\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">--no-sg</code></h6>\n<p>Prevents style guide generation.</p>\n                <h4 id=\"sourcemaps\" class=\"sg-heading sg-heading-4\">Sourcemaps</h4>\n\n                <h6 id=\"-sm\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">--sm</code></h6>\n<p>Adds source maps to your Javascript and CSS. Very useful if working with concatenated, uglified, or tangled Sass code. <a href=\"http://blog.teamtreehouse.com/introduction-source-maps\">Learn more about source maps</a>.</p>\n                <h4 id=\"js-hint\" class=\"sg-heading sg-heading-4\">JS Hint</h4>\n\n                <h6 id=\"-lint\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">--lint</code></h6>\n<p>Runs your JS through <a href=\"https://github.com/jshint/jshint\">JSHint</a>. You can change the project&#x2019;s hinting rules by modifying the <code class=\"sg-code sg-codespan\">.jshintrc</code> file and ignore files via the <code class=\"sg-code sg-codespan\">.jshintignore</code> file (both at the root of the project). This is usually necessary for plugins or other highly optimized javascript since JSHint will emit errors about code readability.</p>\n                <h4 id=\"browsersync\" class=\"sg-heading sg-heading-4\">Browsersync</h4>\n\n                <h6 id=\"-bs-\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">--bs[]=</code></h6>\n<p>Changes the default Browsersync options.</p><ul>\n<li><code class=\"sg-code sg-codespan\">--bsserver</code>: Change the server options (typically just the base directory).</li>\n<li><code class=\"sg-code sg-codespan\">--bsproxy</code>:  Run browsersync through a proxy address (cannot be used along side server options).</li>\n<li><code class=\"sg-code sg-codespan\">--bsservestatic</code>: Add additional directories from which static files should be served. Should only be used in proxy mode.</li>\n<li><code class=\"sg-code sg-codespan\">--bsport</code>: Change the default port (80 on Windows, 3000 on Unix-based systems).</li>\n<li><code class=\"sg-code sg-codespan\">--bstunnel</code>: Tunnel the server through a URL.</li>\n</ul>\n<p><em>See <a href=\"https://www.browsersync.io/docs/options/\">Browsersync&#x2019;s documentation</a> for details on the options.</em></p>",
            "priority": 1000,
            "filelocation": "styleguide/_styleguide-readme.md"
          }
        ]
      }
    ],
    "patterns": [
      {
        "category": "Buttons",
        "id": "patterns-buttons-",
        "articles": [
          {
            "id": "patterns-buttons-",
            "section": {
              "name": "patterns",
              "patterns": true
            },
            "category": "Buttons",
            "heading": "",
            "code": [
              "<button type=\"button\" class=\"btn\">Button</button>\n\n<a href=\"\" class=\"btn\">Faux Button</a>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"button\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn\"</span>&gt;</span>Button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn\"</span>&gt;</span>Faux Button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>"
            ],
            "comment": "<p>Applying the <code class=\"sg-code sg-codespan\">btn</code> class to anything will make it look like a button. Always declare <code class=\"sg-code sg-codespan\">type=&quot;button&quot;</code> on <code class=\"sg-code sg-codespan\">&lt;button&gt;</code> elements for proper accessibility.</p>",
            "priority": -1000,
            "filelocation": "_src/sass/components/_c-button.scss"
          }
        ]
      },
      {
        "category": "Color Palette",
        "id": "patterns-color_palette-",
        "articles": [
          {
            "id": "patterns-color_palette-",
            "section": {
              "name": "patterns",
              "patterns": true
            },
            "category": "Color Palette",
            "heading": "",
            "code": [
              "<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
            ],
            "comment": "",
            "priority": -1000,
            "filelocation": "_src/sass/styleguide.scss"
          }
        ]
      },
      {
        "category": "Grid",
        "id": "patterns-grid-basics",
        "articles": [
          {
            "id": "patterns-grid-basics",
            "section": {
              "name": "patterns",
              "patterns": true
            },
            "category": "Grid",
            "heading": "Basics",
            "code": [
              "<div class=\"grid\">\n    <div class=\"grid_item\">Column (100% width)</div>\n\n    <div class=\"grid_item one_half\">1/2 Column</div>\n    <div class=\"grid_item one_half\">1/2 Column</div>\n\n    <div class=\"grid_item one_third\">1/3 Column</div>\n    <div class=\"grid_item one_third\">1/3 Column</div>\n    <div class=\"grid_item one_third\">1/3 Column</div>\n\n    <div class=\"grid_item one_fourth\"> 1/4 Column</div>\n    <div class=\"grid_item one_quarter\">1/4 Column</div>\n    <div class=\"grid_item one_fourth\"> 1/4 Column</div>\n    <div class=\"grid_item one_fourth\"> 1/4 Column</div>\n</div>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item\"</span>&gt;</span>Column (100% width)<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_half\"</span>&gt;</span>1/2 Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_half\"</span>&gt;</span>1/2 Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_third\"</span>&gt;</span>1/3 Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_third\"</span>&gt;</span>1/3 Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_third\"</span>&gt;</span>1/3 Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_fourth\"</span>&gt;</span> 1/4 Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_quarter\"</span>&gt;</span>1/4 Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_fourth\"</span>&gt;</span> 1/4 Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_fourth\"</span>&gt;</span> 1/4 Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
            ],
            "comment": "<p>This is an example of a flex-box-based grid system with an inline-block fallback.</p><p>All grids start with a <code class=\"sg-code sg-codespan\">grid</code> or <code class=\"sg-code sg-codespan\">row</code> element, with nested <code class=\"sg-code sg-codespan\">grid_item</code> or <code class=\"sg-code sg-codespan\">column</code> element(s). All columns start at 100% width, so adding width classes to columns is required to make them to sit next to each other.</p><p><em>NOTE: The following width classes are out of the box. If you&#x2019;d like to use your own classes for widths and grid items, then set <code class=\"sg-code sg-codespan\">$grid-silent-classes</code> is set to true and use extends for style inheritence.</em></p>",
            "priority": 1,
            "filelocation": "_src/sass/styleguide.scss"
          },
          {
            "id": "patterns-grid-automatic_columns",
            "section": {
              "name": "patterns",
              "patterns": true
            },
            "category": "Grid",
            "heading": "Automatic columns",
            "code": [
              "<div class=\"grid grid_auto\">\n    <div class=\"grid_item\">Auto Column</div>\n    <div class=\"grid_item\">Auto Column</div>\n    <div class=\"grid_item\">Auto Column</div>\n    <div class=\"grid_item\">Auto Column</div>\n    <div class=\"grid_item one_third\">Set Width (1/3)</div>\n    <div class=\"grid_item\">Auto Column</div>\n    <div class=\"grid_item\">Auto Column</div>\n    <div class=\"grid_item\">Auto Column</div>\n    <div class=\"grid_item one_half\">Set Width (1/2)</div>\n    <div class=\"grid_item\">Auto Column</div>\n    <div class=\"grid_item\">Auto Column</div>\n    <div class=\"grid_item\">Auto Column</div>\n</div>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid grid_auto\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item\"</span>&gt;</span>Auto Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item\"</span>&gt;</span>Auto Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item\"</span>&gt;</span>Auto Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item\"</span>&gt;</span>Auto Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_third\"</span>&gt;</span>Set Width (1/3)<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item\"</span>&gt;</span>Auto Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item\"</span>&gt;</span>Auto Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item\"</span>&gt;</span>Auto Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_half\"</span>&gt;</span>Set Width (1/2)<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item\"</span>&gt;</span>Auto Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item\"</span>&gt;</span>Auto Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item\"</span>&gt;</span>Auto Column<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
            ],
            "comment": "<p>Grids/rows set with a <code class=\"sg-code sg-codespan\">grid_auto</code> class will create columns that have automatic widths based on their content.</p><p>You can also combine automatic columns with width-based one. The automatic columns with fill the space around the set-width column.</p><p><em>Note: Flexbox handles this a little differently than inline-block, so check older browsers before using this style of grid to be sure you&#x2019;re getting a similar result.</em></p>",
            "priority": 2,
            "filelocation": "_src/sass/styleguide.scss"
          },
          {
            "id": "patterns-grid-gutter_control",
            "section": {
              "name": "patterns",
              "patterns": true
            },
            "category": "Grid",
            "heading": "Gutter Control",
            "code": [
              "<div class=\"grid grid_full\">\n    <div class=\"grid_item one_third\">No gutter</div>\n    <div class=\"grid_item one_third\">No gutter</div>\n    <div class=\"grid_item one_third\">No gutter</div>\n</div>\n<div class=\"grid grid_wide\">\n    <div class=\"grid_item one_third\">Wide gutter</div>\n    <div class=\"grid_item one_third\">Wide gutter</div>\n    <div class=\"grid_item one_third\">Wide gutter</div>\n</div>\n<div class=\"grid grid_narrow\">\n    <div class=\"grid_item one_third\">Narrow gutter</div>\n    <div class=\"grid_item one_third\">Narrow gutter</div>\n    <div class=\"grid_item one_third\">Narrow gutter</div>\n</div>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid grid_full\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_third\"</span>&gt;</span>No gutter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_third\"</span>&gt;</span>No gutter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_third\"</span>&gt;</span>No gutter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid grid_wide\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_third\"</span>&gt;</span>Wide gutter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_third\"</span>&gt;</span>Wide gutter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_third\"</span>&gt;</span>Wide gutter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid grid_narrow\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_third\"</span>&gt;</span>Narrow gutter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_third\"</span>&gt;</span>Narrow gutter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"grid_item one_third\"</span>&gt;</span>Narrow gutter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
            ],
            "comment": "<p>Gutters (spaces between grid items) default to 1.5rem. However, there are three grid gutter classes to alter this behavior.</p><ul>\n<li><code class=\"sg-code sg-codespan\">grid_full</code> will set gutters to 0.</li>\n<li><code class=\"sg-code sg-codespan\">grid_wide</code> will double the width of gutters.</li>\n<li><code class=\"sg-code sg-codespan\">grid_narrow</code> will halve the width of gutters.</li>\n</ul>",
            "priority": 3,
            "filelocation": "_src/sass/styleguide.scss"
          }
        ]
      },
      {
        "category": "Layout",
        "id": "patterns-layout-arrangement_object",
        "articles": [
          {
            "id": "patterns-layout-arrangement_object",
            "section": {
              "name": "patterns",
              "patterns": true
            },
            "category": "Layout",
            "heading": "Arrangement object",
            "code": [
              "<div class=\"arrange\">\n    <div class=\"arrange_media\">\n        <img src=\"http://placehold.it/60x48\" alt=\"placeholder image\">\n    </div>\n    <div class=\"arrange_body\">\n        Content that is vertically (middle) aligned with the image.\n    </div>\n</div>\n\n<!-- Bottom Arrangement -->\n<div class=\"arrange arrange_bottom\">\n    <div class=\"arrange_media\">\n        <img src=\"http://placehold.it/60x48\" alt=\"placeholder image\">\n    </div>\n    <div class=\"arrange_body\">\n        Content that is bottom aligned to the image.\n    </div>\n</div>\n\n<!-- Equal width arrangement-->\n<div class=\"arrange arrange_equal\">\n    <div class=\"arrange_fill\">\n        Equal width columns.\n    </div>\n    <div class=\"arrange_fill\">\n        <img class=\"show\" src=\"http://placehold.it/120x72\" alt=\"placeholder image\" style=\"margin: auto;\">\n    </div>\n    <div class=\"arrange_fill\">\n        Can be as many columns as you want.\n    </div>\n</div>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange_media\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"http://placehold.it/60x48\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"placeholder image\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange_body\"</span>&gt;</span>\n        Content that is vertically (middle) aligned with the image.\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-comment\">&lt;!-- Bottom Arrangement --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange arrange_bottom\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange_media\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"http://placehold.it/60x48\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"placeholder image\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange_body\"</span>&gt;</span>\n        Content that is bottom aligned to the image.\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-comment\">&lt;!-- Equal width arrangement--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange arrange_equal\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange_fill\"</span>&gt;</span>\n        Equal width columns.\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange_fill\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"show\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"http://placehold.it/120x72\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"placeholder image\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"margin: auto;\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange_fill\"</span>&gt;</span>\n        Can be as many columns as you want.\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
            ],
            "comment": "<p>Creates an image-content block that vertically aligns images and text (centered, bottom, or top).\n<br>\nChildren can be named four things:</p><ul>\n<li><code class=\"sg-code sg-codespan\">arrange_fit</code> or <code class=\"sg-code sg-codespan\">arrange_media</code> will create a block that fits the width of its content (useful for images).</li>\n<li><code class=\"sg-code sg-codespan\">arrange_fill</code> will fill the remaining space.</li>\n<li><code class=\"sg-code sg-codespan\">arrange_body</code> are similar but have some default styling.</li>\n</ul>\n<p>You may also combine this with grid items like <code class=\"sg-code sg-codespan\">row</code> and <code class=\"sg-code sg-codespan\">column</code> if you wish to add gutters between elements.</p><p><em>NOTE: Do not mistake this for true grid items. This should only be used for the arrangement of a few items. It is &#x201C;squishy&#x201D;, but not technically responsive.</em></p>",
            "priority": 50,
            "filelocation": "_src/sass/layout/_l-media-object.scss"
          },
          {
            "id": "patterns-layout-isolation_object",
            "section": {
              "name": "patterns",
              "patterns": true
            },
            "category": "Layout",
            "heading": "Isolation object",
            "code": [
              "<img class=\"isolate_media\" src=\"http://placehold.it/300x48\" alt=\"placeholder image\">\n<p class=\"isolate_body\">\n    Content that sits to the right of the image but will never wrap underneath the image to the left. Etiam porta sem malesuada magna mollis euismod. Cras justo odio, dapibus ac facilisis in, egestas eget quam.\n</p>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"isolate_media\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"http://placehold.it/300x48\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"placeholder image\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"isolate_body\"</span>&gt;</span>\n    Content that sits to the right of the image but will never wrap underneath the image to the left. Etiam porta sem malesuada magna mollis euismod. Cras justo odio, dapibus ac facilisis in, egestas eget quam.\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>"
            ],
            "comment": "<p>Isolates an image from text wrapping underneath. Useful for creating an association between an image and text. Often used with an icon or avatar. Adding other classes to the <code class=\"sg-code sg-codespan\">isolate_body</code> can create a more stylized version.</p>",
            "priority": 50,
            "filelocation": "_src/sass/layout/_l-media-object.scss"
          }
        ]
      },
      {
        "category": "Lists",
        "id": "patterns-lists-bordered_lists",
        "articles": [
          {
            "id": "patterns-lists-bordered_lists",
            "section": {
              "name": "patterns",
              "patterns": true
            },
            "category": "Lists",
            "heading": "Bordered Lists",
            "code": [
              "<ul class=\"list_bordered\">\n    <li>List Item</li>\n    <li>List Item</li>\n    <li>List Item</li>\n</ul>\n\n<ul class=\"list_bordered_short\">\n    <li>List Item</li>\n    <li>List Item</li>\n    <li>List Item</li>\n</ul>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"list_bordered\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"list_bordered_short\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>"
            ],
            "comment": "<p>Creates a list with borders above and below each list item. Appending <code class=\"sg-code sg-codespan\">list_bordered</code> with <code class=\"sg-code sg-codespan\">_short</code> will make reduce the padding between each item.</p>",
            "priority": 50,
            "filelocation": "_src/sass/layout/_l-lists.scss"
          },
          {
            "id": "patterns-lists-breadcrumbs",
            "section": {
              "name": "patterns",
              "patterns": true
            },
            "category": "Lists",
            "heading": "Breadcrumbs",
            "code": [
              "<ul class=\"breadcrumbs\">\n    <li class=\"breadcrumb\">List Item</li>\n    <li class=\"breadcrumb\">List Item</li>\n    <li class=\"breadcrumb\">List Item</li>\n</ul>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"breadcrumbs\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"breadcrumb\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"breadcrumb\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"breadcrumb\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>"
            ],
            "comment": "<p>A list where each item is in a row, with a &#x25B8; between each item.</p>",
            "priority": 50,
            "filelocation": "_src/sass/layout/_l-lists.scss"
          },
          {
            "id": "patterns-lists-inline_lists",
            "section": {
              "name": "patterns",
              "patterns": true
            },
            "category": "Lists",
            "heading": "Inline Lists",
            "code": [
              "<ul class=\"list_inline\">\n    <li>List Item</li>\n    <li>List Item</li>\n    <li>List Item</li>\n</ul>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"list_inline\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>"
            ],
            "comment": "<p>A list where each item is in a row, with spacing to the right of each item</p>",
            "priority": 50,
            "filelocation": "_src/sass/layout/_l-lists.scss"
          },
          {
            "id": "patterns-lists-navigation_list",
            "section": {
              "name": "patterns",
              "patterns": true
            },
            "category": "Lists",
            "heading": "Navigation List",
            "code": [
              "<ul class=\"list_nav\">\n    <li>\n        <a href=\"#\">List Item</a>\n    </li>\n    <li>\n        <a href=\"#\">List Item</a>\n    </li>\n    <li>\n        <a href=\"#\">List Item</a>\n    </li>\n</ul>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"list_nav\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>"
            ],
            "comment": "<p>A list of anchor tags that fill the space of their containers. Used when you need larger click/tap targets on a group on links.</p><p>Also useful as a modifier class since it can be used on any container with anchors (doesn&#x2019;t have to be an <code class=\"sg-code sg-codespan\">ol</code> or <code class=\"sg-code sg-codespan\">ul</code>).</p>",
            "priority": 50,
            "filelocation": "_src/sass/layout/_l-lists.scss"
          }
        ]
      },
      {
        "category": "Typography",
        "id": "patterns-typography-body_copy",
        "articles": [
          {
            "id": "patterns-typography-body_copy",
            "section": {
              "name": "patterns",
              "patterns": true
            },
            "category": "Typography",
            "heading": "Body copy",
            "code": [
              "<p>Aenean lacinia bibendum nulla sed consectetur. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Sed posuere consectetur est at lobortis. </p>\n<p>Nullam quis risus eget urna mollis ornare vel eu leo. Nulla vitae elit libero, a pharetra augue.</p>\n\n<h5>A Heading...</h5>\n<p>...Followed by a paragraph. Notice how there&apos;s no margin between these two items.</p>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Aenean lacinia bibendum nulla sed consectetur. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Sed posuere consectetur est at lobortis. <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Nullam quis risus eget urna mollis ornare vel eu leo. Nulla vitae elit libero, a pharetra augue.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>A Heading...<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>...Followed by a paragraph. Notice how there&amp;apos;s no margin between these two items.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>"
            ],
            "comment": "<p>The default font-size for all typography is <strong>16px</strong> with line-height of <strong>24px</strong> (1.5). This is applied to the <code class=\"sg-code sg-codespan\">&lt;body&gt;</code> and inherited by paragraphs and lists. <code class=\"sg-code sg-codespan\">&lt;p&gt;</code> tags all receive a bottom margin of 1rem.</p><p>When a <code class=\"sg-code sg-codespan\">&lt;p&gt;</code> follows a heading tag (<code class=\"sg-code sg-codespan\">&lt;h1&gt;</code> for instance), the paragraph receives a negative top margin so it sits directly beneath the heading.</p><p>The default font-family is set in <strong>Asap</strong>.</p>",
            "priority": 50,
            "filelocation": "_src/sass/base/_b-type.scss"
          },
          {
            "id": "patterns-typography-heading_sizes",
            "section": {
              "name": "patterns",
              "patterns": true
            },
            "category": "Typography",
            "heading": "Heading sizes",
            "code": [
              "<h1>Heading 1</h1>\n<h2>Heading 2</h2>\n<h3>Heading 3</h3>\n<h4>Heading 4</h4>\n<h5>Heading 5</h5>\n<h6>Heading 6</h6>\n\n<h1 class=\"h4\">Heading 1 with an h4 class</h1>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Heading 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>Heading 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>Heading 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>Heading 4<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>Heading 5<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h6</span>&gt;</span>Heading 6<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h6</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"h4\"</span>&gt;</span>Heading 1 with an h4 class<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>"
            ],
            "comment": "<p>Moving from <code class=\"sg-code sg-codespan\">h6</code> up to <code class=\"sg-code sg-codespan\">h1</code>, the heading font sizes get larger on a scale. For instance, <code class=\"sg-code sg-codespan\">h6</code> is 1.35 times larger than the base font size of 16px. Headings have a default bottom margin of 24px.</p><p><strong>Heading tags should be used in a hierarchical manner</strong>, appropriate for the page, and not used for their size. To override a heading size, use a class with the corresponding heading name. See the example below.</p>",
            "priority": 50,
            "filelocation": "_src/sass/overrides/_ov-type.scss"
          }
        ]
      }
    ],
    "development": [
      {
        "category": "Colors",
        "id": "development-colors-blending_modes",
        "articles": [
          {
            "id": "development-colors-blending_modes",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Colors",
            "heading": "Blending Modes",
            "code": [],
            "markup": [],
            "comment": "<p><a href=\"https://github.com/heygrady/scss-blend-modes/blob/master/stylesheets/_blend-modes.scss\">Taken from Sass Blend Modes</a></p>\n                <h5 id=\"blend-normal-\" class=\"sg-heading sg-heading-5\"><code id=\"function-blend-normal\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"blend-normal()\">blend-normal()</code></h5>\n\n                <h6 id=\"function-forground-background-amount-0-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$forground, $background, $amount:0</code>)</h6>\n\n                <h5 id=\"blend-multiply-\" class=\"sg-heading sg-heading-5\"><code id=\"function-blend-multiply\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"blend-multiply()\">blend-multiply()</code></h5>\n\n                <h6 id=\"function-forground-background-amount-0-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$forground, $background, $amount:0</code>)</h6>\n\n                <h5 id=\"blend-lighten-\" class=\"sg-heading sg-heading-5\"><code id=\"function-blend-lighten\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"blend-lighten()\">blend-lighten()</code></h5>\n\n                <h6 id=\"function-forground-background-amount-0-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$forground, $background, $amount:0</code>)</h6>\n\n                <h5 id=\"blend-darken-\" class=\"sg-heading sg-heading-5\"><code id=\"function-blend-darken\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"blend-darken()\">blend-darken()</code></h5>\n\n                <h6 id=\"function-forground-background-amount-0-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$forground, $background, $amount:0</code>)</h6>\n\n                <h5 id=\"blend-lineardodge-\" class=\"sg-heading sg-heading-5\"><code id=\"function-blend-lineardodge\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"blend-lineardodge()\">blend-lineardodge()</code></h5>\n\n                <h6 id=\"function-forground-background-amount-0-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$forground, $background, $amount:0</code>)</h6>\n\n                <h5 id=\"blend-linearburn-\" class=\"sg-heading sg-heading-5\"><code id=\"function-blend-linearburn\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"blend-linearburn()\">blend-linearburn()</code></h5>\n\n                <h6 id=\"function-forground-background-amount-0-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$forground, $background, $amount:0</code>)</h6>\n\n                <h5 id=\"blend-difference\" class=\"sg-heading sg-heading-5\"><code class=\"sg-code sg-codespan\">blend-difference</code></h5>\n\n                <h6 id=\"function-forground-background-amount-0-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$forground, $background, $amount:0</code>)</h6>\n\n                <h5 id=\"blend-screen-\" class=\"sg-heading sg-heading-5\"><code id=\"function-blend-screen\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"blend-screen()\">blend-screen()</code></h5>\n\n                <h6 id=\"function-forground-background-amount-0-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$forground, $background, $amount:0</code>)</h6>\n\n                <h5 id=\"blend-exclusion-\" class=\"sg-heading sg-heading-5\"><code id=\"function-blend-exclusion\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"blend-exclusion()\">blend-exclusion()</code></h5>\n\n                <h6 id=\"function-forground-background-amount-0-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$forground, $background, $amount:0</code>)</h6>\n\n                <h5 id=\"blend-multiply-\" class=\"sg-heading sg-heading-5\"><code id=\"function-blend-multiply\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"blend-multiply()\">blend-multiply()</code></h5>\n\n                <h6 id=\"function-forground-background-amount-0-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$forground, $background, $amount:0</code>)</h6>",
            "priority": 2,
            "filelocation": "_src/sass/tools/_t-blendmodes.scss"
          },
          {
            "id": "development-colors-debugging",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Colors",
            "heading": "Debugging",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-color-palette-output-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-color-palette-output\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@color-palette-output()\">@color-palette-output()</code></h5>\n\n                <h6 id=\"mixin-selector-color-map-base-colors-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$selector</code>, <code class=\"sg-code sg-codespan\">$color-map:</code> <code id=\"variable--base-colors\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-colors\">$base-colors</code>)</h6>\n<p>Debugging tool that creates a pretty color palette (in columns) using psuedo selectors (nth-child required). Used for &#x201C;color blocks&#x201D; output, in style guide.</p><p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-map-add-depth\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"map-add-depth()\">map-add-depth()</code>, <code id=\"function-black-or-white\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"black-or-white()\">black-or-white()</code></code> </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-color-functions.scss"
          },
          {
            "id": "development-colors-manipulation",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Colors",
            "heading": "Manipulation",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"generate-color-varations-\" class=\"sg-heading sg-heading-5\"><code id=\"function-generate-color-varations\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"generate-color-varations()\">generate-color-varations()</code></h5>\n\n                <h6 id=\"function-map-colors-functions-tint-tint-tint-shade-shade-shade-increments-20-40-80-20-40-80-variations-light-lighter-lightest-dark-darker-darkest-blending-colors-null-\" class=\"sg-heading sg-heading-6\">function( <code class=\"sg-code sg-codespan\">$map: $colors, $functions: (tint, tint, tint, shade, shade, shade), $increments: (20%, 40%, 80%, 20%, 40%, 80%), $variations: (light, lighter, lightest, dark, darker, darkest), $blending-colors: null</code>)</h6>\n<p>Takes base color values and generates a full color palette. Used by the <code id=\"variable--base-colors\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-colors\">$base-colors</code> map to create a project&#x2019;s palette, accessible via <code id=\"function-colors\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"colors()\">colors()</code>.</p><p><strong>Arguments:</strong></p><ul>\n<li><code class=\"sg-code sg-codespan\">$map</code>: Color map you want to create variations of. Defaults to <code id=\"variable--base-colors\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-colors\">$base-colors</code>.</li>\n<li><code class=\"sg-code sg-codespan\">$functions</code>: color functions used to generate variations (e.g. lighten or darken). Can use any <code class=\"sg-code sg-codespan\">blend</code> function, provided <code class=\"sg-code sg-codespan\">$blending-colors</code> are provided.</li>\n<li><code class=\"sg-code sg-codespan\">$increments</code>: percentage amount to apply <code class=\"sg-code sg-codespan\">$function</code> to each <code class=\"sg-code sg-codespan\">$variations</code>.</li>\n<li><code class=\"sg-code sg-codespan\">$variations</code>: actual names for each color tone when <code id=\"function-colors\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"colors()\">colors()</code> used.</li>\n<li><code class=\"sg-code sg-codespan\">$blending-colors</code>: used when a function is a <code class=\"sg-code sg-codespan\">blend</code>. Can be a list or a single color.</li>\n</ul>\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-combine-color-maps\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"combine-color-maps()\">combine-color-maps()</code></code> </p><h5 id=\"black-or-white-\" class=\"sg-heading sg-heading-5\"><code id=\"function-black-or-white\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"black-or-white()\">black-or-white()</code></h5>\n\n                <h6 id=\"function-color-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$color</code>)</h6>\n<p>Change text color based on background-color&#x2019;s darkness.</p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-selector-tag\">div</span> {\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#f8cd12</span>;\n    <span class=\"hljs-attribute\">color</span>: set_text_color(<span class=\"hljs-number\">#f8cd12</span>);\n}\n<span class=\"hljs-comment\">// Your text color would be black because #f8cd12 and #00000 have more contrast.</span>\n</code></pre>\n</div>\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code id=\"function-set-text-color\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"set-text-color()\">set-text-color()</code> </p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code class=\"sg-code sg-codespan\">color-luminance</code></code> </p><h5 id=\"pick-best-color-\" class=\"sg-heading sg-heading-5\"><code id=\"function-pick-best-color\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"pick-best-color()\">pick-best-color()</code></h5>\n\n                <h6 id=\"function-base-colors-tolerance-0-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$base, $colors, $tolerance: 0</code>)</h6>\n<p>Compares a set of colors against <code class=\"sg-code sg-codespan\">$base</code> and returns the color with the most contrast. <code class=\"sg-code sg-codespan\">$colors</code> should be a list.\n<br>\n<a href=\"https://gist.github.com/voxpelli/6304812\">Taken from here</a></p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-selector-tag\">div</span> {\n    <span class=\"hljs-attribute\">color</span>: pick_best_color(<span class=\"hljs-number\">#f8cd12</span>, (<span class=\"hljs-number\">#a0a0c0</span>, <span class=\"hljs-number\">#fff</span>, <span class=\"hljs-number\">#2c2c2c</span>));\n}\n<span class=\"hljs-comment\">// The function would test the colors and find that #2c2c2c is the best.</span>\n</code></pre>\n</div>\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-color-contrast\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"color-contrast()\">color-contrast()</code>, <code id=\"function-color-luminance\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"color-luminance()\">color-luminance()</code></code> </p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  color </p><h5 id=\"color-contrast-\" class=\"sg-heading sg-heading-5\"><code id=\"function-color-contrast\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"color-contrast()\">color-contrast()</code></h5>\n\n                <h6 id=\"function-color1-color2-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$color1, $color2</code>)</h6>\n<p>Find contrast between two colors.\n<br>\n<a href=\"https://github.com/LeaVerou/contrast-ratio/blob/gh-pages/color.js\">Adapted from color.js</a></p><p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-color-luminance\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"color-luminance()\">color-luminance()</code></code> </p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number(0 - 1) </p><h5 id=\"color-luminance-\" class=\"sg-heading sg-heading-5\"><code id=\"function-color-luminance\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"color-luminance()\">color-luminance()</code></h5>\n\n                <h6 id=\"function-color1-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$color1</code>)</h6>\n<p>Find the relative luminance of a color. Used by <code id=\"function-color-contrast\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"color-contrast()\">color-contrast()</code>. <a href=\"https://github.com/LeaVerou/contrast-ratio/blob/gh-pages/color.js\">Adapted from color.js</a></p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code id=\"function-luma\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"luma()\">luma()</code> </p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number(0 - 1) </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-color-functions.scss"
          },
          {
            "id": "development-colors-lookup",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Colors",
            "heading": "Lookup",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"colors-\" class=\"sg-heading sg-heading-5\"><code id=\"function-colors\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"colors()\">colors()</code></h5>\n\n                <h6 id=\"function-color-name-tone-39-base-39-opacity-1-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$color-name, $tone: &apos;base&apos;, $opacity: 1</code>)</h6>\n<p>Get a color value from the global <code id=\"variable--base-colors\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-colors\">$base-colors</code> map. Darker and lighter tones are available by passing a second string.</p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-selector-class\">.foo</span> {\n    <span class=\"hljs-attribute\">background-color</span>: colors(links, light));\n}\n</code></pre>\n</div>\n<p>Passing only a color name will default to the &#x2018;base&#x2019; color.</p><p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code id=\"function-color\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"color()\">color()</code> </p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"variable--base-colors\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-colors\">$base-colors</code></code> </p><p><a href=\"http://blog.12spokes.com/web-design-development/simple-css-color-management-with-sass/\">Reference</a></p><h5 id=\"combine-color-maps-\" class=\"sg-heading sg-heading-5\"><code id=\"function-combine-color-maps\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"combine-color-maps()\">combine-color-maps()</code></h5>\n\n                <h6 id=\"function-map1-map2-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$map1 , $map2</code>)</h6>\n<p>Specialized function used by <code id=\"function-generate-color-variations\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"generate-color-variations()\">generate-color-variations()</code> to merge two color maps.</p><p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  map </p>",
            "priority": 99,
            "filelocation": "_src/sass/tools/_t-color-functions.scss"
          }
        ]
      },
      {
        "category": "Config",
        "id": "development-config-breakpoints",
        "articles": [
          {
            "id": "development-config-breakpoints",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Config",
            "heading": "Breakpoints",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-breakpoints\" class=\"sg-heading sg-heading-5\"><code id=\"variable--breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints\">$breakpoints</code></h5>\n\n                <h6 id=\"map-breakpoint-name-39-breakpoint-value-39-\" class=\"sg-heading sg-heading-6\">Map (<code class=\"sg-code sg-codespan\">breakpoint-name: &apos;breakpoint-value&apos;</code>)</h6>\n<p>Sets up variables for media-queries. Used in <code id=\"mixin-media-query\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@media-query()\">@media-query()</code>.</p><p><em>Note: It&#x2019;s usually good to convert your pixel values to ems to ensure best browser behavior. Can be accomplished via <code class=\"sg-code sg-codespan\">#{ems(10px)}</code></em></p><p><strong>Example</strong></p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-variable\">$breakpoints</span>: (\n  <span class=\"hljs-string\">&apos;small&apos;</span>:<span class=\"hljs-string\">&apos;(min-width: 320px)&apos;</span>,\n  <span class=\"hljs-string\">&apos;bigs&apos;</span>:<span class=\"hljs-string\">&apos;(min-width: 850px)&apos;</span>\n);\n</code></pre>\n</div>",
            "priority": 50,
            "filelocation": "_src/sass/_config.scss"
          },
          {
            "id": "development-config-color_settings",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Config",
            "heading": "Color Settings",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-base-colors\" class=\"sg-heading sg-heading-5\"><code id=\"variable--base-colors\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-colors\">$base-colors</code></h5>\n\n                <h6 id=\"map-key-color-value-\" class=\"sg-heading sg-heading-6\">Map (key : color value)</h6>\n<p>Sets up consistent color names to be used for color-palette. Dark and light values will be automatically generated. Key values should be accessed through <code id=\"function-colors\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"colors()\">colors()</code>.\n<br>\n<code class=\"sg-code sg-codespan\">type</code>, <code class=\"sg-code sg-codespan\">links</code>, and <code class=\"sg-code sg-codespan\">bg</code> key values are required for some starter styles. If you choose not to use them, just replace their references in the appropriate files.</p><p>Supports a nested map style like the following:</p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-variable\">$base-colors</span>: (\n  <span class=\"hljs-string\">&apos;type&apos;</span>:(\n    <span class=\"hljs-string\">&apos;base&apos;</span>:red,\n    <span class=\"hljs-string\">&apos;light&apos;</span>: pink,\n    <span class=\"hljs-string\">&apos;dark&apos;</span>:maroon\n  ),\n  <span class=\"hljs-string\">&apos;links&apos;</span>:(\n    <span class=\"hljs-string\">&apos;base&apos;</span>:blue,\n    <span class=\"hljs-string\">&apos;light&apos;</span>: sky,\n    <span class=\"hljs-string\">&apos;dark&apos;</span>: navy\n  ),\n  <span class=\"hljs-string\">&apos;bg&apos;</span>: (\n    <span class=\"hljs-string\">&apos;base&apos;</span>: <span class=\"hljs-number\">#fff</span>,\n    <span class=\"hljs-string\">&apos;dark&apos;</span>: <span class=\"hljs-number\">#ddd</span>\n  )\n);\n</code></pre>\n</div>",
            "priority": 50,
            "filelocation": "_src/sass/_config.scss"
          },
          {
            "id": "development-config-debug_settings",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Config",
            "heading": "Debug Settings",
            "code": [],
            "markup": [],
            "comment": "<p><em>NOTE: These settings, when set to <code class=\"sg-code sg-codespan\">true</code>, will slow down compilation somewhat.</em></p>\n                <h5 id=\"-debug-fonts\" class=\"sg-heading sg-heading-5\"><code id=\"variable--debug-fonts\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$debug-fonts\">$debug-fonts</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p>Whether to include debug statements about font sizes and line-heights as they&#x2019;re generated. Useful if you&#x2019;re getting weird values on auto-generated line-heights.</p><ul>\n<li>%: Distance from the lowest font-size.</li>\n<li>ub: Line-height upperbounds</li>\n<li>lb: Line-height lowerbounds</li>\n<li>lh: Final line-height (in pixels and unit-less).</li>\n<li>loops: Number of times it took to process the line-height. High numbers can indicate font-sizes that are very difficult to process.</li>\n</ul>\n\n                <h5 id=\"-debug-baseline\" class=\"sg-heading sg-heading-5\"><code id=\"variable--debug-baseline\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$debug-baseline\">$debug-baseline</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p>Adds style for a <code class=\"sg-code sg-codespan\">baseline-on</code> class that will show a grid of the baseline on any element (most useful on the <code class=\"sg-code sg-codespan\">body</code> or <code class=\"sg-code sg-codespan\">html</code> tag). Makes vertical alignment easier.</p>\n                <h5 id=\"-debug-silent-classes\" class=\"sg-heading sg-heading-5\"><code id=\"variable--debug-silent-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$debug-silent-classes\">$debug-silent-classes</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p>Stores all auto-generated silent classes into a map that is then output as a comment at the end of the final css. Useful for getting an overview of values that are stored by the framework.</p>\n                <h5 id=\"-debug-breakpoints\" class=\"sg-heading sg-heading-5\"><code id=\"variable--debug-breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$debug-breakpoints\">$debug-breakpoints</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p>Displays the current breakpoint (from <code id=\"variable--breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints\">$breakpoints</code>) name on a psuedo element on the body. Makes debugging media queries a little simpler.</p>",
            "priority": 50,
            "filelocation": "_src/sass/_config.scss"
          },
          {
            "id": "development-config-grid_settings",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Config",
            "heading": "Grid Settings",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-grid-columns\" class=\"sg-heading sg-heading-5\"><code id=\"variable--grid-columns\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-columns\">$grid-columns</code></h5>\n\n                <h6 id=\"number\" class=\"sg-heading sg-heading-6\">Number</h6>\n<p>Base number of grid columns to be generated. Note that any column number will include all fractions of the fewer columns. For instance, a 12-column grid would also include all fractions of 1-12 (including things like three-sevenths).</p>\n                <h5 id=\"-grid-gutter\" class=\"sg-heading sg-heading-5\"><code id=\"variable--grid-gutter\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-gutter\">$grid-gutter</code></h5>\n\n                <h6 id=\"pixel-value\" class=\"sg-heading sg-heading-6\">Pixel value</h6>\n<p>Space between grid items. Also used in <code id=\"function-type-space\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"type-space()\">type-space()</code> for horizontal spacing units.</p>\n                <h5 id=\"-grid-silent-classes\" class=\"sg-heading sg-heading-5\"><code id=\"variable--grid-silent-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-silent-classes\">$grid-silent-classes</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p>If set to false, actual grid classes will be output to CSS.</p>\n                <h5 id=\"-grid-push-grid-pull\" class=\"sg-heading sg-heading-5\"><code id=\"variable--grid-push\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-push\">$grid-push</code>, <code id=\"variable--grid-pull\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-pull\">$grid-pull</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p>Determines whether to include extra grid classes for positional grid modifiers.</p><h5 id=\"-grid-inline-block\" class=\"sg-heading sg-heading-5\"><code id=\"variable--grid-inline-block\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-inline-block\">$grid-inline-block</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p>Create grids using an inline-block-based layout.</p>\n                <h5 id=\"-grid-markup-fix\" class=\"sg-heading sg-heading-5\"><code id=\"variable--grid-markup-fix\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-markup-fix\">$grid-markup-fix</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p><strong>Only applicable to inline-block grid.</strong> If set to <code class=\"sg-code sg-codespan\">true</code>, html must have no white space (or comments) between grid items. Almost always set to <code class=\"sg-code sg-codespan\">false</code>.</p>\n                <h5 id=\"-grid-letter-space-fix\" class=\"sg-heading sg-heading-5\"><code id=\"variable--grid-letter-space-fix\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-letter-space-fix\">$grid-letter-space-fix</code></h5>\n\n                <h6 id=\"em-value\" class=\"sg-heading sg-heading-6\">em value</h6>\n<p><strong>Only applicable to inline-block grid.</strong> If <code id=\"variable--grid-markup-fix\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-markup-fix\">$grid-markup-fix</code> is not used, then a negative <code class=\"sg-code sg-codespan\">em</code> value must be set to remove whitespace between columns. Usually, <code class=\"sg-code sg-codespan\">-0.45em</code> works, but this should be adjusted based on the natural width of the font-family set on the body element.</p>\n                <h5 id=\"-grid-flex\" class=\"sg-heading sg-heading-5\"><code id=\"variable--grid-flex\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-flex\">$grid-flex</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p>If set to <code class=\"sg-code sg-codespan\">true</code>, the grid will add markup for a flexbox-based layout. Can be combined with an inline-block-based grid to provide an older browser fallback.</p>\n                <h5 id=\"-grid-floats\" class=\"sg-heading sg-heading-5\"><code id=\"variable--grid-floats\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-floats\">$grid-floats</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p>If set to <code class=\"sg-code sg-codespan\">true</code>, the grid uses floats-based layout. <strong>This is usually not recommended since inline-block and flexbox are much are more flexible.</strong></p><h5 id=\"-breakpoints-has-widths-breakpoints-has-push-breakpoints-has-pull\" class=\"sg-heading sg-heading-5\"><code id=\"variable--breakpoints-has-widths\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints-has-widths\">$breakpoints-has-widths</code>, <code id=\"variable--breakpoints-has-push\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints-has-push\">$breakpoints-has-push</code>, <code id=\"variable--breakpoints-has-pull\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints-has-pull\">$breakpoints-has-pull</code></h5>\n\n                <h6 id=\"list-string-\" class=\"sg-heading sg-heading-6\">List (string)</h6>\n<p>Determines what classes (widths, pushes, pulls) get generated at <code id=\"variable--breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints\">$breakpoints</code>. The list&#x2019;s order determines the output order. This is useful if you want one breakpoint to override another.</p>",
            "priority": 50,
            "filelocation": "_src/sass/_config.scss"
          },
          {
            "id": "development-config-responsive_settings",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Config",
            "heading": "Responsive Settings",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-max-site-width\" class=\"sg-heading sg-heading-5\"><code id=\"variable--max-site-width\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$max-site-width\">$max-site-width</code></h5>\n\n                <h6 id=\"pixel-value\" class=\"sg-heading sg-heading-6\">Pixel value</h6>\n<p>Maximum desktop width for the site wrapper.\n<br>\n<em>This value is also useful as a breakpoint, since this is the point at which your site is going to squish.</em></p>\n                <h5 id=\"-max-content-width\" class=\"sg-heading sg-heading-5\"><code id=\"variable--max-content-width\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$max-content-width\">$max-content-width</code></h5>\n\n                <h6 id=\"pixel-value\" class=\"sg-heading sg-heading-6\">Pixel value</h6>\n<p>Maximum width for content set at the <code id=\"variable--base-font-size\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-font-size\">$base-font-size</code>. This should be set to whatever creates the ideal line-length for standard content (Usually 45-75 characters).\n<br>\n<em>Also useful as a breakpoint, since it is typical that your viewport is now smaller than your ideal line-length.</em></p>\n                <h5 id=\"-max-wide-content-width\" class=\"sg-heading sg-heading-5\"><code id=\"variable--max-wide-content-width\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$max-wide-content-width\">$max-wide-content-width</code></h5>\n\n                <h6 id=\"pixel-value\" class=\"sg-heading sg-heading-6\">Pixel value</h6>\n<p>Similar to <code id=\"variable--max-content-width\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$max-content-width\">$max-content-width</code>, but for type that might be a little larger, but smaller than your maximum site width(<code id=\"variable--max-site-width\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$max-site-width\">$max-site-width</code>). Useful for hero-style text treatments and content blocks that need a bit of constraint.</p>",
            "priority": 50,
            "filelocation": "_src/sass/_config.scss"
          },
          {
            "id": "development-config-slick_settings",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Config",
            "heading": "Slick Settings",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-slick-\" class=\"sg-heading sg-heading-5\"><code id=\"variable--slick------\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$slick-[]-[]\">$slick-[]-[]</code></h5>\n<p>Configuration for slick carousel jQuery plugin.\n<br>\n<a href=\"https://github.com/kenwheeler/slick/#sass-variables\">See Slick documentation for more</a></p>",
            "priority": 50,
            "filelocation": "_src/sass/_config.scss"
          },
          {
            "id": "development-config-typography_settings",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Config",
            "heading": "Typography Settings",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-base-font-size\" class=\"sg-heading sg-heading-5\"><code id=\"variable--base-font-size\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-font-size\">$base-font-size</code></h5>\n\n                <h6 id=\"pixel-value\" class=\"sg-heading sg-heading-6\">Pixel value</h6>\n<p>Font size all other values will use for calculation. Will be converted to <code class=\"sg-code sg-codespan\">rems</code>.</p>\n                <h5 id=\"-base-line-height\" class=\"sg-heading sg-heading-5\"><code id=\"variable--base-line-height\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-line-height\">$base-line-height</code></h5>\n\n                <h6 id=\"pixel-value\" class=\"sg-heading sg-heading-6\">Pixel value</h6>\n<p>Line-height for base font-size. Will be used to determine the vertical spacing values when <code id=\"function-type-space\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"type-space()\">type-space()</code> is used.</p>\n                <h5 id=\"-font-looseness\" class=\"sg-heading sg-heading-5\"><code id=\"variable--font-looseness\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-looseness\">$font-looseness</code></h5>\n\n                <h6 id=\"percentage\" class=\"sg-heading sg-heading-6\">Percentage</h6>\n<p>What to base the tightness/looseness of automatically-generated <code class=\"sg-code sg-codespan\">line-heights</code>.</p>\n                <h5 id=\"-auto-scale-type\" class=\"sg-heading sg-heading-5\"><code id=\"variable--auto-scale-type\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$auto-scale-type\">$auto-scale-type</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p>Uses <code id=\"variable--scale-ratio\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$scale-ratio\">$scale-ratio</code> to create font sizes for headings starting from the <code id=\"variable--base-font-size\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-font-size\">$base-font-size</code>. Overwrites <code id=\"variable--type--h---size\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$type-[h#]-size\">$type-[h#]-size</code>.</p>\n                <h5 id=\"-scale-ratio\" class=\"sg-heading sg-heading-5\"><code id=\"variable--scale-ratio\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$scale-ratio\">$scale-ratio</code></h5>\n\n                <h6 id=\"numeric-float-\" class=\"sg-heading sg-heading-6\">Numeric (float)</h6>\n<p>Used for <code id=\"variable--auto-scale-type\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$auto-scale-type\">$auto-scale-type</code> and for <code id=\"function-modular-scale\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"modular-scale()\">modular-scale()</code>.</p>\n                <h5 id=\"-rem-px-fallback\" class=\"sg-heading sg-heading-5\"><code id=\"variable--rem-px-fallback\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$rem-px-fallback\">$rem-px-fallback</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p>Determines whether <code id=\"function-rems\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"rems()\">rems()</code> conversion includes a pixel-value fallback for older browsers like IE8.</p>\n                <h5 id=\"-indented-paragraphs\" class=\"sg-heading sg-heading-5\"><code id=\"variable--indented-paragraphs\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$indented-paragraphs\">$indented-paragraphs</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p>Determines whether to generate css for paragraphs with a text indent, rather than paragraphs with margins between them.</p><h5 id=\"-type-h-size\" class=\"sg-heading sg-heading-5\"><code id=\"variable--type--h---size\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$type-[h#]-size\">$type-[h#]-size</code></h5>\n\n                <h6 id=\"list-pixel-value-pixel-or-unitless-value-\" class=\"sg-heading sg-heading-6\">List (pixel value [, pixel or unitless value])</h6>\n<p>Variables used to generate heading (and small) font-sizes and line-heights. A secondary value will force the line-height to that base-value.</p><p><em>NOTE: First value must be pixel values(or a function that generates a pixel value like <code id=\"function-modular-scale\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"modular-scale()\">modular-scale()</code>), but the optional secondary value can be unitless.</em></p><h5 id=\"-primary-font-stack-secondary-font-stack-monospace-font-stack-icon-font-stack\" class=\"sg-heading sg-heading-5\"><code id=\"variable--primary-font-stack\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$primary-font-stack\">$primary-font-stack</code>, <code id=\"variable--secondary-font-stack\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$secondary-font-stack\">$secondary-font-stack</code>, <code id=\"variable--monospace-font-stack\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$monospace-font-stack\">$monospace-font-stack</code>, <code id=\"variable--icon-font-stack\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$icon-font-stack\">$icon-font-stack</code></h5>\n\n                <h6 id=\"string\" class=\"sg-heading sg-heading-6\">String</h6>\n<p>Used wherever font-families are declared. Use <code class=\"sg-code sg-codespan\">null</code> if nothing exists.</p>\n                <h5 id=\"-use-web-fonts\" class=\"sg-heading sg-heading-5\"><code id=\"variable--use-web-fonts\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$use-web-fonts\">$use-web-fonts</code></h5>\n\n                <h6 id=\"boolean\" class=\"sg-heading sg-heading-6\">Boolean</h6>\n<p>Whether to generate <code class=\"sg-code sg-codespan\">@font-face</code> values based on <code id=\"variable--font-file-name\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-file-name\">$font-file-name</code> (and the other <code class=\"sg-code sg-codespan\">$font-</code> variables).</p>\n                <h5 id=\"-font-file-name\" class=\"sg-heading sg-heading-5\"><code id=\"variable--font-file-name\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-file-name\">$font-file-name</code></h5>\n\n                <h6 id=\"list-string-\" class=\"sg-heading sg-heading-6\">List (string)</h6>\n<p>Uses for automatically generated <code class=\"sg-code sg-codespan\">@font-face</code> declarations. Describes the filename as well as the font-family name reference. <em>File names and @font-face values must be the same (e.g. &#x2018;opensans&#x2019; and &#x2018;opensans.ttf&#x2019;).<strong>Casing matters</strong>.</em></p>\n                <h5 id=\"-font-weights\" class=\"sg-heading sg-heading-5\"><code id=\"variable--font-weights\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-weights\">$font-weights</code></h5>\n\n                <h6 id=\"list-nested-\" class=\"sg-heading sg-heading-6\">List (nested)</h6>\n<p>Each parenthesis corresponds to each name in <code id=\"variable--font-file-name\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-file-name\">$font-file-name</code>. Determines how many <code class=\"sg-code sg-codespan\">@font-face</code> weights are generated per font.</p>\n                <h5 id=\"-font-italics\" class=\"sg-heading sg-heading-5\"><code id=\"variable--font-italics\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-italics\">$font-italics</code></h5>\n\n                <h6 id=\"list-nested-boolean-\" class=\"sg-heading sg-heading-6\">List (nested) (boolean)</h6>\n<p>Corresponds to each value in <code id=\"variable--font-weights\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-weights\">$font-weights</code>. (e.g. if <code class=\"sg-code sg-codespan\">$font-weights: (400,700),(200,400)</code> and <code class=\"sg-code sg-codespan\">$font-italics: (true),(false,true)</code> then the first font will have italics in the 400 and 700 weights while second font will have italics in the 400 weight).</p>\n                <h5 id=\"-font-include-woff2\" class=\"sg-heading sg-heading-5\"><code id=\"variable--font-include-woff2\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-include-woff2\">$font-include-woff2</code></h5>\n\n                <h6 id=\"boolean-list-\" class=\"sg-heading sg-heading-6\">Boolean (list)</h6>\n<p>Determines whether woff2 formats be included in the <code class=\"sg-code sg-codespan\">@font-face</code> generation. Can be a list if each font has different values (not recommended since woff2 is the most performant font-file format).</p>\n                <h5 id=\"-font-include-eot\" class=\"sg-heading sg-heading-5\"><code id=\"variable--font-include-eot\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-include-eot\">$font-include-eot</code></h5>\n\n                <h6 id=\"boolean-list-\" class=\"sg-heading sg-heading-6\">Boolean (list)</h6>\n<p>Determines whether to generate <code class=\"sg-code sg-codespan\">@font-face</code> values that point at an .eot file. Fallback for IE8.</p>",
            "priority": 50,
            "filelocation": "_src/sass/_config.scss"
          },
          {
            "id": "development-config-utility_class_settings",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Config",
            "heading": "Utility Class Settings",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-display-classes\" class=\"sg-heading sg-heading-5\"><code id=\"variable--display-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$display-classes\">$display-classes</code></h5>\n\n                <h6 id=\"map-string-string-\" class=\"sg-heading sg-heading-6\">Map (string: string)</h6>\n<p>Variable used to generate display classes. Key value pairs determine the class name and the display value.</p><p><strong>Example</strong></p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-comment\">//SCSS input</span>\n<span class=\"hljs-variable\">$display-classes</span>: (<span class=\"hljs-string\">&apos;show&apos;</span>:<span class=\"hljs-string\">&apos;block&apos;</span>);\n\n<span class=\"hljs-comment\">//CSS output</span>\n<span class=\"hljs-selector-class\">.show</span> { <span class=\"hljs-attribute\">display</span>: block; }\n</code></pre>\n</div>\n\n                <h5 id=\"-spacing-classes\" class=\"sg-heading sg-heading-5\"><code id=\"variable--spacing-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$spacing-classes\">$spacing-classes</code></h5>\n\n                <h6 id=\"map-string-string-\" class=\"sg-heading sg-heading-6\">Map (<code class=\"sg-code sg-codespan\">string: string</code>)</h6>\n<p>Variable used to generate utility (override) spacing classes. Classes are created via <code id=\"mixin-spacing-utilities\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@spacing-utilities()\">@spacing-utilities()</code>.</p><p><strong>Keys and Values</strong></p><ul>\n<li>&#x2018;directions&#x2019;: Direction class suffixes.</li>\n<li>&#x2018;units&#x2019;: Numeric multiples (e.g. <code class=\"sg-code sg-codespan\">2</code> or <code class=\"sg-code sg-codespan\">-1</code>) of your spacing units (<code id=\"variable--horizontal-space\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$horizontal-space\">$horizontal-space</code> and <code id=\"variable--vertical-space\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$vertical-space\">$vertical-space</code>).</li>\n<li>&#x2018;properties&#x2019;: Class name aliases for padding and margin.</li>\n</ul>\n<p><strong>Example</strong></p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-comment\">//SCSS Input</span>\n    <span class=\"hljs-variable\">$display-classes</span>: (\n        <span class=\"hljs-string\">&apos;directions&apos;</span>: (\n            <span class=\"hljs-string\">&apos;-t&apos;</span>: <span class=\"hljs-string\">&apos;top&apos;</span>,\n            <span class=\"hljs-string\">&apos;-r&apos;</span>: <span class=\"hljs-string\">&apos;right&apos;</span>,\n            <span class=\"hljs-string\">&apos;-v&apos;</span>: <span class=\"hljs-string\">&apos;top&apos;</span> <span class=\"hljs-string\">&apos;bottom&apos;</span>\n        ),\n        <span class=\"hljs-string\">&apos;units&apos;</span>: (\n            <span class=\"hljs-string\">&apos;-2&apos;</span>: <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-string\">&apos;-neg&apos;</span>: -<span class=\"hljs-number\">1</span>\n        ),\n        <span class=\"hljs-string\">&apos;properties&apos;</span>: (\n            <span class=\"hljs-string\">&apos;pad&apos;</span>: <span class=\"hljs-string\">&apos;padding&apos;</span>,\n            <span class=\"hljs-string\">&apos;margin&apos;</span>: <span class=\"hljs-string\">&apos;space&apos;</span>\n        )\n    );\n\n<span class=\"hljs-comment\">//CSS output</span>\n    <span class=\"hljs-comment\">// Assume spacing units are 1rem, for simplicity</span>\n    <span class=\"hljs-selector-class\">.space-t-2</span>, <span class=\"hljs-selector-class\">.space-v-2</span> { <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">2rem</span>; }\n    <span class=\"hljs-selector-class\">.space-v-2</span> { <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">2rem</span>; }\n    <span class=\"hljs-selector-class\">.space-r-2</span> { <span class=\"hljs-attribute\">margin-right</span>: <span class=\"hljs-number\">2rem</span>; }\n    <span class=\"hljs-selector-class\">.space-t-neg</span> { <span class=\"hljs-attribute\">margin-top</span>: -<span class=\"hljs-number\">1rem</span>; }\n    <span class=\"hljs-selector-class\">.space-r-neg</span> { <span class=\"hljs-attribute\">margin-right</span>: -<span class=\"hljs-number\">1rem</span>; }\n\n    <span class=\"hljs-selector-class\">.pad-t-2</span> { <span class=\"hljs-attribute\">padding-top</span>: <span class=\"hljs-number\">2rem</span>; }\n    <span class=\"hljs-selector-class\">.pad-r-2</span> { <span class=\"hljs-attribute\">padding-right</span>: <span class=\"hljs-number\">2rem</span>;}\n    <span class=\"hljs-comment\">//--Negative padding classes filtered out since they are invalid---//</span>\n\n    @<span class=\"hljs-keyword\">media</span> only screen and (min-width:<span class=\"hljs-number\">300px</span>){...}\n    <span class=\"hljs-comment\">//repeated for all media-queries defined by $breakpoints-has-spacing-classes...</span>\n</code></pre>\n</div><h5 id=\"-breakpoints-has-alignment-classes-breakpoints-has-spacing-classes-breakpoints-has-display-classes-breakpoint-has-type-classes\" class=\"sg-heading sg-heading-5\"><code id=\"variable--breakpoints-has-alignment-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints-has-alignment-classes\">$breakpoints-has-alignment-classes</code>, <code id=\"variable--breakpoints-has-spacing-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints-has-spacing-classes\">$breakpoints-has-spacing-classes</code>, <code class=\"sg-code sg-codespan\">$breakpoints-has-display-classes</code>, <code class=\"sg-code sg-codespan\">$breakpoint-has-type-classes</code></h5>\n\n                <h6 id=\"list-keys-from-breakpoints-\" class=\"sg-heading sg-heading-6\">List (keys from <code id=\"variable--breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints\">$breakpoints</code>)</h6>\n<p>Determines what utility classes get generated at <code id=\"variable--breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints\">$breakpoints</code>. The list&#x2019;s order determines cascade The list&#x2019;s order determines the output order. This is useful if you want one breakpoint to override another.\n<br>\nA <code class=\"sg-code sg-codespan\">false</code> value will output no classes of that type.</p>",
            "priority": 50,
            "filelocation": "_src/sass/_config.scss"
          }
        ]
      },
      {
        "category": "Functions",
        "id": "development-functions-conversion",
        "articles": [
          {
            "id": "development-functions-conversion",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Functions",
            "heading": "Conversion",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"strip-units-\" class=\"sg-heading sg-heading-5\"><code id=\"function-strip-units\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"strip-units()\">strip-units()</code></h5>\n\n                <h6 id=\"function-value-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$value</code>)</h6>\n<p>Remove lengths (<code class=\"sg-code sg-codespan\">px</code>, <code class=\"sg-code sg-codespan\">em</code>, <code class=\"sg-code sg-codespan\">rem</code>, etc.) from a value. Usually a variable. This is sometimes required because Sass cannot calculate incompatible units (<code class=\"sg-code sg-codespan\">px * rem</code> for instance).\n<br>\n<a href=\"http://stackoverflow.com/questions/12328259/how-do-you-strip-the-unit-from-any-number-in-sass\">Reference</a></p>\n                <h5 id=\"percentage-to-decimal-\" class=\"sg-heading sg-heading-5\"><code id=\"function-percentage-to-decimal\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"percentage-to-decimal()\">percentage-to-decimal()</code></h5>\n\n                <h6 id=\"function-percentage-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$percentage</code>)</h6>\n<p>Changes percent value to decimal.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p>\n                <h5 id=\"px-to-vw-\" class=\"sg-heading sg-heading-5\"><code id=\"function-px-to-vw\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"px-to-vw()\">px-to-vw()</code></h5>\n\n                <h6 id=\"function-pixels-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$pixels</code>)</h6>\n<p>Converts pixel dimensions to viewport width (vw) dimensions.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number (vw) </p>\n                <h5 id=\"px-to-rems-\" class=\"sg-heading sg-heading-5\"><code id=\"function-px-to-rems\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"px-to-rems()\">px-to-rems()</code></h5>\n\n                <h6 id=\"function-pixels-base-font-base-font-size-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$pixels, $base-font:</code> <code id=\"variable--base-font-size\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-font-size\">$base-font-size</code>)</h6>\n<p>Function for calculating <code class=\"sg-code sg-codespan\">rem</code> values. Used by <code id=\"mixin-px-to-rems\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@px-to-rems()\">@px-to-rems()</code>. The <code class=\"sg-code sg-codespan\">$base-size</code> is used to calculate the value (e.g. if the body&#x2019;s font-size is <code class=\"sg-code sg-codespan\">16px</code>, then the rem value of <code class=\"sg-code sg-codespan\">24px</code> would be <code class=\"sg-code sg-codespan\">1.5rem</code>).</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number (rems) </p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code id=\"function-rems\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"rems()\">rems()</code> </p>\n                <h5 id=\"px-to-ems-\" class=\"sg-heading sg-heading-5\"><code id=\"function-px-to-ems\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"px-to-ems()\">px-to-ems()</code></h5>\n\n                <h6 id=\"function-pixels-context-base-font-size-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$pixels, $context:</code> <code class=\"sg-code sg-codespan\">$base-font-size</code>)</h6>\n<p>Function for calculating <code class=\"sg-code sg-codespan\">em</code> values. The <code class=\"sg-code sg-codespan\">$context</code> is used to calculate the final value. Different from <code id=\"function-px-to-rems\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"px-to-rems()\">px-to-rems()</code> by generating a value with an <code class=\"sg-code sg-codespan\">em</code>. <code class=\"sg-code sg-codespan\">$context</code> is often necessary based on the situation.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number(ems) </p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code id=\"function-ems\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"ems()\">ems()</code> </p>\n                <h5 id=\"list-to-string-\" class=\"sg-heading sg-heading-5\"><code id=\"function-list-to-string\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"list-to-string()\">list-to-string()</code></h5>\n\n                <h6 id=\"function-list-separator-39-39-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$list, $separator:&apos;,&apos;</code>)</h6>\n<p>Converts a list to a string with an optional separator.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  string </p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code id=\"function-str-join\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"str-join()\">str-join()</code> </p>\n                <h5 id=\"str-to-number-\" class=\"sg-heading sg-heading-5\"><code id=\"function-str-to-number\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"str-to-number()\">str-to-number()</code></h5>\n\n                <h6 id=\"function-string-unitless-false-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$string, $unitless: false</code>)</h6>\n<p>Converts a number-like string to a number. Since Sass accepts quoted and non-quoted values like <code class=\"sg-code sg-codespan\">&quot;10px&quot;</code> and <code class=\"sg-code sg-codespan\">10px</code>, but can only do math on the unquoted (number) value, it is sometimes necessary to convert/cast a string to a number.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-functions.scss"
          },
          {
            "id": "development-functions-general",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Functions",
            "heading": "General",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"cache-\" class=\"sg-heading sg-heading-5\"><code id=\"function-cache\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"cache()\">cache()</code></h5>\n\n                <h6 id=\"function-function-name-args-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$function-name, $args...</code>)</h6>\n<p>Memoize (cache) a function&#x2019;s return values and arguments. Speeds up processing on intensive functions that get called many times (with the same arguments).</p><p><em>NOTE: This can actually <strong>increase</strong> processing time if used too often or on simple functions as the lookup process isn&#x2019;t free. Every cached value is unique.</em></p><p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  function result </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-functions.scss"
          },
          {
            "id": "development-functions-maps",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Functions",
            "heading": "Maps",
            "code": [],
            "markup": [],
            "comment": "<p><a href=\"http://www.sitepoint.com/extra-map-functions-sass/\">Reference</a></p>\n                <h5 id=\"map-deep-set-\" class=\"sg-heading sg-heading-5\"><code id=\"function-map-deep-set\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"map-deep-set()\">map-deep-set()</code></h5>\n\n                <h6 id=\"function-map-keys-value-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$map, $keys... [, $value]</code>)</h6>\n<p>Add to a deeply nested map key. Accepts any number of keys, but the final value is the new key.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  map </p>\n                <h5 id=\"map-depth-\" class=\"sg-heading sg-heading-5\"><code id=\"function-map-depth\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"map-depth()\">map-depth()</code></h5>\n\n                <h6 id=\"function-map-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$map</code>)</h6>\n<p>Find depth of a <code class=\"sg-code sg-codespan\">$map</code>.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p>\n                <h5 id=\"map-has-keys-\" class=\"sg-heading sg-heading-5\"><code id=\"function-map-has-keys\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"map-has-keys()\">map-has-keys()</code></h5>\n\n                <h6 id=\"-map-key-s-to-be-checked-\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">[map], [key(s) to be checked ...]</code></h6>\n<p>Determine whether a map contains certain keys.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  boolean </p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code id=\"function-map-contains-keys\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"map-contains-keys()\">map-contains-keys()</code> </p>\n                <h5 id=\"map-has-nested-keys-\" class=\"sg-heading sg-heading-5\"><code id=\"function-map-has-nested-keys\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"map-has-nested-keys()\">map-has-nested-keys()</code></h5>\n\n                <h6 id=\"function-map-keys-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$map</code>, <code class=\"sg-code sg-codespan\">$keys...</code>)</h6>\n<p>Check for the value of a nested key.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  boolean </p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code id=\"function-map-contains-nested-keys\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"map-contains-nested-keys()\">map-contains-nested-keys()</code> </p>\n                <h5 id=\"map-get-nested-\" class=\"sg-heading sg-heading-5\"><code id=\"function-map-get-nested\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"map-get-nested()\">map-get-nested()</code></h5>\n\n                <h6 id=\"function-map-keys-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$map</code>, <code class=\"sg-code sg-codespan\">$keys...</code>)</h6>\n<p>Returns nested map values. A deep version of Sass&#x2019; <code id=\"function-map-get\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"map-get()\">map-get()</code>.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  string, boolean, list, or map </p>\n                <h5 id=\"map-extend-\" class=\"sg-heading sg-heading-5\"><code id=\"function-map-extend\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"map-extend()\">map-extend()</code></h5>\n\n                <h6 id=\"function-map-maps-deep-true-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$map</code>, <code class=\"sg-code sg-codespan\">$maps...</code>(<code class=\"sg-code sg-codespan\">$deep:true</code>))</h6>\n<p>Merges multiple maps. Similar to jQuery&#x2019;s .extend().</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  map </p>\n                <h5 id=\"map-add-depth-\" class=\"sg-heading sg-heading-5\"><code id=\"function-map-add-depth\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"map-add-depth()\">map-add-depth()</code></h5>\n\n                <h6 id=\"function-map-new-key-39-base-39-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$map</code>, <code class=\"sg-code sg-codespan\">$new-key:&apos;base&apos;</code>)</h6>\n<p>Adds one level to a map using the new key to a map. Used by <code id=\"function-generate_color_varations\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"generate_color_varations()\">generate_color_varations()</code>. (e.g. <code class=\"sg-code sg-codespan\">(key: value, key: value)</code> becomes <code class=\"sg-code sg-codespan\">(key:(new-key: value), key:(new-key: value))</code> )</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  map </p>\n                <h5 id=\"map-print-\" class=\"sg-heading sg-heading-5\"><code id=\"function-map-print\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"map-print()\">map-print()</code></h5>\n\n                <h6 id=\"function-map-level-1-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$map</code>, <code class=\"sg-code sg-codespan\">$level:1</code>)</h6>\n<p>Prints map into a string (in a JSON-esque format). Useful for debugging.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  string </p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code id=\"function-map-inspect\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"map-inspect()\">map-inspect()</code> </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-functions.scss"
          },
          {
            "id": "development-functions-math",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Functions",
            "heading": "Math",
            "code": [],
            "markup": [],
            "comment": "<p>Most functions taken from <a href=\"https://github.com/Team-Sass/Sassy-math/blob/master/sass/math.scss\">Sassy Math</a>.</p><h5 id=\"pow-\" class=\"sg-heading sg-heading-5\"><code id=\"function-pow\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"pow()\">pow()</code></h5>\n\n                <h6 id=\"function-number-exponent-precision-12-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$number</code>, <code class=\"sg-code sg-codespan\">$exponent</code>, <code class=\"sg-code sg-codespan\">$precision:12</code>)</h6>\n<p>A more robust exponent multiplication which allows for decimal-based exponents. This <strong>fully</strong> replaces Compass&#x2019; pow() function (allows for float-based exponents).</p><p><a href=\"https://gist.github.com/nathancrank/7539155\">Reference</a></p><p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code id=\"function-log\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"log()\">log()</code> </p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code id=\"function-exponent\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"exponent()\">exponent()</code> </p><h5 id=\"log-\" class=\"sg-heading sg-heading-5\"><code id=\"function-log\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"log()\">log()</code></h5>\n\n                <h6 id=\"function-x-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$x</code>)</h6>\n<p>Returns the natural logarithm of a number.</p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-variable\">$value</span>:   log(<span class=\"hljs-number\">2</span>)  // <span class=\"hljs-number\">0.69315</span>\n<span class=\"hljs-variable\">$value2</span>:  log(<span class=\"hljs-number\">10</span>) // <span class=\"hljs-number\">2.30259</span>\n</code></pre>\n</div>\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p><h5 id=\"frexp-\" class=\"sg-heading sg-heading-5\"><code id=\"function-frexp\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"frexp()\">frexp()</code></h5>\n\n                <h6 id=\"function-x-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$x</code>)</h6>\n<p>Returns a two-element list containing the normalized fraction and exponent of number.</p><p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  list (fraction, exponent) </p><h5 id=\"ldexp-\" class=\"sg-heading sg-heading-5\"><code id=\"function-ldexp\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"ldexp()\">ldexp()</code></h5>\n\n                <h6 id=\"function-x-exp-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$x, $exp</code>)</h6>\n<p>Returns $x * 2^$exp</p><h5 id=\"exp-\" class=\"sg-heading sg-heading-5\"><code id=\"function-exp\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"exp()\">exp()</code></h5>\n\n                <h6 id=\"function-x-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$x</code>)</h6>\n<p>Returns E^x, where x is the argument, and E is Euler&#x2019;s constant, the base of the natural logarithms.</p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-variable\">$value</span>: exp(<span class=\"hljs-number\">1</span>)  // <span class=\"hljs-number\">2.71828</span>\n<span class=\"hljs-variable\">$value2</span>: exp(-<span class=\"hljs-number\">1</span>) // <span class=\"hljs-number\">0.36788</span>\n</code></pre>\n</div>\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  Number </p><h5 id=\"fact-\" class=\"sg-heading sg-heading-5\"><code id=\"function-fact\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"fact()\">fact()</code></h5>\n\n                <h6 id=\"function-x-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$x</code>)</h6>\n<p>Returns the factorial of a non-negative integer.</p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-variable\">$value</span>:  fact(<span class=\"hljs-number\">0</span>) // <span class=\"hljs-number\">1</span>\n<span class=\"hljs-variable\">$value2</span>: fact(<span class=\"hljs-number\">8</span>) // <span class=\"hljs-number\">40320</span>\n</code></pre>\n</div>\n<p data-code-meta=\"return\" class=\"sg-code-meta sg-code-meta-value\">  Number </p><h5 id=\"gcd-\" class=\"sg-heading sg-heading-5\"><code id=\"function-gcd\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"gcd()\">gcd()</code></h5>\n\n                <h6 id=\"function-number-1-number-2-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$number-1</code>, <code class=\"sg-code sg-codespan\">$number-2</code>)</h6>\n<p>Greatest Common Divisor calculation (useful for calculating grids and widths).</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p><h5 id=\"lcm-\" class=\"sg-heading sg-heading-5\"><code id=\"function-lcm\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"lcm()\">lcm()</code></h5>\n\n                <h6 id=\"function-a-b-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$a</code>, <code class=\"sg-code sg-codespan\">$b</code>)</h6>\n<p>Finds the least common multiple. Use with caution&#x2026;if there is no LCM, then you compilation will error out.</p><p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p><h5 id=\"nth_root-\" class=\"sg-heading sg-heading-5\"><code id=\"function-nth_root\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"nth_root()\">nth_root()</code></h5>\n\n                <h6 id=\"function-base-n-2-precision-12-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$base</code>, <code class=\"sg-code sg-codespan\">$n:2</code>, <code class=\"sg-code sg-codespan\">$precision:12</code>)</h6>\n<p>Advanced calculation for square roots, cube roots, etc. of a value.\n<br>\n<a href=\"http://rosettacode.org/wiki/Nth_root#JavaScript\">Reference</a></p><p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p><h5 id=\"sqrt-\" class=\"sg-heading sg-heading-5\"><code id=\"function-sqrt\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"sqrt()\">sqrt()</code></h5>\n\n                <h6 id=\"function-base-precision-12-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$base</code>, <code class=\"sg-code sg-codespan\">$precision:12</code>)</h6>\n<p>Find the square root of a value.</p><p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-sqroot\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"sqroot()\">sqroot()</code></code> </p><h5 id=\"sin-\" class=\"sg-heading sg-heading-5\"><code id=\"function-sin\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"sin()\">sin()</code></h5>\n\n                <h6 id=\"function-angle-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$angle</code>)</h6>\n<p>Determines the Sine of an angle.\n<br>\n<a href=\"https://unindented.org/articles/trigonometry-in-sass/\">Reference</a></p><p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p><h5 id=\"cos-\" class=\"sg-heading sg-heading-5\"><code id=\"function-cos\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"cos()\">cos()</code></h5>\n\n                <h6 id=\"function-angle-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$angle</code>)</h6>\n<p>Determines the Cosine of an angle.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p><h5 id=\"tan-\" class=\"sg-heading sg-heading-5\"><code id=\"function-tan\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"tan()\">tan()</code></h5>\n\n                <h6 id=\"function-angle-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$angle</code>)</h6>\n<p>Determines the Tangent of an angle.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p><h5 id=\"golden-\" class=\"sg-heading sg-heading-5\"><code id=\"function-golden\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"golden()\">golden()</code></h5>\n\n                <h6 id=\"function-base-1-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$base: 1</code>)</h6>\n<p>Get the golden ratio from <code class=\"sg-code sg-codespan\">$base</code>.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"variable--golden_ratio\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$golden_ratio\">$golden_ratio</code></code> </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-functions.scss"
          },
          {
            "id": "development-functions-strings_&_lists",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Functions",
            "heading": "Strings & Lists",
            "code": [],
            "markup": [],
            "comment": "<p><a href=\"https://github.com/devatrox/Sunglass\">Reference</a></p>\n                <h5 id=\"contains-\" class=\"sg-heading sg-heading-5\"><code id=\"function-contains\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"contains()\">contains()</code></h5>\n\n                <h6 id=\"function-data-value-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$data, $value</code>)</h6>\n<p>Generic <code class=\"sg-code sg-codespan\">contains</code> function(similar to javascript&#x2019;s <code class=\"sg-code sg-codespan\">indexOf</code>). Parses a variable(<code class=\"sg-code sg-codespan\">$data</code>) for a <code class=\"sg-code sg-codespan\">$value</code>. Returns boolean.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  boolean </p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-str-contains\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"str-contains()\">str-contains()</code>, <code id=\"function-list-contains\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"list-contains()\">list-contains()</code></code> </p>\n                <h5 id=\"str-join-\" class=\"sg-heading sg-heading-5\"><code id=\"function-str-join\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"str-join()\">str-join()</code></h5>\n\n                <h6 id=\"function-list-separator-39-39-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$list, $separator:&apos;,&apos;</code>)</h6>\n<p>Converts a map or list to a string (<code class=\"sg-code sg-codespan\">(&apos;this&apos;, &apos;and&apos;, &apos;this&apos;)</code> becomes <code class=\"sg-code sg-codespan\">&apos;this,and,this&apos;</code>).</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  string </p>\n                <h5 id=\"str-contains-\" class=\"sg-heading sg-heading-5\"><code id=\"function-str-contains\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"str-contains()\">str-contains()</code></h5>\n\n                <h6 id=\"function-string-value-pos-0-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$string, $value, $pos: 0</code>)</h6>\n<p>Checks if a <code class=\"sg-code sg-codespan\">$string</code> contains a <code class=\"sg-code sg-codespan\">$value</code>. Optionally accepts a start positon.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  boolean </p>\n                <h5 id=\"str-append-\" class=\"sg-heading sg-heading-5\"><code id=\"function-str-append\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"str-append()\">str-append()</code></h5>\n\n                <h6 id=\"function-data-separator-39-39-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$data, $separator:&apos;,&apos;</code>)</h6>\n<p>Adds one string to another (e.g. <code class=\"sg-code sg-codespan\">str-append(&apos;hello&apos;, &apos;world&apos;)</code> becomes <code class=\"sg-code sg-codespan\">hello world</code>).</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  string </p>\n                <h5 id=\"list-contains-\" class=\"sg-heading sg-heading-5\"><code id=\"function-list-contains\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"list-contains()\">list-contains()</code></h5>\n\n                <h6 id=\"function-list-value-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$list, $value</code>)</h6>\n<p>Checks whether a <code class=\"sg-code sg-codespan\">$list</code> contains a <code class=\"sg-code sg-codespan\">$value</code>.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  boolean </p>\n                <h5 id=\"list-print-\" class=\"sg-heading sg-heading-5\"><code id=\"function-list-print\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"list-print()\">list-print()</code></h5>\n\n                <h6 id=\"function-list-depth-1-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$list, $depth: 1</code>)</h6>\n<p>Used to turn a list into a flat string. For debug purposes.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  string </p>\n                <h5 id=\"to-list-\" class=\"sg-heading sg-heading-5\"><code id=\"function-to-list\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"to-list()\">to-list()</code></h5>\n\n                <h6 id=\"function-string-keep-39-both-39-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$string, $keep: &apos;both&apos;</code>)</h6>\n<p>Convert a value to a list. <code class=\"sg-code sg-codespan\">$keep</code> accepts <code class=\"sg-code sg-codespan\">&apos;keys&apos;</code>, <code class=\"sg-code sg-codespan\">&apos;values&apos;</code>, or <code class=\"sg-code sg-codespan\">&apos;both&apos;</code> for map conversion.</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  list </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-functions.scss"
          }
        ]
      },
      {
        "category": "Grid System",
        "id": "development-grid_system-functions",
        "articles": [
          {
            "id": "development-grid_system-functions",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Grid System",
            "heading": "Functions",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"grid-size-\" class=\"sg-heading sg-heading-5\"><code id=\"function-grid-size\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"grid-size()\">grid-size()</code></h5>\n\n                <h6 id=\"function-size-total-grid-columns-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$size, $total:</code> <code id=\"variable--grid-columns\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-columns\">$grid-columns</code>)</h6>\n<p>Creates a percentage based on the <code class=\"sg-code sg-codespan\">$size / $total</code>.</p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"variable--grid-columns\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-columns\">$grid-columns</code></code> </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-widths.scss"
          },
          {
            "id": "development-grid_system-mixins",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Grid System",
            "heading": "Mixins",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-grid-setup-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-grid-setup\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@grid-setup()\">@grid-setup()</code></h5>\n\n                <h6 id=\"mixin-silent-grid-silent-classes-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$silent:</code> <code id=\"variable--grid-silent-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-silent-classes\">$grid-silent-classes</code>)</h6>\n<p>Creates basic grid classes (listed below), called by <code id=\"mixin-grid-init\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@grid-init()\">@grid-init()</code>.</p><p><em>Note: <code class=\"sg-code sg-codespan\">[% || .]</code> denotes a class that is either silent(<code class=\"sg-code sg-codespan\">%</code>) or standard CSS(<code class=\"sg-code sg-codespan\">.</code>). Based on the <code id=\"variable--grid-silent-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-silent-classes\">$grid-silent-classes</code> setting.</em></p><ul>\n<li>\n                <h6 id=\"-grid_reset\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">%grid_reset</code></h6>\n<p>Useful for resetting the grid&#x2019;s effects without making full grid items.</p></li>\n<li>\n                <h6 id=\"-grid\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">[% || .]grid</code></h6>\n<p>Wrapper class for grid widths. Puts a negative left margin of one unit. When not using floats, adds appropriate letter-spacing (for inline-block-based grid).</p></li>\n<li>\n                <h6 id=\"-grid_item\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">[% || .]grid_item</code></h6>\n<p>Sets up a grid column. Uses column padding inherited from parent <code class=\"sg-code sg-codespan\">%/.grid</code>.</p></li>\n<li>\n                <h6 id=\"-grid_rev\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">[% || .]grid_rev</code></h6>\n<p>Makes grid columns start from the right.</p></li>\n<li>\n                <h6 id=\"-grid_right\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">[% || .]grid_right</code></h6>\n<p>Makes all grid columns align to the right.</p></li>\n<li>\n                <h6 id=\"-grid_center\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">[% || .]grid_center</code></h6>\n<p>Makes all grid columns align to the center.</p></li>\n<li>\n                <h6 id=\"-grid_middle\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">[% || .]grid_middle</code></h6>\n<p>Makes all grid columns vertical align to the middle.</p></li>\n<li>\n                <h6 id=\"-grid_bottom\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">[% || .]grid_bottom</code></h6>\n<p>Makes all grid columns vertical align to the bottom.</p></li>\n<li>\n                <h6 id=\"-grid_full\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">[% || .]grid_full</code></h6>\n<p>Eliminates padding between grid columns.</p></li>\n<li>\n                <h6 id=\"-grid_narrow\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">[% || .]grid_narrow</code></h6>\n<p>Reduces the padding between grid columns.</p></li>\n<li>\n                <h6 id=\"-grid_wide\" class=\"sg-heading sg-heading-6\"><code class=\"sg-code sg-codespan\">[% || .]grid_wide</code></h6>\n<p>Increases the padding between grid columns.</p></li>\n</ul><h5 id=\"-grid-row-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-grid-row\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@grid-row()\">@grid-row()</code></h5>\n\n                <h6 id=\"mixin-\" class=\"sg-heading sg-heading-6\">mixin()</h6>\n<p>Creates a grid container (row) based on your grid configuration.</p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-type-space\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@type-space()\">@type-space()</code></code> </p>\n                <h5 id=\"-grid-item-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-grid-item\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@grid-item()\">@grid-item()</code></h5>\n\n                <h6 id=\"mixin-columns-grid-columns-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$columns: $grid-columns</code>)</h6>\n<p>Creates a grid item (column) based on your grid configuration set to a width based on the <code class=\"sg-code sg-codespan\">$columns</code> passed in.</p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-type-space\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@type-space()\">@type-space()</code>, <code id=\"mixin-grid-width\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@grid-width()\">@grid-width()</code></code> </p><h5 id=\"-grid-init-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-grid-init\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@grid-init()\">@grid-init()</code></h5>\n\n                <h6 id=\"mixin-silent-grid-silent-classes-important-false-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$silent:</code> <code id=\"variable--grid-silent-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-silent-classes\">$grid-silent-classes</code>, <code class=\"sg-code sg-codespan\">$important:false</code>)</h6>\n<p>Creates responsive grid classes by running through all the grid-setup mixins. Uses the media-queries defined in the <code class=\"sg-code sg-codespan\">$breakpoint-has-</code> variables to create media-query-scoped classes.</p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-grid-classes\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@grid-classes()\">@grid-classes()</code>, <code id=\"mixin-width-classes\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@width-classes()\">@width-classes()</code>, <code id=\"mixin-push-classes\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@push-classes()\">@push-classes()</code>, <code id=\"mixin-pull-classes\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@pull-classes()\">@pull-classes()</code></code> </p><h5 id=\"-grid-classes-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-grid-classes\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@grid-classes()\">@grid-classes()</code></h5>\n\n                <h6 id=\"mixin-silent-grid-silent-classes-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$silent:</code> <code id=\"variable--grid-silent-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-silent-classes\">$grid-silent-classes</code>)</h6>\n<p>Runs <code id=\"mixin-grid-setup\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@grid-setup()\">@grid-setup()</code>.</p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-grid-setup\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@grid-setup()\">@grid-setup()</code></code> </p>\n                <h5 id=\"-width-classes-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-width-classes\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@width-classes()\">@width-classes()</code></h5>\n\n                <h6 id=\"mixin-silent-grid-silent-classes-important-false-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$silent:</code> <code id=\"variable--grid-silent-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-silent-classes\">$grid-silent-classes</code>, <code class=\"sg-code sg-codespan\">$important: false</code>)</h6>\n<p>Runs <code id=\"mixin-width-setup\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@width-setup()\">@width-setup()</code>, looping across all breakpoints in <code id=\"variable--breakpoint-has-widths\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoint-has-widths\">$breakpoint-has-widths</code>. Creates classes with <code class=\"sg-code sg-codespan\">width</code> property values (<code class=\"sg-code sg-codespan\">flex-basis</code> and <code class=\"sg-code sg-codespan\">max-width</code> for flex-based grids) based on the grid.</p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-media-query\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@media-query()\">@media-query()</code>, <code id=\"mixin-width-setup\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@width-setup()\">@width-setup()</code></code> </p>\n                <h5 id=\"-push-classes-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-push-classes\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@push-classes()\">@push-classes()</code></h5>\n\n                <h6 id=\"mixin-silent-grid-silent-classes-important-false-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$silent:</code> <code id=\"variable--grid-silent-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-silent-classes\">$grid-silent-classes</code>, <code class=\"sg-code sg-codespan\">$important: false</code>)</h6>\n<p>Runs <code id=\"mixin-width-setup\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@width-setup()\">@width-setup()</code>, looping across all breakpoints in <code id=\"variable--breakpoint-has-push\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoint-has-push\">$breakpoint-has-push</code>. Creates classes with <code class=\"sg-code sg-codespan\">push_</code> and <code class=\"sg-code sg-codespan\">left</code> property values based on the grid.</p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-media-query\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@media-query()\">@media-query()</code>, <code id=\"mixin-width-setup\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@width-setup()\">@width-setup()</code></code> </p>\n                <h5 id=\"-pull-classes-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-pull-classes\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@pull-classes()\">@pull-classes()</code></h5>\n\n                <h6 id=\"mixin-silent-grid-silent-classes-important-false-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$silent:</code> <code id=\"variable--grid-silent-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-silent-classes\">$grid-silent-classes</code>, <code class=\"sg-code sg-codespan\">$important: false</code>)</h6>\n<p>Runs <code id=\"mixin-pull-setup\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@pull-setup()\">@pull-setup()</code>, looping across all breakpoints in <code id=\"variable--breakpoint-has-pull\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoint-has-pull\">$breakpoint-has-pull</code>. Creates classes with <code class=\"sg-code sg-codespan\">pull_</code> and <code class=\"sg-code sg-codespan\">right</code> property values based on the grid.</p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-media-query\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@media-query()\">@media-query()</code>, <code id=\"mixin-width-setup\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@width-setup()\">@width-setup()</code></code> </p><h5 id=\"-grid-width-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-grid-width\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@grid-width()\">@grid-width()</code></h5>\n\n                <h6 id=\"mixin-columns-total-grid-columns-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$columns, $total:</code> <code id=\"variable--grid-columns\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-columns\">$grid-columns</code>)</h6>\n<p>Creates a width property with a percentage based on the <code class=\"sg-code sg-codespan\">$columns / $total</code>.</p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-grid-size\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"grid-size()\">grid-size()</code>, <code id=\"variable--grid-columns\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-columns\">$grid-columns</code></code> </p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-width\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@width()\">@width()</code></code> </p><h5 id=\"-width-setup-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-width-setup\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@width-setup()\">@width-setup()</code></h5>\n\n                <h6 id=\"mixin-namespace-quot-quot-silent-grid-silent-classes-property-width-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$namespace:&quot;&quot;, $silent:</code> <code id=\"variable--grid-silent-classes\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-silent-classes\">$grid-silent-classes</code>, $property:&#x201D;width&#x201D;)</h6>\n<p> Uses <code id=\"variable--human-readable-numerators\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$human-readable-numerators\">$human-readable-numerators</code> and <code id=\"variable--human-readable-denominators\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$human-readable-denominators\">$human-readable-denominators</code> to create percentages based on <code id=\"variable--grid-columns\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-columns\">$grid-columns</code>. <code class=\"sg-code sg-codespan\">$property</code> accepts any property, as well as lists of properties.</p><p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-grid-size\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"grid-size()\">grid-size()</code>, <code id=\"variable--human-readable-numerators\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$human-readable-numerators\">$human-readable-numerators</code>, <code id=\"variable--human-readable-denominators\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$human-readable-denominators\">$human-readable-denominators</code></code> </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-grid-system.scss"
          },
          {
            "id": "development-grid_system-variables",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Grid System",
            "heading": "Variables",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-human-readable-numerators\" class=\"sg-heading sg-heading-5\"><code id=\"variable--human-readable-numerators\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$human-readable-numerators\">$human-readable-numerators</code></h5>\n\n                <h6 id=\"list-string-\" class=\"sg-heading sg-heading-6\">List (string)</h6>\n<p>First words used to represent numbers in a fraction; Corresponds to grid interval names (one, two, three, etc.).</p>\n                <h5 id=\"-human-readable-denominators\" class=\"sg-heading sg-heading-5\"><code id=\"variable--human-readable-denominators\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$human-readable-denominators\">$human-readable-denominators</code></h5>\n\n                <h6 id=\"list-string-\" class=\"sg-heading sg-heading-6\">List (string)</h6>\n<p>Second words used to represent numbers in a fraction; Corresponds to grid interval names (whole, half, third, etc.).</p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-widths.scss"
          }
        ]
      },
      {
        "category": "Imports",
        "id": "development-imports-",
        "articles": [
          {
            "id": "development-imports-",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Imports",
            "heading": "",
            "code": [],
            "markup": [],
            "comment": "<p>Sass files are imported in order from lowest specificity to highest.</p><ol>\n<li><code class=\"sg-code sg-codespan\">/tools</code><ul>\n<li>Functions</li>\n<li>Settings</li>\n<li>System variables and defaults</li>\n<li>General-use mixins and sass utilities</li>\n</ul>\n</li>\n<li><code class=\"sg-code sg-codespan\">base/generic</code><ul>\n<li>Normalize/reset styles (unclassed)</li>\n</ul>\n</li>\n<li><code class=\"sg-code sg-codespan\">/base</code><ul>\n<li>Element styles (unclassed)</li>\n</ul>\n</li>\n<li><code class=\"sg-code sg-codespan\">/layout</code><ul>\n<li>Basic layout and object styles (single-class)</li>\n</ul>\n</li>\n<li><code class=\"sg-code sg-codespan\">/components</code><ul>\n<li>Module and component styles (single- and child-classes)</li>\n</ul>\n</li>\n<li><code class=\"sg-code sg-codespan\">/sections</code><ul>\n<li>View- and page-specific and scoped styles (typically <code class=\"sg-code sg-codespan\">parent &gt; child</code> classes).</li>\n</ul>\n</li>\n<li><code class=\"sg-code sg-codespan\">/overrides</code><ul>\n<li>Utility styles, usually end in <code class=\"sg-code sg-codespan\">!important</code>.</li>\n</ul>\n</li>\n</ol>",
            "priority": -1000,
            "filelocation": "_src/sass/main.scss"
          }
        ]
      },
      {
        "category": "Mixins",
        "id": "development-mixins-buttons",
        "articles": [
          {
            "id": "development-mixins-buttons",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Mixins",
            "heading": "Buttons",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-button-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-button\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@button()\">@button()</code></h5>\n\n                <h6 id=\"mixin-bg-color-color-39-links-39-text-color-null-border-null-radius-null-text-radius-null-style-null-inset-false-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$bg-color</code>: <code class=\"sg-code sg-codespan\">color(&apos;links&apos;)</code>, <code class=\"sg-code sg-codespan\">$text-color</code>: <code class=\"sg-code sg-codespan\">null</code>, <code class=\"sg-code sg-codespan\">$border</code>: <code class=\"sg-code sg-codespan\">null</code>, <code class=\"sg-code sg-codespan\">$radius</code>: <code class=\"sg-code sg-codespan\">null</code>, <code class=\"sg-code sg-codespan\">$text-radius</code>: <code class=\"sg-code sg-codespan\">null</code>, <code class=\"sg-code sg-codespan\">$style</code>: <code class=\"sg-code sg-codespan\">null</code>, <code class=\"sg-code sg-codespan\">$inset</code>: <code class=\"sg-code sg-codespan\">false</code>)</h6>\n<p>Generates common button styles, allowing for simple creation of more complex gradient styles. Intelligently excludes unnecessary styles from states like hover, focus, and active. <em>Does not generate hover, focus, or active psuedo selectors on its own.</em></p><p><strong>Accepted arguments</strong></p><ul>\n<li><code class=\"sg-code sg-codespan\">$bg-color</code>: Color values. This cannot accept null.</li>\n<li><code class=\"sg-code sg-codespan\">$text-color</code>: Color or null (null will let the mixin decide the best color based on contrast).</li>\n<li><code class=\"sg-code sg-codespan\">$border</code>: Any border properties (colors, styles, widths) or <code class=\"sg-code sg-codespan\">null</code>. Uses the <code id=\"mixin-border\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@border()\">@border()</code> mixin.</li>\n<li><code class=\"sg-code sg-codespan\">$radius</code>: <code class=\"sg-code sg-codespan\">border-radius</code> values. <code class=\"sg-code sg-codespan\">null</code> produces no border-radius property.</li>\n<li><code class=\"sg-code sg-codespan\">$style</code>: <code class=\"sg-code sg-codespan\">null</code>, <code class=\"sg-code sg-codespan\">shiny</code> or <code class=\"sg-code sg-codespan\">reflective</code>.\n<br>\n <code class=\"sg-code sg-codespan\">shiny</code> creates a simple gradient backgroud based on the <code class=\"sg-code sg-codespan\">$bg-color</code>.\n<br>\n <code class=\"sg-code sg-codespan\">reflective</code> creates a stacked gradient based on the <code class=\"sg-code sg-codespan\">$bg-color</code>.</li>\n<li><code class=\"sg-code sg-codespan\">$inset</code>: Boolean. <code class=\"sg-code sg-codespan\">True</code> adds a dark box-shadow inset.\n<br>\n If combined with &#x2018;shiny&#x2019; or &#x2018;reflective&#x2019; <code class=\"sg-code sg-codespan\">$style</code>, background gradients are inverted.</li>\n</ul>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-mixins.scss"
          },
          {
            "id": "development-mixins-css_helpers",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Mixins",
            "heading": "CSS Helpers",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-specificity-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-specificity\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@specificity()\">@specificity()</code></h5>\n\n                <h6 id=\"mixin-specificity-1-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$specificity: 1</code>)</h6>\n<p>Specificity increaser. Useful for increasing specificity of a selector instead of using <code class=\"sg-code sg-codespan\">!important</code>.</p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-selector-class\">.class</span> {\n    @<span class=\"hljs-keyword\">include</span> specificity(<span class=\"hljs-number\">2</span>) {\n        <span class=\"hljs-attribute\">color</span>: red;\n    }\n}\n\n<span class=\"hljs-comment\">//css</span>\n<span class=\"hljs-selector-class\">.class</span><span class=\"hljs-selector-class\">.class</span> {\n    <span class=\"hljs-attribute\">color</span>: red;\n}\n</code></pre>\n</div>\n<p><a href=\"http://www.sitepoint.com/selector-specificity-css-preprocessors/\">Reference</a></p><h5 id=\"-opacity-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-opacity\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@opacity()\">@opacity()</code></h5>\n\n                <h6 id=\"mixin-opacity-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$opacity</code>)</h6>\n<p>Cross-browser (including IE8-) opacity.\n<br>\n<a href=\"https://gist.github.com/jgv/745754\">Reference</a></p><h5 id=\"-border-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-border\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@border()\">@border()</code></h5>\n\n                <h6 id=\"mixin-border-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$border</code>)</h6>\n<p>Allows creating many border properties at once. Works like the standard border shorthand style but allows varied styles on different border directions.</p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \">    <span class=\"hljs-comment\">//scss</span>\n    <span class=\"hljs-selector-class\">.foo</span> {\n        @<span class=\"hljs-keyword\">include</span> border(<span class=\"hljs-number\">2px</span> 3px solid dashed dotted blue currentColor yellow);\n    }\n\n    <span class=\"hljs-comment\">//css</span>\n    <span class=\"hljs-selector-class\">.foo</span> {\n        <span class=\"hljs-attribute\">border-width</span>: <span class=\"hljs-number\">2px</span> <span class=\"hljs-number\">3px</span>;\n        <span class=\"hljs-attribute\">border-style</span>: solid dashed dotted;\n        <span class=\"hljs-attribute\">border-color</span>: blue currentColor yellow;\n    }\n</code></pre>\n</div>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-mixins.scss"
          },
          {
            "id": "development-mixins-media_queries",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Mixins",
            "heading": "Media Queries",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-media-query-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-media-query\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@media-query()\">@media-query()</code></h5>\n\n                <h6 id=\"mixin-media-queries-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$media-queries...</code>)</h6>\n<p>Enclose a block of code with a media query as named in <code class=\"sg-code sg-codespan\">$breakpoints</code>. To create more consolodated code, most (if not all) media queries should be called through this mixin. Multiple media-queries can be defined, separated by a comma. This will place your content into multiple separate media-queries at once (useful if you need the same css at different breakpoints).</p><p><strong>Alternative Uses:</strong></p><ul>\n<li><p>Passing multiple media queries separated by an <code class=\"sg-code sg-codespan\">&apos;and&apos;</code> (quoted) to combine them, compiles to something like <code class=\"sg-code sg-codespan\">@media screen and (min-width: 500px) and (max-width: 900px){}</code>.</p></li>\n<li><p>Passing a value like <code class=\"sg-code sg-codespan\">min-width 1200px</code> or <code class=\"sg-code sg-codespan\">max-height 300px</code> allows for arbitrary breakpoints.</p></li>\n<li><p>Passing <code class=\"sg-code sg-codespan\">max 1200px &apos;and&apos; smalls</code> will create a combined media-query with a predefined one from <code id=\"variable--breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints\">$breakpoints</code>.</p></li>\n<li><p>Passing <code class=\"sg-code sg-codespan\">height smalls</code> will replace <code class=\"sg-code sg-codespan\">width</code> with <code class=\"sg-code sg-codespan\">height</code> within the <code class=\"sg-code sg-codespan\">smalls</code> breakpoint. Similarly, using <code class=\"sg-code sg-codespan\">min smalls</code> would replace &#x2018;max&#x2019; with &#x2018;min&#x2019;.</p></li>\n</ul>\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-mq-arglist-to-map\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"mq-arglist-to-map()\">mq-arglist-to-map()</code>, <code id=\"function-mq-parse-query-args\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"mq-parse-query-args()\">mq-parse-query-args()</code> <code id=\"variable--breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints\">$breakpoints</code></code> </p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code id=\"mixin-bp\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@bp()\">@bp()</code> </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-media-queries.scss"
          },
          {
            "id": "development-mixins-overrides",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Mixins",
            "heading": "Overrides",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-create-overrides-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-create-overrides\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@create-overrides()\">@create-overrides()</code></h5>\n\n                <h6 id=\"mixin-map-breakpoints-namespace-quot-quot-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$map, $breakpoints, $namespace: &quot;&quot;</code>)</h6>\n<p>Takes a map of class names and style properties and outputs utility (override) classes over a specified number of breakpoints. Useful for creating a number of single-use classes over multiple breakpoints. Always makes property declarations <code class=\"sg-code sg-codespan\">!important</code>.</p><p>Example:</p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-comment\">//Input</span>\n@<span class=\"hljs-keyword\">include</span> creat-overrides(\n    (\n        <span class=\"hljs-string\">&quot;class-name&quot;</span>: (\n            <span class=\"hljs-string\">&quot;property&quot;</span>: <span class=\"hljs-string\">&quot;value&quot;</span>,\n        ),\n        <span class=\"hljs-string\">&quot;float-right, align_right&quot;</span>: (\n            <span class=\"hljs-string\">&quot;float&quot;</span>: <span class=\"hljs-string\">&quot;right&quot;</span>\n        )\n    ),\n    (<span class=\"hljs-string\">&apos;smalls&apos;</span>, <span class=\"hljs-string\">&apos;bigs&apos;</span>)\n);\n\n<span class=\"hljs-comment\">//CSS-output</span>\n<span class=\"hljs-selector-class\">.float-left</span> {\n    <span class=\"hljs-attribute\">float</span>: left <span class=\"hljs-meta\">!important</span>;\n}\n<span class=\"hljs-selector-class\">.float-right</span>,\n<span class=\"hljs-selector-class\">.align_right</span> {\n    <span class=\"hljs-attribute\">float</span>: right <span class=\"hljs-meta\">!important</span>;\n}\n@<span class=\"hljs-keyword\">media</span> (max-width: 600px) {\n    <span class=\"hljs-selector-class\">.float-left</span> {\n        <span class=\"hljs-attribute\">float</span>: left <span class=\"hljs-meta\">!important</span>;\n    }\n    <span class=\"hljs-selector-class\">.float-right</span>,\n    <span class=\"hljs-selector-class\">.align_right</span> {\n        <span class=\"hljs-attribute\">float</span>: right <span class=\"hljs-meta\">!important</span>;\n    }\n}\n@<span class=\"hljs-keyword\">media</span> (min-width: 601px) {\n    ...\n}\n</code></pre>\n</div>\n\n                <h5 id=\"-_override-output-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-_override-output\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@_override-output()\">@_override-output()</code></h5>\n\n                <h6 id=\"mixin-map-namespace-quot-quot-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$map, $namespace: &quot;&quot;</code>)</h6>\n<p>Used exclusively by <code id=\"mixin-create-overrides\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@create-overrides()\">@create-overrides()</code> to iterate through a map of classes, properties, and values to create responsive classes.</p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-overrides.scss"
          }
        ]
      },
      {
        "category": "Tools",
        "id": "development-tools-display_utilities",
        "articles": [
          {
            "id": "development-tools-display_utilities",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Tools",
            "heading": "Display Utilities",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-display-utilities-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-display-utilities\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@display-utilities()\">@display-utilities()</code></h5>\n\n                <h6 id=\"mixin-namespace-quot-quot-silent-false-important-true-class-list-display-classes-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$namespace:&quot;&quot;, $silent:false, $important:true, $class-list:$display-classes</code>)</h6>\n<p>Generates classes with display properties defined in <code class=\"sg-code sg-codespan\">$class-list</code>. Intelligently extends duplicated display properties.</p>\n                <h5 id=\"-display-utilities-init-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-display-utilities-init\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@display-utilities-init()\">@display-utilities-init()</code></h5>\n\n                <h6 id=\"mixin-breakpoints-all-breakpoints-namespace-39-39-silent-true-important-false-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$breakpoints: $all-breakpoints, $namespace: &apos;&apos;, $silent: true, $important: false</code>)</h6>\n<p>The responsive component to <code id=\"mixin-display-utilities\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@display-utilities()\">@display-utilities()</code>. Invoke <code id=\"mixin-display-utilites\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@display-utilites()\">@display-utilites()</code> with that loops through a set of media-queries defined in <code id=\"variable--breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints\">$breakpoints</code>. This is most useful for creating responsive display classes.</p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-display.scss"
          },
          {
            "id": "development-tools-spacing_utilities",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Tools",
            "heading": "Spacing Utilities",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-spacing-utilities-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-spacing-utilities\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@spacing-utilities()\">@spacing-utilities()</code></h5>\n\n                <h6 id=\"mixin-namespace-39-39-config-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$namespace:&apos;&apos;</code>, <code class=\"sg-code sg-codespan\">$config</code>)</h6>\n<p>Generates responsive spacing and padding classes. The <code class=\"sg-code sg-codespan\">$namespace</code> argument is the media query&#x2019;s name, which will be appended to all generated classes. The <code class=\"sg-code sg-codespan\">$config</code> argument is a map that allows JS-style arguments. Outputs class name as: <code class=\"sg-code sg-codespan\">breakpoint_prefix_direction_amount</code>.</p><p><strong><code class=\"sg-code sg-codespan\">$config</code> Keys:</strong></p><ul>\n<li><code class=\"sg-code sg-codespan\">silent:</code> boolean for outputting silent/non-silent classes.</li>\n<li><code class=\"sg-code sg-codespan\">important:</code> whether to output !important after each declaration.</li>\n<li><code class=\"sg-code sg-codespan\">directions:</code> names that get appended to class names.</li>\n<li><code class=\"sg-code sg-codespan\">amounts:</code> how much to multiply spacing unit by <code id=\"variable--base-line-height\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-line-height\">$base-line-height</code>.</li>\n<li><code class=\"sg-code sg-codespan\">names:</code> corresponding names for each <code class=\"sg-code sg-codespan\">amounts</code> that gets appended to class names.</li>\n<li><code class=\"sg-code sg-codespan\">prefixes:</code> first word in the class name. Must contain the words &#x2018;pad&#x2019; and &#x2018;space&#x2019;. Used by <code id=\"function-layout-type\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"layout-type()\">layout-type()</code> to determine padding or margin.</li>\n</ul>\n\n                <h5 id=\"-spacing-utilities-init-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-spacing-utilities-init\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@spacing-utilities-init()\">@spacing-utilities-init()</code></h5>\n\n                <h6 id=\"mixin-breakpoints-all-breakpoints-namespace-39-39-config-silent-true-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$breakpoints:</code> <code id=\"variable--all-breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$all-breakpoints\">$all-breakpoints</code>, <code class=\"sg-code sg-codespan\">$namespace:&apos;&apos;</code>, <code class=\"sg-code sg-codespan\">$config:(silent:true)</code>)</h6>\n<p>The responsive component to <code id=\"mixin-spacing-utilities\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@spacing-utilities()\">@spacing-utilities()</code>. Invoke <code id=\"mixin-spacing-utilites\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@spacing-utilites()\">@spacing-utilites()</code> with that loops through a set of media-queries defined in <code id=\"variable--breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints\">$breakpoints</code>. This is most useful for creating responsive spacing classes.</p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-spacing.scss"
          },
          {
            "id": "development-tools-z-index",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Tools",
            "heading": "Z-Index",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"z-\" class=\"sg-heading sg-heading-5\"><code id=\"function-z\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"z()\">z()</code></h5>\n\n                <h6 id=\"function-layer-modifier-false-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$layer</code>, <code class=\"sg-code sg-codespan\">$modifier: false</code>)</h6>\n<p>Returns a numeric value (used for z-index) from a named layer, stored in <code id=\"variable--z-index\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$z-index\">$z-index</code>. Changing the modifier to anything other than <code class=\"sg-code sg-codespan\">false</code> will add 1 plus however many times the value has been called. So, if you&#x2019;ve called <code class=\"sg-code sg-codespan\">z(head, true)</code> 5 times, and <code class=\"sg-code sg-codespan\">head</code>&#x2018;s default value is 100, you would get a value of 105.</p><p>The <code class=\"sg-code sg-codespan\">$modifier</code> is useful if you&#x2019;d like to closely layer z-indexes within the same module. It is rarely necessary, though since z-indexes stack.</p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-zindex.scss"
          }
        ]
      },
      {
        "category": "Typography",
        "id": "development-typography-conversion",
        "articles": [
          {
            "id": "development-typography-conversion",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Typography",
            "heading": "Conversion",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-px-to-rems-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-px-to-rems\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@px-to-rems()\">@px-to-rems()</code></h5>\n\n                <h6 id=\"mixin-property-sizes-important-false-base-font-base-font-size-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$property</code>, <code class=\"sg-code sg-codespan\">$sizes</code>, <code class=\"sg-code sg-codespan\">$important</code>: <code class=\"sg-code sg-codespan\">false</code>, <code class=\"sg-code sg-codespan\">$base-font</code>: <code id=\"variable--base-font-size\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-font-size\">$base-font-size</code>)</h6>\n<p>Takes a pixel value and creates a property with a <code class=\"sg-code sg-codespan\">rem</code> value. If <code id=\"variable--rem-px-fallback\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$rem-px-fallback\">$rem-px-fallback</code> is <code class=\"sg-code sg-codespan\">true</code>, a pixel fallback is also included. <code class=\"sg-code sg-codespan\">$sizes</code> also accepts &#x2018;auto&#x2019;.</p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-rems\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@rems()\">@rems()</code></code> </p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-px-to-rems\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"px-to-rems()\">px-to-rems()</code></code> </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-type.scss"
          },
          {
            "id": "development-typography-font_face",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Typography",
            "heading": "Font Face",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-fonts-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-fonts\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@fonts()\">@fonts()</code></h5>\n\n                <h6 id=\"mixin-name-font-file-name-font-file-location-weights-font-weights-italics-font-italics-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$name</code>: <code id=\"variable--font-file-name\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-file-name\">$font-file-name</code>, <code id=\"variable--font-file-location\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-file-location\">$font-file-location</code>, <code class=\"sg-code sg-codespan\">$weights</code>: <code id=\"variable--font-weights\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-weights\">$font-weights</code>, <code class=\"sg-code sg-codespan\">$italics</code>: <code id=\"variable--font-italics\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-italics\">$font-italics</code>)</h6>\n<p>A wrapper function for <code id=\"mixin-font-face\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@font-face()\">@font-face()</code>. Takes global configuration variables and passes them to <code id=\"mixin-font-face\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@font-face()\">@font-face()</code>. Loops through each <code class=\"sg-code sg-codespan\">$name</code> based on <code class=\"sg-code sg-codespan\">$weights</code> and <code class=\"sg-code sg-codespan\">$italics</code>. Uses <code class=\"sg-code sg-codespan\">$path</code> and <code class=\"sg-code sg-codespan\">$name</code> to point to font files. Formats these variables so they can be passed to <code id=\"mixin-font-face\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@font-face()\">@font-face()</code>.</p><p>Font file names must be the same as their CSS font-family values. Example: arial font, 400 weight would be arial400.ttf and the CSS value would be font-family: &#x2018;arial&#x2019;; font-weight: 400.</p><p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-font-face\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@font-face()\">@font-face()</code></code> </p>\n                <h5 id=\"-font-face-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-font-face\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@font-face()\">@font-face()</code></h5>\n\n                <h6 id=\"mixin-name-font-files-weight-false-style-false-eot-false-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$name</code>, <code class=\"sg-code sg-codespan\">$font-files</code>, <code class=\"sg-code sg-codespan\">$weight:false</code>,<code class=\"sg-code sg-codespan\">$style:false</code>, <code class=\"sg-code sg-codespan\">$eot:false</code>)</h6>\n<p>Generates cross-browser font-face declarations when called.\n<br>\n$name is required, arbitrary, and what you will use in font stacks.\n<br>\n<strong>Arguments:</strong></p><ul>\n<li>$font-files is required using font-files(&#x2018;relative/location&#x2019;, &#x2018;format&#x2019;). For best results use this order: woff, opentype/truetype, svg</li>\n<li>$eot is required by IE, and is a relative location of the eot file.</li>\n<li>$weight shows if the font is bold, defaults to normal</li>\n<li>$style defaults to normal, might be also italic</li>\n</ul>\n<p>Based on <a href=\"http://compass-style.org/reference/compass/css3/font_face/\">Compass&#x2019; font-face mixin</a>.</p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-fontface.scss"
          },
          {
            "id": "development-typography-line-height",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Typography",
            "heading": "Line-height",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"baseline-\" class=\"sg-heading sg-heading-5\"><code id=\"function-baseline\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"baseline()\">baseline()</code></h5>\n\n                <h6 id=\"function-font-size-baseline-multiple-1-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$font-size</code>, <code class=\"sg-code sg-codespan\">$baseline</code>, <code class=\"sg-code sg-codespan\">$multiple:1</code>)</h6>\n<p>Aligns a font-size to a baseline (<code class=\"sg-code sg-codespan\">$baseline</code>). Returns a unitless value relative to the font-size (equivilent to ems). An optional multiple can be used to make a variation on the given baseline (using decimals will divide the the baseline).</p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number (unitless) </p><h5 id=\"baseline-curve-\" class=\"sg-heading sg-heading-5\"><code id=\"function-baseline-curve\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"baseline-curve()\">baseline-curve()</code></h5>\n\n                <h6 id=\"function-x-accel-1-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$x</code> , <code class=\"sg-code sg-codespan\">$accel</code>: <code class=\"sg-code sg-codespan\">1</code>)</h6>\n<p>Calculates a where a number(<code class=\"sg-code sg-codespan\">$x</code>) sits along a parabolic arc (curve). Change the curve&#x2019;s severity by changing its <code class=\"sg-code sg-codespan\">$accel</code>.\n<br>\nAn <code class=\"sg-code sg-codespan\">$accel</code> of 1 is a smooth arc.\n<br>\n<code class=\"sg-code sg-codespan\">$accel</code> accepts any number between -2 and 2.35. A negative will invert the curve.</p><p>The formula: <code class=\"sg-code sg-codespan\">y = (sqrt((x^1)+x) - sqrt(x^1)) / .4142135623730951</code>\n<br>\n( <a href=\"https://www.desmos.com/calculator/qswvc6q9kt\">Visual</a> )</p><p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number </p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-sqrt\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"sqrt()\">sqrt()</code>, <code id=\"function-pow\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"pow()\">pow()</code></code> </p><h5 id=\"baseline-calc-\" class=\"sg-heading sg-heading-5\"><code id=\"function-baseline-calc\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"baseline-calc()\">baseline-calc()</code></h5>\n\n                <h6 id=\"function-font-size-base-font-size-font-base-base-font-size-basline-slack-font-looseness-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$font-size: $base-font-size, $font-base: $base-font-size, $basline-slack: $font-looseness</code>)</h6>\n<p>Creates unitless line-heights that align to the baseline grid with consideration to the aesthetics of a given font size. Essentially makes sure larger font-sizes have smaller line-heights, while smaller font-sizes have larger ones.\n<br>\nUses constraints based on upper and lower limits of pleasing line-heights, and finds where a given font-size should sit within those constraints. <code id=\"variable--font-looseness\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-looseness\">$font-looseness</code> increases the upper constraints, allowing for taller line heights on larger font sizes.\n<br>\nDepends on <code id=\"function-baseline\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"baseline()\">baseline()</code> for calculation and <code id=\"function-baseline-curve\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"baseline-curve()\">baseline-curve()</code> to determine the deviance from the upper and lower constraints.</p><p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number (unitless) </p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-baseline\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"baseline()\">baseline()</code>, <code id=\"function-baseline-curve\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"baseline-curve()\">baseline-curve()</code></code> </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-functions.scss"
          },
          {
            "id": "development-typography-sizing",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Typography",
            "heading": "Sizing",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"modular-scale-\" class=\"sg-heading sg-heading-5\"><code id=\"function-modular-scale\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"modular-scale()\">modular-scale()</code></h5>\n\n                <h6 id=\"function-scale-scale-ratio-\" class=\"sg-heading sg-heading-6\">function(<code class=\"sg-code sg-codespan\">$scale</code>, <code id=\"variable--scale-ratio\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$scale-ratio\">$scale-ratio</code>)</h6>\n<p>Generates a pixel value that is an exponent of a ratio (<code class=\"sg-code sg-codespan\">$ratio</code> defaults to <code id=\"variable--scale-ratio\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$scale-ratio\">$scale-ratio</code> value).</p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-pow\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"pow()\">pow()</code>, <code id=\"function-cache\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"cache()\">cache()</code>, <code id=\"function-strip-units\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"strip-units()\">strip-units()</code></code> </p>\n\n<p data-code-meta=\"returns\" class=\"sg-code-meta sg-code-meta-value\">  number (pixels) </p><h5 id=\"-type-font-size-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-type-font-size\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@type-font-size()\">@type-font-size()</code></h5>\n\n                <h6 id=\"mixin-base-font-size-\" class=\"sg-heading sg-heading-6\">mixin(<code id=\"variable--base-font-size\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-font-size\">$base-font-size</code>)</h6>\n<p>Quickly generate a font-size in rems, with a pixel fallback, based on the value we pass into the mixin. Optionally calculates line-height using <code id=\"variable--base-line-height\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-line-height\">$base-line-height</code>.</p><p><em><code class=\"sg-code sg-codespan\">$line-height</code> also accepts a pixel value and will be converted to a unitless one.</em></p><p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-font-size\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@font-size()\">@font-size()</code></code> </p>\n\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-px-to-rems\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@px-to-rems()\">@px-to-rems()</code>, <code id=\"function-cache\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"cache()\">cache()</code>, <code id=\"function-baseline-calc\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"baseline-calc()\">baseline-calc()</code></code> </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-functions.scss"
          },
          {
            "id": "development-typography-spacing",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Typography",
            "heading": "Spacing",
            "code": [],
            "markup": [],
            "comment": "<h5 id=\"-type-space-\" class=\"sg-heading sg-heading-5\"><code id=\"mixin-type-space\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@type-space()\">@type-space()</code></h5>\n\n                <h6 id=\"mixin-properties-multipliers-important-false-\" class=\"sg-heading sg-heading-6\">mixin(<code class=\"sg-code sg-codespan\">$properties, $multipliers, $important: false</code>)</h6>\n<p>Output REM values using the typographic grid. This is the prefered method of adding padding and margins because it enforces consistent spacing around all elements.</p><p><strong>Arguments:</strong></p><ul>\n<li><code class=\"sg-code sg-codespan\">$properties</code>: Can be any <code class=\"sg-code sg-codespan\">CSS</code> property that accepts a length value (e.g. <code class=\"sg-code sg-codespan\">rem</code>). Also accepts multiple properties as a nested list (e.g. <code class=\"sg-code sg-codespan\">(padding-left, padding-right)</code>).</li>\n<li><code class=\"sg-code sg-codespan\">$multipliers</code>: Accepts unitless values that get converted to <code class=\"sg-code sg-codespan\">rem</code> units which are a multiple of the typographic grid. Can be multiple values, <strong>separated by spaces</strong>, in the case of <code class=\"sg-code sg-codespan\">margin</code> or <code class=\"sg-code sg-codespan\">padding</code>.</li>\n<li><code class=\"sg-code sg-codespan\">$important</code>: Accepts <code class=\"sg-code sg-codespan\">true</code> or <code class=\"sg-code sg-codespan\">!important</code>.</li>\n</ul>\n<p><strong>Example</strong></p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-comment\">// SCSS input</span>\n<span class=\"hljs-selector-class\">.foo</span> {\n    @<span class=\"hljs-keyword\">include</span> type-space(padding, 1 .25 .5 auto, <span class=\"hljs-string\">&apos;!important&apos;</span>);\n}\n\n<span class=\"hljs-comment\">// CSS output</span>\n<span class=\"hljs-selector-class\">.foo</span> {\n    <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">24px</span> <span class=\"hljs-number\">8px</span> <span class=\"hljs-number\">12px</span> auto <span class=\"hljs-meta\">!important</span>;\n    <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">1.5rem</span> .<span class=\"hljs-number\">375rem</span> .<span class=\"hljs-number\">75rem</span> auto <span class=\"hljs-meta\">!important</span>;\n}\n</code></pre>\n</div>\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-px-to-rems\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@px-to-rems()\">@px-to-rems()</code>, <code id=\"function-str-contains\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"str-contains()\">str-contains()</code></code> </p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"mixin-space\" class=\"sg-global-mixin sg-code sg-codespan sg-global\" data-code-id=\"@space()\">@space()</code></code> </p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-type.scss"
          }
        ]
      },
      {
        "category": "Variables",
        "id": "development-variables-easing",
        "articles": [
          {
            "id": "development-variables-easing",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Variables",
            "heading": "Easing",
            "code": [],
            "markup": [],
            "comment": "<p>Each easing variable is a cubic-bezier value that specifies rate of change of an animation. <a href=\"http://www.easings.net\">See easings for more</a>.</p><p><a href=\"https://github.com/matthewlein/Ceaser/blob/master/developer/\">Reference</a></p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-easings.scss"
          },
          {
            "id": "development-variables-globals",
            "section": {
              "name": "development",
              "development": true
            },
            "category": "Variables",
            "heading": "Globals",
            "code": [],
            "markup": [],
            "comment": "<p>The variables here are created based on the config variables passed by the user. These are generally abstracted to make them a little easier to parse, programmatically.</p>\n                <h5 id=\"-type-h1-6-p-small-lh\" class=\"sg-heading sg-heading-5\"><code id=\"variable--type--h1-6-p-small--lh\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$type-[h1-6,p,small]-lh\">$type-[h1-6,p,small]-lh</code></h5>\n\n                <h6 id=\"boolean-unitless-pixel-value\" class=\"sg-heading sg-heading-6\">boolean/unitless/pixel value</h6>\n<p>Parses <code id=\"variable--type-h----size\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$type-h[#]-size\">$type-h[#]-size</code> for an optional line-height value, if none exists, pass it along to <code id=\"function-baseline-calc\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"baseline-calc()\">baseline-calc()</code>.</p>\n\n<p data-code-meta=\"alias\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"variable--h----lh\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$h[#]-lh\">$h[#]-lh</code></code> </p>\n                <h5 id=\"-type-h1-6-p-small-size\" class=\"sg-heading sg-heading-5\"><code id=\"variable--type--h1-6-p-small--size\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$type-[h1-6,p,small]-size\">$type-[h1-6,p,small]-size</code></h5>\n\n                <h6 id=\"number-pixel-\" class=\"sg-heading sg-heading-6\">Number (pixel)</h6>\n<p>Font sizes, as defined by the user or <code id=\"variable--auto-scale-type\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$auto-scale-type\">$auto-scale-type</code>.</p>\n                <h5 id=\"-type-base-unit\" class=\"sg-heading sg-heading-5\"><code id=\"variable--type-base-unit\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$type-base-unit\">$type-base-unit</code></h5>\n\n                <h6 id=\"number\" class=\"sg-heading sg-heading-6\">Number</h6>\n<p>Abstraction of the base spacing unit used in any mixin or function that defines spacing units.</p>\n                <h5 id=\"-type-base-ratio\" class=\"sg-heading sg-heading-5\"><code id=\"variable--type-base-ratio\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$type-base-ratio\">$type-base-ratio</code></h5>\n\n                <h6 id=\"number\" class=\"sg-heading sg-heading-6\">Number</h6>\n<p>Ratio used to calculate the difference between font sizes and spacing units.</p>\n                <h5 id=\"-type-headings\" class=\"sg-heading sg-heading-5\"><code id=\"variable--type-headings\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$type-headings\">$type-headings</code></h5>\n\n                <h6 id=\"list-number-\" class=\"sg-heading sg-heading-6\">List (number)</h6>\n<p>Used for defining automatic headings functions.</p>\n                <h5 id=\"-type-modular-scale\" class=\"sg-heading sg-heading-5\"><code id=\"variable--type-modular-scale\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$type-modular-scale\">$type-modular-scale</code></h5>\n\n                <h6 id=\"number\" class=\"sg-heading sg-heading-6\">Number</h6>\n<p>Abstracts the <code id=\"variable--scale-ratio\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$scale-ratio\">$scale-ratio</code> and makes sure it&#x2019;s a positive number.</p>\n                <h5 id=\"-all-breakpoints\" class=\"sg-heading sg-heading-5\"><code id=\"variable--all-breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$all-breakpoints\">$all-breakpoints</code></h5>\n\n                <h6 id=\"list\" class=\"sg-heading sg-heading-6\">List</h6>\n<p>Stores all the names defined in <code id=\"variable--breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints\">$breakpoints</code> for use in abstract framework components so that if names are chagned, boilerplate media queries won&#x2019;t fail.</p>\n                <h5 id=\"-breakpoint-smallest\" class=\"sg-heading sg-heading-5\"><code id=\"variable--breakpoint-smallest\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoint-smallest\">$breakpoint-smallest</code></h5>\n\n                <h6 id=\"string\" class=\"sg-heading sg-heading-6\">String</h6>\n<p>Grabs the first <code id=\"variable--breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints\">$breakpoints</code> name.</p>\n                <h5 id=\"-breakpoint-largest\" class=\"sg-heading sg-heading-5\"><code id=\"variable--breakpoint-largest\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoint-largest\">$breakpoint-largest</code></h5>\n\n                <h6 id=\"string\" class=\"sg-heading sg-heading-6\">String</h6>\n<p>Grabs the last <code id=\"variable--breakpoints\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$breakpoints\">$breakpoints</code> name.</p>",
            "priority": 50,
            "filelocation": "_src/sass/tools/_t-variables.scss"
          }
        ]
      }
    ]
  },
  "menus": {
    "getting started": [
      {
        "category": "Getting Started",
        "id": "getting_started-getting_started-setup",
        "headings": [
          {
            "id": "getting_started-getting_started-setup",
            "name": "Setup"
          },
          {
            "id": "getting_started-getting_started-software",
            "name": "Software"
          },
          {
            "id": "getting_started-getting_started-tips_and_tricks",
            "name": "Tips and Tricks"
          },
          {
            "id": "getting_started-getting_started-gulp_arguments",
            "name": "Gulp arguments"
          }
        ]
      }
    ],
    "patterns": [
      {
        "category": "Buttons",
        "id": "patterns-buttons-",
        "headings": [
          {
            "id": "patterns-buttons-",
            "name": "Buttons"
          }
        ]
      },
      {
        "category": "Color Palette",
        "id": "patterns-color_palette-",
        "headings": [
          {
            "id": "patterns-color_palette-",
            "name": "Color Palette"
          }
        ]
      },
      {
        "category": "Grid",
        "id": "patterns-grid-basics",
        "headings": [
          {
            "id": "patterns-grid-basics",
            "name": "Basics"
          },
          {
            "id": "patterns-grid-automatic_columns",
            "name": "Automatic columns"
          },
          {
            "id": "patterns-grid-gutter_control",
            "name": "Gutter Control"
          }
        ]
      },
      {
        "category": "Layout",
        "id": "patterns-layout-arrangement_object",
        "headings": [
          {
            "id": "patterns-layout-arrangement_object",
            "name": "Arrangement object"
          },
          {
            "id": "patterns-layout-isolation_object",
            "name": "Isolation object"
          }
        ]
      },
      {
        "category": "Lists",
        "id": "patterns-lists-bordered_lists",
        "headings": [
          {
            "id": "patterns-lists-bordered_lists",
            "name": "Bordered Lists"
          },
          {
            "id": "patterns-lists-breadcrumbs",
            "name": "Breadcrumbs"
          },
          {
            "id": "patterns-lists-inline_lists",
            "name": "Inline Lists"
          },
          {
            "id": "patterns-lists-navigation_list",
            "name": "Navigation List"
          }
        ]
      },
      {
        "category": "Typography",
        "id": "patterns-typography-body_copy",
        "headings": [
          {
            "id": "patterns-typography-body_copy",
            "name": "Body copy"
          },
          {
            "id": "patterns-typography-heading_sizes",
            "name": "Heading sizes"
          }
        ]
      }
    ],
    "development": [
      {
        "category": "Colors",
        "id": "development-colors-blending_modes",
        "headings": [
          {
            "id": "development-colors-blending_modes",
            "name": "Blending Modes"
          },
          {
            "id": "development-colors-debugging",
            "name": "Debugging"
          },
          {
            "id": "development-colors-manipulation",
            "name": "Manipulation"
          },
          {
            "id": "development-colors-lookup",
            "name": "Lookup"
          }
        ]
      },
      {
        "category": "Config",
        "id": "development-config-breakpoints",
        "headings": [
          {
            "id": "development-config-breakpoints",
            "name": "Breakpoints"
          },
          {
            "id": "development-config-color_settings",
            "name": "Color Settings"
          },
          {
            "id": "development-config-debug_settings",
            "name": "Debug Settings"
          },
          {
            "id": "development-config-grid_settings",
            "name": "Grid Settings"
          },
          {
            "id": "development-config-responsive_settings",
            "name": "Responsive Settings"
          },
          {
            "id": "development-config-slick_settings",
            "name": "Slick Settings"
          },
          {
            "id": "development-config-typography_settings",
            "name": "Typography Settings"
          },
          {
            "id": "development-config-utility_class_settings",
            "name": "Utility Class Settings"
          }
        ]
      },
      {
        "category": "Functions",
        "id": "development-functions-conversion",
        "headings": [
          {
            "id": "development-functions-conversion",
            "name": "Conversion"
          },
          {
            "id": "development-functions-general",
            "name": "General"
          },
          {
            "id": "development-functions-maps",
            "name": "Maps"
          },
          {
            "id": "development-functions-math",
            "name": "Math"
          },
          {
            "id": "development-functions-strings_&_lists",
            "name": "Strings & Lists"
          }
        ]
      },
      {
        "category": "Grid System",
        "id": "development-grid_system-functions",
        "headings": [
          {
            "id": "development-grid_system-functions",
            "name": "Functions"
          },
          {
            "id": "development-grid_system-mixins",
            "name": "Mixins"
          },
          {
            "id": "development-grid_system-variables",
            "name": "Variables"
          }
        ]
      },
      {
        "category": "Imports",
        "id": "development-imports-",
        "headings": [
          {
            "id": "development-imports-",
            "name": "Imports"
          }
        ]
      },
      {
        "category": "Mixins",
        "id": "development-mixins-buttons",
        "headings": [
          {
            "id": "development-mixins-buttons",
            "name": "Buttons"
          },
          {
            "id": "development-mixins-css_helpers",
            "name": "CSS Helpers"
          },
          {
            "id": "development-mixins-media_queries",
            "name": "Media Queries"
          },
          {
            "id": "development-mixins-overrides",
            "name": "Overrides"
          }
        ]
      },
      {
        "category": "Tools",
        "id": "development-tools-display_utilities",
        "headings": [
          {
            "id": "development-tools-display_utilities",
            "name": "Display Utilities"
          },
          {
            "id": "development-tools-spacing_utilities",
            "name": "Spacing Utilities"
          },
          {
            "id": "development-tools-z-index",
            "name": "Z-Index"
          }
        ]
      },
      {
        "category": "Typography",
        "id": "development-typography-conversion",
        "headings": [
          {
            "id": "development-typography-conversion",
            "name": "Conversion"
          },
          {
            "id": "development-typography-font_face",
            "name": "Font Face"
          },
          {
            "id": "development-typography-line-height",
            "name": "Line-height"
          },
          {
            "id": "development-typography-sizing",
            "name": "Sizing"
          },
          {
            "id": "development-typography-spacing",
            "name": "Spacing"
          }
        ]
      },
      {
        "category": "Variables",
        "id": "development-variables-easing",
        "headings": [
          {
            "id": "development-variables-easing",
            "name": "Easing"
          },
          {
            "id": "development-variables-globals",
            "name": "Globals"
          }
        ]
      }
    ]
  },
  "colors": {},
  "customVariables": {
    "pageTitle": "FEF - Documentation",
    "tocMenu": true
  }
}