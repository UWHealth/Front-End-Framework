/* SG
# Buttons
Applying the `btn` class to anything will make it look like a button. Always declare `type="button"` on `<button>` elements for proper accessibility.

```html_example
<button type="button" class="btn">Button</button>

<a href="" class="btn">Faux Button</a>
```

*/

//Useful placeholder selector for simple button creation.

%button {
    //@include button($style: 'reflective', $border: 2px, $radius: 4px); //reflective style
    //@include button($style: 'reflective', $radius: 4px); //shiny style
    //@include button(transparent, inherit, 2px solid currentColor, 4px); //Ghost style
    font-weight: 700;
    padding: 0 .5em;
    @include type-space((padding-top, padding-bottom), .5);
    transition: background .1s ease-in-out, border-color .07s ease-out, color .1s ease-in-out;

    &:focus {
        outline: none;
        @include button($border: color(links));
    }

    &:hover {
        @include button(
            $bg-color: rgba(color('links'), .6),
            $text-color: tint(color('links'), 95%),
            $border: color('links', 'light')
        ); //Ghost
    }

    &:active {
        @include button(color('links'),#fff, $border: color(links));
        box-shadow: 0 0 4px 1px rgba(color('links','light'), .3);
        outline: none;
    }

}
%button_big {
    @include type-font-size(modular-scale(2), false);
    line-height: 1;
    @include type-space((padding-top, padding-bottom), 1);
}
%button_small {
    @include type-font-size(modular-scale(0), false);
    line-height: 1;
}
%button_wide {
    @extend %one_whole;
}

.btn {
    @extend %button;
}
