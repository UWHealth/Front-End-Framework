//------------------------------------
//      $Overrides
//------------------------------------
// Final import. Include any overrides
// or high-specificity selectors.
//-----------------------------------

//Allow a toggle for baseline image
@if $show-baseline == true {

    $type-baseline-size: strip-units($type-magic-number);

	.baseline-on {
        background-image: url(http://basehold.it/i/#{$type-baseline-size}); // [3]
        background: linear-gradient(to top, rgba(0, 0, 0, .15) 1px, transparent 1px) top left / auto $type-magic-ratio * 1em;
    }

    .baseline-off {
        background-image: none;
    }
}

.list_naked {
    @include no-bullets();
    margin: 0;
}

.link_naked,
%link_naked {
	color: inherit;
	text-decoration: none;

	&:hover, &:focus{
		color: inherit;
		text-decoration: none;
	}
}

.invisible {
	visibility: hidden !important;
}

.visually_hidden {
	@extend %visually_hidden;
}

.visually_hidden.focusable:active,
.visually_hidden.focusable:focus {
	clip: auto;
	height: auto;
	margin: 0;
	overflow: visible;
	position: static;
	width: auto;
}

.hidden {
	display: none !important;
	visibility: hidden !important;
}

//
// Clear fix. Add @extend %clearfix or @extend %cf to any element that needs self-clearing.
//
%clearfix, %cf{
	*zoom: 1;
	&:before,&:after{
		display: table;
		content: " ";
	}
	&:after{
		clear: both;
		height: 0;
		width: 0;
	}
}

.clearfix {
	@extend %clearfix;
}

//---Alignment Overrides--//
// Outputs alignment utility classes.

@if $breakpoint-has-alignment-classes != false {

    @include alignment-utilities-init(
        $breakpoints: $breakpoint-has-alignment-classes,
        $namespace: '',
        $silent: false,
        $important: true
    );

}

//----Spacing Override classes---//
// Outputs spacing utility classes.

@if $breakpoint-has-spacing-classes != false {

	//Assume important and non-silent
	$spacing-config: ( important: true, silent: false );
	$spacing-config: map-extend($spacing-classes, $spacing-config, true);

	@include spacing-utilities-init(
        $breakpoints: $breakpoint-has-spacing-classes, $config: $spacing-config
    );
}

//----Display Override classes---//
// Outputs hide/show (display) utility classes.
@if $breakpoint-has-display-classes != false {

    @include display-utilities-init(
        $breakpoints: $breakpoint-has-display-classes,
        $namespace: '',
        $silent: false,
        $important: true
    );

}

//----Type Override classes---//
//Outputs type transformation classes
@if $breakpoint-has-type-classes != false {

    @include type-utilities-init(
        $breakpoints: $breakpoint-has-type-classes,
        $namespace: '',
        $silent: false,
        $important: true
    );
}
@debug $c-i;
