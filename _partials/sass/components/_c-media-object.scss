/* SG

#Layout/Media object

Useful for creating an association between an image and text. Often used with an icon or a profile image.

```html_example
<img class="isolate_media" src="http://placehold.it/300x50" alt="placeholder image">
<p class="isolate_body">
	Content that sits to the right of the image but will never wrap underneath the image to the left. Etiam porta sem malesuada magna mollis euismod. Cras justo odio, dapibus ac facilisis in, egestas eget quam.
</p>

```
*/

%media_overflow {
	overflow: hidden;
	_overflow:visible;
	zoom:1;
}

%media_left {
	float: left;
}

%media_right {
	float: right;
}

.isolate {
	@extend %one_whole;
	@extend %block;
	@extend %clearfix;
	@extend %space_b;

	&_media {
		@extend %media_left;
		@extend %block;
		@extend %media_overflow;

		img {
			@extend %block;
		}
	}

	&_body {
		@extend %block;
		@extend %media_overflow;
		@extend %pad_l_half;
	}
}


/* SG

#Layout/Arrangement object

Creates an image-content block that vertically aligns images and text (centered, bottom, or top).
Children can be named four things:
* `arrange_fit` or `arrange_media` will create a block that fits the width of its content (useful for images).
* `arrange_fill` will fill the remaining space.
* `arrange_body` are similar but have some default styling.

You may also combine this with grid items like `row` and `column` if you wish to add gutters between elements.

_NOTE: Do not mistake this for true grid items. This should only be used for the arrangement of a few items. It is "squishy", but not technically responsive._

```html_example
<div class="arrange">
	<div class="arrange_media">
		<img src="http://placehold.it/60x50" alt="placeholder image">
	</div>
	<div class="arrange_body">
		Content that is vertically (middle) aligned with the image.
	</div>
</div>

<!-- Bottom Arrangement -->
<div class="arrange arrange_bottom">
	<div class="arrange_media">
		<img src="http://placehold.it/60x50" alt="placeholder image">
	</div>
	<div class="arrange_body">
		Content that is bottom aligned to the image.
	</div>
</div>

<!-- Equal width arrangement-->
<div class="arrange arrange_equal">
	<div class="arrange_fill">
		Equal width columns.
	</div>
	<div class="arrange_fill">
		<img class="show" src="http://placehold.it/120x80" alt="placeholder image" style="margin: auto;">
	</div>
	<div class="arrange_fill">
		Can be as many columns as you want.
	</div>
</div>

```
*/


.arrange {
	@extend %table;
	@extend %one_whole;
	@extend %space_b;
	min-width: 100%;
	table-layout: auto;

	&_fill,
	&_fit,
	&_media,
	&_body {
		@extend %table_cell;
	}

	&_fill,
	&_body {
		@extend %one_whole;
	}

	&_media,
	&_fit {
		img {
			@extend %block;
			max-width: none;
		}
	}

	&_body {
		@extend %pad_l_half;
	}

	&_media,
	&_body,
	&_fill,
	&_fit {
		vertical-align: middle;

		.arrange_top > & {
			vertical-align: top;
		}

		.arrange_bottom > & {
			vertical-align: bottom;
		}

	}
}

//Forces equal-width columns
.arrange_equal {
	table-layout: fixed;

	& > .arrange_fill,
	& > .arrange_fit {
		width: 1%;
	}
}
