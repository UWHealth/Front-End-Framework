//==========================================================================
//Silent classes and mixins used for cleaning up and consolodating code
//==========================================================================

//------------------------------------
//$MEDIA QUERIES
//------------------------------------

//
//Enclose a block of code with a media query as named in `$breakpoints`.
//To create more consolodated code, most (if not all) media queries should be called through
//this mixin.
//Multiple media-queries can be defined by using:
//@include media-query((breakpoint, breakpoint)){
//   [Your code here]
//}


@mixin media-query($media-queries) {
	$breakpoint-found: false;

	@each $media-query in $media-queries {

		@each $breakpoint in $breakpoints{
			$name: nth($breakpoint, 1);
			$declaration: nth($breakpoint, 2);

			@if $media-query == $name and $declaration {
				$breakpoint-found: true;

				@media only screen and #{$declaration} {
					@content;
				}
			}
		}
	}

	@if not $breakpoint-found {
		@warn "Breakpoint ‘#{$media-query}’ does not exist";
	}
}

//Aliases: Same as above, but shorter
@mixin breakpoint   ($mq)   { @include media-query($mq){ @content }};
@mixin bp           ($mq)   { @include media-query($mq){ @content }};
@mixin media        ($mq)   { @include media-query($mq){ @content }};
@mixin mq           ($mq)   { @include media-query($mq){ @content }};


//------------------------------------
//    $MULTIPLE EXTENDS
//------------------------------------
//
// Eclose a list of extends with @include extends((border-box, extension, extension))
// Note the double paranthesis.
//
@mixin extends($items) {
	@each $item in $items {
		@extend %#{$item};
	}
}

//------------------------------------
//    $LISTS
//------------------------------------
// http://compass-style.org/reference/compass/typography/lists/
// Turn off the bullet for an element of a list

@mixin no-bullet() {
	list-style-image : none;
	list-style-type  : none;
	margin-left      : 0;
}

// turns off the bullets for an entire list
@mixin no-bullets() {
	list-style: none;
	> li { @include no-bullet; }
}

// Make a list(ul/ol) have an image bullet.
//
// The mixin should be used like this for an icon that is 5x7:
//
//     ul.pretty
//       @include pretty-bullets("my-icon.png", 5px, 7px)
//
// Additionally, if the image dimensions are not provided,
// The image dimensions will be extracted from the image itself.
//
//     ul.pretty
//       @include pretty-bullets("my-icon.png")
//
@mixin pretty-bullets(
	$bullet-icon,
	$width: image-width($bullet-icon),
	$height: image-height($bullet-icon),
	$line-height: $base-line-height,
	$padding: $type-magic-number
	)
{
	margin-left: 0;

	li {
		padding-left: $padding;
		background: image-url($bullet-icon) no-repeat ($padding - $width) / 2 ($line-height - $height) / 2;
		list-style-type: none;
	}
}

//------------------------------------
//    $SIMPLE MIXINS
//------------------------------------

%border_box {
	box-sizing: border-box;
}

//Use an image instead of text, but keep the text in the DOM for
//screen readers.
//Particularly useful for logos. e.g.
// .logo{
//   @include %image-replace;
//   background: url(image/logo.png) no-repeat;
// }
%replace_image {
	white-space: nowrap;
	overflow: hidden;
	background-color: transparent;
	border: 0;
	*text-indent: -9999px;

	&:before{
		content: "";
		@extend %show;
		width: 0;
		height: 150%;
	}
}

//Hide Visually. Usefuly for Accessiblity.
//Used for text which describes a purely visual function.
// e.g. Adding 'Current page' to the current nav item (which is usually indicated by something visual.
%hide_visually {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
}

// Font family declaration.
// Allows for cleaner, consolodated code.
%primary_font_family {
	font-family: $primary-font-stack;
}
%secondary_font_family {
	font-family: $secondary-font-stack;
}

//Optimized rendering. Best saved for areas where legibility is a concern.
//Not declaring this will result in auto, allowing the browser to determine
//whether speed is best.
%text_legibility {
	text-rendering: optimizeLegibility;
}

%naked_list {
	@include no-bullets;
}

//------------------------------------
//    $VISIBILITY CLASSES
//------------------------------------
//Mixin to used for media-query-scoped display/visibility classes.
//e.g.: %show, %smalls_show, %bigs_show;
// Defined by $visibility-classes in

@mixin display-utilities(
	$namespace:"",
	$silent: false,
	$important: true,
	$class-list: $display-classes) {

	$classtype: if($silent, unquote('%'), unquote("."));
	$important_str: if($important, ' !important', '');
	$display-registry: ();

	@each $name, $display in $class-list {
		//Check for existence of a previous class using the same display
		$display-lookup: index($display-registry, $display);
		//If it exists, look it up in the map and extend that value.
		@if $display-lookup != null {
			$extender: nth(nth($class-list, $display-lookup), 1);

			#{$classtype}#{$namespace}#{$name} {
				@extend #{$classtype}#{$namespace}#{$extender};
			}
			
		}@else {
			#{$classtype}#{$namespace}#{$name}{
				display: #{$display} 	#{$important_str};
			}
			//Keep track of display values so we can extend if necessary
			$display-registry: append($display-registry, $display);
		}
	}

	#{$classtype}#{$namespace}hide     { display: 	 none		#{$important_str}; }
}


//Create silent versions of the above classes
$default-display-classes: (show: 'block', bl: 'block', il_bl: 'inline_block', tbl: 'table', tbl_cl: 'tbl_cl', hide: 'none', display_block: 'block');

//Merge user-defined classes with defaults (so we have a wide-array of silent classes)
$silent-display-classes: map-extend($display-classes, $default-display-classes, true);

@include display-utilities('', true, false, $silent-display-classes);

@if $responsive == true {
	@each $name in $breakpoint-has-widths {
		@include media-query($name) {
		   @include display-utilities('#{$name}_', true, false, $silent-display-classes);
		}
	}
}
