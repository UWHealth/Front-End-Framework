// ==========================================================================
//   Silent classes and mixins used for cleaning up and consolodating code
// ==========================================================================

//------------------------------------
//    $MEDIA QUERIES
//------------------------------------

//
// Enclose a block of code with a media query as named in `$breakpoints`.
// To create more consolodated code, most (if not all) media queries should be called through
// this mixin.
// Multiple media-queries can be defined by using:
// @include media-query((breakpoint, breakpoint)){
//         [Your code here]
// }

@mixin media-query($media-queries) {
    $breakpoint-found: false;

    @each $media-query in $media-queries {

        @each $breakpoint in $breakpoints{
            $name: nth($breakpoint, 1);
            $declaration: nth($breakpoint, 2);

            @if $media-query == $name and $declaration{
                $breakpoint-found: true;

                @media only screen and #{$declaration}{
                    @content;
                }
            }
        }
    }

    @if $breakpoint-found == false{
        @warn "Breakpoint ‘#{$media-query}’ does not exist";
    }
}

//Same as above, but shorter
@mixin breakpoint($media-queries) {
	@include media-query($media-queries){@content};
}
@mixin bp($media-queries) {
	@include media-query($media-queries){@content};
}
@mixin media($media-queries){
	@include media-query($media-queries){@content};
}
@mixin mq($media-queries){
	@include media-query($media-queries){@content};
}


//------------------------------------
//    $MULTIPLE EXTENDS
//------------------------------------
//
// Eclose a list of extends with @include extends((border-box, extension, extension))
// Note the double paranthesis.
//
@mixin extends($items) {
    @each $item in $items {
        @extend %#{$item};
    }
}

//------------------------------------
//    $LISTS
//------------------------------------
// http://compass-style.org/reference/compass/typography/lists/
// Turn off the bullet for an element of a list

@mixin no-bullet() {
    list-style-image : none;
    list-style-type  : none;
    margin-left      : 0;
}

// turns off the bullets for an entire list
@mixin no-bullets() {
    list-style: none;
    > li { @include no-bullet; }
}

// Make a list(ul/ol) have an image bullet.
//
// The mixin should be used like this for an icon that is 5x7:
//
//     ul.pretty
//       @include pretty-bullets("my-icon.png", 5px, 7px)
//
// Additionally, if the image dimensions are not provided,
// The image dimensions will be extracted from the image itself.
//
//     ul.pretty
//       @include pretty-bullets("my-icon.png")
//
@mixin pretty-bullets(
    $bullet-icon,
    $width: image-width($bullet-icon),
    $height: image-height($bullet-icon),
    $line-height: $base-line-height,
    $padding: $type-magic-number
    )
{
    margin-left: 0;

    li {
        padding-left: $padding;
        background: image-url($bullet-icon) no-repeat ($padding - $width) / 2 ($line-height - $height) / 2;
        list-style-type: none;
    }
}

//------------------------------------
//    $SIMPLE MIXINS
//------------------------------------

%border_box {
    box-sizing: border-box;
}

//Use an image instead of text, but keep the text in the DOM for
//screen readers.
//Particularly useful for logos. e.g.
// .logo{
//   @include %image-replace;
//   background: url(image/logo.png) no-repeat;
// }
%replace_image {
    white-space: nowrap;
    overflow: hidden;
    background-color: transparent;
    border: 0;
    *text-indent: -9999px;

    &:before{
        content: "";
        @extend %display_block;
        width: 0;
        height: 150%;
    }
}

//Hide Visually. Usefuly for Accessiblity.
//Used for text which describes a purely visual function.
// e.g. Adding 'Current page' to the current nav item (which is usually indicated by something visual.
%hide_visually {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

// Font family declaration.
// Allows for cleaner, consolodated code.
%primary_font_family {
    font-family: $primary-font-stack;
}
%secondary_font_family {
    font-family: $secondary-font-stack;
}

//Optimized rendering. Best saved for areas where legibility is a concern.
//Not declaring this will result in auto, allowing the browser to determine
//whether speed is best.
%text_legibility {
	text-rendering: optimizeLegibility;
}

// Create vertical rhythms that are more appropriate for headings inside text blocks.
// Adds 2/3 of the vertical rhythm to the top and 1/3 to bottom so headings appear
// closer to their sibling paragraphs. Creates better proximity.
%vertical_rhythm_headings {
    padding: 0;
    margin-bottom: $type-magic-number * .5;
    margin-bottom: ($type-magic-ratio * .5) * 1rem;
    margin-top: $type-magic-number * -.25;
    margin-top: ($type-magic-ratio * -.25) * 1rem;
}
%naked_list{
    @include no-bullets;
}
//------------------------------------
//    $RESPONSIVE MIXINS
//------------------------------------
//Mixin to used for media-query-scoped extends.
//e.g.: @extend %media_block or @include %small--media_block;

@mixin responsive-hiders($namespace:"", $silent: false, $important: true) {
    $classtype: unquote('.');

    $important_str: if($important, ' !important', '');

    @if $silent{
        $classtype: unquote('%');
    }

	#{$classtype}#{$namespace}show     { display: block#{$important_str} }
    #{$classtype}#{$namespace}hide     { display: none#{$important_str} }

}


//Making the above mixins responsive.
@include responsive-hiders('', true, false);

@if $responsive == true{
    @each $name in $breakpoint-has-widths {
        @include media-query($name) {
           @include responsive-hiders('#{$name}_', true, false);
        }
    }
}
