(window["webpackJsonpuwhealth"] = window["webpackJsonpuwhealth"] || []).push([[1],{

/***/ "../../_src/components/base/base.sv.html":
/*!***********************************************************************************!*\
  !*** C:/Users/cdl193/Sites/Front-End-Framework/_src/components/base/base.sv.html ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "../../node_modules/svelte/shared.js");
/* _src\components\base\base.sv.html generated by Svelte v1.58.0 */


function data(){
    return {
        mainClass: "main"
    }
};

function create_main_fragment(component, state) {
	var main, slot_content_default = component._slotted.default;

	return {
		c: function create() {
			main = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("main");
			this.h();
		},

		l: function claim(nodes) {
			main = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "MAIN", { class: true }, false);
			var main_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(main);

			main_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			main.className = state.mainClass;
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(main, target, anchor);

			if (slot_content_default) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(slot_content_default, main);
			}
		},

		p: function update(changed, state) {
			if (changed.mainClass) {
				main.className = state.mainClass;
			}
		},

		u: function unmount() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(main);

			if (slot_content_default) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["reinsertChildren"])(main, slot_content_default);
			}
		},

		d: svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["noop"]
	};
}

function Base_sv(options) {
	this._debugName = '<Base_sv>';
	if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
	this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(data(), options.data);
	if (!('mainClass' in this._state)) console.warn("<Base_sv> was created without expected data property 'mainClass'");

	this._slotted = options.slots || {};

	this.slots = {};

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		this._mount(options.target, options.anchor);
	}
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(Base_sv.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

Base_sv.prototype._checkReadOnly = function _checkReadOnly(newState) {
};
/* harmony default export */ __webpack_exports__["default"] = (Base_sv);

/***/ }),

/***/ "../../_src/components/demo/demo.wrapper.html":
/*!****************************************************************************************!*\
  !*** C:/Users/cdl193/Sites/Front-End-Framework/_src/components/demo/demo.wrapper.html ***!
  \****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "../../node_modules/svelte/shared.js");
/* harmony import */ var _base_base_sv_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/base.sv.html */ "../../_src/components/base/base.sv.html");
/* harmony import */ var _demo_store_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./demo.store.js */ "../../_src/components/demo/demo.store.js");
/* harmony import */ var _demo_store_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_demo_store_js__WEBPACK_IMPORTED_MODULE_2__);
/* _src\components\demo\demo.wrapper.html generated by Svelte v1.58.0 */




function data() {
    return {
        demoTitle: 'Demo',
        variantTitle: false,
        variants: false
    };
};

function oncreate() {
    if (this.slots.variants) {
        this.set({'variants': true});
    }
};

function ondestroy() {};

function store_1() {
	return _demo_store_js__WEBPACK_IMPORTED_MODULE_2___default.a;
}

function create_main_fragment(component, state) {
	var div, link, text, header, div_1, h1, text_1, text_3, div_2, slot_content_header = component._slotted.header, p, text_4, text_9, text_10, div_3, text_12;

	var if_block = (state.variants || state.variantTitle) && create_if_block(component, state);

	var base = new _base_base_sv_html__WEBPACK_IMPORTED_MODULE_1__["default"]({
		root: component.root,
		slots: { default: Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createFragment"])() },
		data: { mainClass: "demo-body" }
	});

	return {
		c: function create() {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			link = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("link");
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n\r\n    ");
			header = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("header");
			div_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			h1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("h1");
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(state.demoTitle);
			text_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n            ");
			div_2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			if (!slot_content_header) {
				p = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("p");
				text_4 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("No Examples");
			}
			text_9 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n\r\n    ");
			text_10 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n        ");
			div_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			if (if_block) if_block.c();
			text_12 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n    ");
			base._fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", { class: true }, false);
			var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			link = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_nodes, "LINK", { rel: true, href: true }, false);
			var link_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(link);

			link_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(div_nodes, "\r\n\r\n    ");

			header = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_nodes, "HEADER", { class: true }, false);
			var header_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(header);

			div_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(header_nodes, "DIV", { class: true }, false);
			var div_1_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div_1);

			h1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_1_nodes, "H1", { class: true }, false);
			var h1_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(h1);

			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(h1_nodes, state.demoTitle);
			h1_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			text_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(div_1_nodes, "\r\n            ");

			div_2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_1_nodes, "DIV", { class: true }, false);
			var div_2_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div_2);

			p = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_2_nodes, "P", {}, false);
			var p_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(p);

			text_4 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(p_nodes, "No Examples");
			p_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			div_2_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			div_1_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			header_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			text_9 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(div_nodes, "\r\n\r\n    ");
			text_10 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "\r\n        ");

			div_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", { class: true }, false);
			var div_3_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div_3);

			if (if_block) if_block.l(div_3_nodes);
			div_3_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			text_12 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "\r\n    ");
			base._fragment.l(div_nodes);
			div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			link.rel = "stylesheet";
			link.href = "/public/css/demo/demo.css";
			h1.className = "demo-header__title";
			div_2.className = "demo-header__component";
			div_1.className = "wrap";
			header.className = "demo-header";
			div_3.className = "wrap";
			div.className = "demo";
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(div, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(link, div);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, div);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(header, div);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(div_1, header);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(h1, div_1);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_1, h1);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_3, div_1);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(div_2, div_1);
			if (!slot_content_header) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(p, div_2);
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_4, p);
			}

			else {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(slot_content_header, div_2);
			}

			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_9, div);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_10, base._slotted.default);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(div_3, base._slotted.default);
			if (if_block) if_block.m(div_3, null);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_12, base._slotted.default);
			base._mount(div, null);
		},

		p: function update(changed, state) {
			if (changed.demoTitle) {
				text_1.data = state.demoTitle;
			}

			if (state.variants || state.variantTitle) {
				if (if_block) {
					if_block.p(changed, state);
				} else {
					if_block = create_if_block(component, state);
					if_block.c();
					if_block.m(div_3, null);
				}
			} else if (if_block) {
				if_block.u();
				if_block.d();
				if_block = null;
			}
		},

		u: function unmount() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(div);

			if (slot_content_header) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["reinsertChildren"])(div_2, slot_content_header);
			}

			if (if_block) if_block.u();
		},

		d: function destroy() {
			if (if_block) if_block.d();
			base.destroy(false);
		}
	};
}

// (19:12) {{#if variants || variantTitle}}
function create_if_block(component, state) {
	var h2, text_value = state.variantTitle || state.demoTitle, text, text_1, text_2, slot_content_variants = component._slotted.variants, slot_content_variants_before, slot_content_variants_after;

	return {
		c: function create() {
			h2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("h2");
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(text_value);
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(" Variants");
			text_2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n            ");
			this.h();
		},

		l: function claim(nodes) {
			h2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "H2", { class: true }, false);
			var h2_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(h2);

			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(h2_nodes, text_value);
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(h2_nodes, " Variants");
			h2_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			text_2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "\r\n            ");
			this.h();
		},

		h: function hydrate() {
			h2.className = "demo-body__head";
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(h2, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, h2);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_1, h2);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(text_2, target, anchor);

			if (slot_content_variants) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(slot_content_variants_before || (slot_content_variants_before = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])()), target, anchor);
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(slot_content_variants, target, anchor);
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(slot_content_variants_after || (slot_content_variants_after = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])()), target, anchor);
			}
		},

		p: function update(changed, state) {
			if ((changed.variantTitle || changed.demoTitle) && text_value !== (text_value = state.variantTitle || state.demoTitle)) {
				text.data = text_value;
			}
		},

		u: function unmount() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(h2);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(text_2);

			if (slot_content_variants) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["reinsertBetween"])(slot_content_variants_before, slot_content_variants_after, slot_content_variants);
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(slot_content_variants_before);
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(slot_content_variants_after);
			}
		},

		d: svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["noop"]
	};
}

function Demo_wrapper(options) {
	this._debugName = '<Demo_wrapper>';
	if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
	this.store = store_1();
	this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(data(), options.data);
	if (!('demoTitle' in this._state)) console.warn("<Demo_wrapper> was created without expected data property 'demoTitle'");
	if (!('variants' in this._state)) console.warn("<Demo_wrapper> was created without expected data property 'variants'");
	if (!('variantTitle' in this._state)) console.warn("<Demo_wrapper> was created without expected data property 'variantTitle'");

	this._handlers.destroy = [ondestroy];

	this._slotted = options.slots || {};

	var _oncreate = oncreate.bind(this);

	if (!options.root) {
		this._oncreate = [];
		this._beforecreate = [];
		this._aftercreate = [];
	}

	this.slots = {};

	this._fragment = create_main_fragment(this, this._state);

	this.root._oncreate.push(_oncreate);

	if (options.target) {
		var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		this._mount(options.target, options.anchor);

		this._lock = true;
		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._beforecreate);
		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._oncreate);
		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._aftercreate);
		this._lock = false;
	}
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(Demo_wrapper.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

Demo_wrapper.prototype._checkReadOnly = function _checkReadOnly(newState) {
};
/* harmony default export */ __webpack_exports__["default"] = (Demo_wrapper);

/***/ }),

/***/ "../../_src/components/feed/feed.demo.html":
/*!*************************************************************************************!*\
  !*** C:/Users/cdl193/Sites/Front-End-Framework/_src/components/feed/feed.demo.html ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "../../node_modules/svelte/shared.js");
/* harmony import */ var _components_demo_demo_store_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/demo/demo.store.js */ "../../_src/components/demo/demo.store.js");
/* harmony import */ var _components_demo_demo_store_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_components_demo_demo_store_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _demo_demo_wrapper_html__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../demo/demo.wrapper.html */ "../../_src/components/demo/demo.wrapper.html");
/* harmony import */ var _feed_results_html__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./feed.results.html */ "../../_src/components/feed/feed.results.html");
/* _src\components\feed\feed.demo.html generated by Svelte v1.58.0 */





function feed(feedUrl) {
	return !window.fetch ? '{}' : fetch(feedUrl).then(r => r.json());
}

function data() {
    return {
        feedUrl: "https://uconnect.wisc.edu/feeds/30m/json/homepage/index.json",
        MAX_PER_PAGE: 10,
        page: 1,
        feedResults: false
    };
};

var methods = {};

function oncreate() {
    console.log(this);
    this.observe('feed', (feed) => {
        feed.then((feedResults) => {
            this.set({"feedResults": feedResults.results});
            console.log(this.get('feedResults').result.length);
        });
    });
};

function store_1() {
	return _components_demo_demo_store_js__WEBPACK_IMPORTED_MODULE_1___default.a;
}

function create_main_fragment(component, state) {
	var text, div, text_1, div_1, h5, text_2, text_3, text_4, text_5, text_7;

	function select_block_type(state) {
		if (state.feedResults) return create_if_block;
		return create_if_block_1;
	}

	var current_block_type = select_block_type(state);
	var if_block = current_block_type(component, state);

	var if_block_1 = (state.feedResults) && create_if_block_2(component, state);

	var demo = new _demo_demo_wrapper_html__WEBPACK_IMPORTED_MODULE_2__["default"]({
		root: component.root,
		slots: { default: Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createFragment"])(), header: Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createFragment"])(), variants: Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createFragment"])() },
		data: {
			demoTitle: "Feed Example",
			variants: true
		}
	});

	return {
		c: function create() {
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n    ");
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n    ");
			div_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			h5 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("h5");
			text_2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("Feed Page ");
			text_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(state.page);
			text_4 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n    ");
			if_block.c();
			text_5 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n\r\n    ");
			if (if_block_1) if_block_1.c();
			text_7 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n");
			demo._fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "\r\n    ");

			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", { slot: true }, false);
			var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "\r\n    ");

			div_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", { slot: true }, false);
			var div_1_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div_1);

			h5 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_1_nodes, "H5", {}, false);
			var h5_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(h5);

			text_2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(h5_nodes, "Feed Page ");
			text_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(h5_nodes, state.page);
			h5_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			text_4 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(div_1_nodes, "\r\n    ");
			if_block.l(div_1_nodes);
			text_5 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(div_1_nodes, "\r\n\r\n    ");
			if (if_block_1) if_block_1.l(div_1_nodes);
			div_1_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			text_7 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "\r\n");
			demo._fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setAttribute"])(div, "slot", "header");
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setAttribute"])(div_1, "slot", "variants");
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, demo._slotted.default);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(div, demo._slotted.header);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_1, demo._slotted.default);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(div_1, demo._slotted.variants);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(h5, div_1);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_2, h5);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_3, h5);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_4, div_1);
			if_block.m(div_1, null);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_5, div_1);
			if (if_block_1) if_block_1.m(div_1, null);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_7, demo._slotted.default);
			demo._mount(target, anchor);
		},

		p: function update(changed, state) {
			if (changed.page) {
				text_3.data = state.page;
			}

			if (current_block_type === (current_block_type = select_block_type(state)) && if_block) {
				if_block.p(changed, state);
			} else {
				if_block.u();
				if_block.d();
				if_block = current_block_type(component, state);
				if_block.c();
				if_block.m(div_1, text_5);
			}

			if (state.feedResults) {
				if (if_block_1) {
					if_block_1.p(changed, state);
				} else {
					if_block_1 = create_if_block_2(component, state);
					if_block_1.c();
					if_block_1.m(div_1, null);
				}
			} else if (if_block_1) {
				if_block_1.u();
				if_block_1.d();
				if_block_1 = null;
			}

			var demo_changes = {};
			demo_changes.variants = true;
			demo._set(demo_changes);
		},

		u: function unmount() {
			if_block.u();
			if (if_block_1) if_block_1.u();
			demo._unmount();
		},

		d: function destroy() {
			if_block.d();
			if (if_block_1) if_block_1.d();
			demo.destroy(false);
		}
	};
}

// (8:23)               <p>Loading Feed...</p>          {{then response}}
function create_pending_block(component, state) {
	var p, text;

	return {
		c: function create() {
			p = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("p");
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("Loading Feed...");
		},

		l: function claim(nodes) {
			p = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "P", {}, false);
			var p_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(p);

			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(p_nodes, "Loading Feed...");
			p_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(p, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, p);
		},

		p: svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["noop"],

		u: function unmount() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(p);
		},

		d: svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["noop"]
	};
}

// (10:8) {{then response}}
function create_then_block(component, state) {
	var response = state.response, undefined = state.undefined, undefined = state.undefined;

	var results = new _feed_results_html__WEBPACK_IMPORTED_MODULE_3__["default"]({
		root: component.root,
		data: {
			results: response.results,
			page: state.page,
			MAX_PER_PAGE: state.MAX_PER_PAGE
		}
	});

	return {
		c: function create() {
			results._fragment.c();
		},

		l: function claim(nodes) {
			results._fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			results._mount(target, anchor);
		},

		p: function update(changed, state) {
			response = state.response;
			undefined = state.undefined;
			undefined = state.undefined;
			var results_changes = {};
			if (changed.feed) results_changes.results = response.results;
			if (changed.page) results_changes.page = state.page;
			if (changed.MAX_PER_PAGE) results_changes.MAX_PER_PAGE = state.MAX_PER_PAGE;
			results._set(results_changes);
		},

		u: function unmount() {
			results._unmount();
		},

		d: function destroy() {
			results.destroy(false);
		}
	};
}

// (12:8) {{catch error}}
function create_catch_block(component, state) {
	var error = state.error, undefined = state.undefined, undefined = state.undefined;
	var p, text_value = error, text;

	return {
		c: function create() {
			p = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("p");
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(text_value);
		},

		l: function claim(nodes) {
			p = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "P", {}, false);
			var p_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(p);

			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(p_nodes, text_value);
			p_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(p, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, p);
		},

		p: function update(changed, state) {
			error = state.error;
			undefined = state.undefined;
			undefined = state.undefined;
			if ((changed.feed) && text_value !== (text_value = error)) {
				text.data = text_value;
			}
		},

		u: function unmount() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(p);
		},

		d: svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["noop"]
	};
}

// (5:4) {{#if feedResults}}
function create_if_block(component, state) {

	var results = new _feed_results_html__WEBPACK_IMPORTED_MODULE_3__["default"]({
		root: component.root,
		data: {
			results: state.feedResults,
			page: state.page,
			MAX_PER_PAGE: state.MAX_PER_PAGE
		}
	});

	return {
		c: function create() {
			results._fragment.c();
		},

		l: function claim(nodes) {
			results._fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			results._mount(target, anchor);
		},

		p: function update(changed, state) {
			var results_changes = {};
			if (changed.feedResults) results_changes.results = state.feedResults;
			if (changed.page) results_changes.page = state.page;
			if (changed.MAX_PER_PAGE) results_changes.MAX_PER_PAGE = state.MAX_PER_PAGE;
			results._set(results_changes);
		},

		u: function unmount() {
			results._unmount();
		},

		d: function destroy() {
			results.destroy(false);
		}
	};
}

// (7:4) {{else}}
function create_if_block_1(component, state) {
	var await_block_anchor, await_block_1, await_block_type, await_token, promise, resolved;

	function replace_await_block(token, type, state) {
		if (token !== await_token) return;

		var old_block = await_block_1;
		await_block_1 = type && (await_block_type = type)(component, state);

		if (old_block) {
			old_block.u();
			old_block.d();
			await_block_1.c();
			await_block_1.m(await_block_anchor.parentNode, await_block_anchor);

			component.root.set({});
		}
	}

	function handle_promise(promise, state) {
		var token = await_token = {};

		if (Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["isPromise"])(promise)) {
			promise.then(function(value) {
				var state = component.get();
				resolved = { response: value };
				replace_await_block(token, create_then_block, Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])({}, state, resolved));
			}, function (error) {
				var state = component.get();
				resolved = { error: error };
				replace_await_block(token, create_catch_block, Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])({}, state, resolved));
			});

			// if we previously had a then/catch block, destroy it
			if (await_block_type !== create_pending_block) {
				replace_await_block(token, create_pending_block, state);
				return true;
			}
		} else {
			resolved = { response: promise };
			if (await_block_type !== create_then_block) {
				replace_await_block(token, create_then_block, Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])({}, state, resolved));
				return true;
			}
		}
	}

	handle_promise(promise = state.feed, state);

	return {
		c: function create() {
			await_block_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])();

			await_block_1.c();
		},

		l: function claim(nodes) {
			await_block_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])();

			await_block_1.l(nodes);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(await_block_anchor, target, anchor);

			await_block_1.m(target, anchor);
		},

		p: function update(changed, state) {
			if (('feed' in changed) && promise !== (promise = state.feed) && handle_promise(promise, state)) {
				// nothing
			} else {
				await_block_1.p(changed, Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])({}, state, resolved));
			}
		},

		u: function unmount() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(await_block_anchor);

			await_block_1.u();
		},

		d: function destroy() {
			await_token = null;
			await_block_1.d();
		}
	};
}

// (18:8) {{#if page !== 1}}
function create_if_block_3(component, state) {
	var button, text, text_1_value = state.page - 1, text_1;

	function click_handler(event) {
		var state = component.get();
		component.set({'page': state.page - 1});
	}

	return {
		c: function create() {
			button = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("button");
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("Page ");
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(text_1_value);
			this.h();
		},

		l: function claim(nodes) {
			button = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "BUTTON", {}, false);
			var button_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(button);

			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(button_nodes, "Page ");
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(button_nodes, text_1_value);
			button_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addListener"])(button, "click", click_handler);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(button, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, button);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_1, button);
		},

		p: function update(changed, state) {
			if ((changed.page) && text_1_value !== (text_1_value = state.page - 1)) {
				text_1.data = text_1_value;
			}
		},

		u: function unmount() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(button);
		},

		d: function destroy() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["removeListener"])(button, "click", click_handler);
		}
	};
}

// (21:8) {{#if (page * (MAX_PER_PAGE + 1)) <= feedResults.result.length}}
function create_if_block_4(component, state) {
	var button, text, text_1_value = state.page + 1, text_1;

	function click_handler(event) {
		var state = component.get();
		component.set({'page': state.page + 1});
	}

	return {
		c: function create() {
			button = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("button");
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("Page ");
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(text_1_value);
			this.h();
		},

		l: function claim(nodes) {
			button = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "BUTTON", {}, false);
			var button_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(button);

			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(button_nodes, "Page ");
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(button_nodes, text_1_value);
			button_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addListener"])(button, "click", click_handler);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(button, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, button);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_1, button);
		},

		p: function update(changed, state) {
			if ((changed.page) && text_1_value !== (text_1_value = state.page + 1)) {
				text_1.data = text_1_value;
			}
		},

		u: function unmount() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(button);
		},

		d: function destroy() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["removeListener"])(button, "click", click_handler);
		}
	};
}

// (17:4) {{#if feedResults}}
function create_if_block_2(component, state) {
	var text, if_block_1_anchor;

	var if_block = (state.page !== 1) && create_if_block_3(component, state);

	var if_block_1 = ((state.page * (state.MAX_PER_PAGE + 1)) <= state.feedResults.result.length) && create_if_block_4(component, state);

	return {
		c: function create() {
			if (if_block) if_block.c();
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n        ");
			if (if_block_1) if_block_1.c();
			if_block_1_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])();
		},

		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "\r\n        ");
			if (if_block_1) if_block_1.l(nodes);
			if_block_1_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])();
		},

		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(text, target, anchor);
			if (if_block_1) if_block_1.m(target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(if_block_1_anchor, target, anchor);
		},

		p: function update(changed, state) {
			if (state.page !== 1) {
				if (if_block) {
					if_block.p(changed, state);
				} else {
					if_block = create_if_block_3(component, state);
					if_block.c();
					if_block.m(text.parentNode, text);
				}
			} else if (if_block) {
				if_block.u();
				if_block.d();
				if_block = null;
			}

			if ((state.page * (state.MAX_PER_PAGE + 1)) <= state.feedResults.result.length) {
				if (if_block_1) {
					if_block_1.p(changed, state);
				} else {
					if_block_1 = create_if_block_4(component, state);
					if_block_1.c();
					if_block_1.m(if_block_1_anchor.parentNode, if_block_1_anchor);
				}
			} else if (if_block_1) {
				if_block_1.u();
				if_block_1.d();
				if_block_1 = null;
			}
		},

		u: function unmount() {
			if (if_block) if_block.u();
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(text);
			if (if_block_1) if_block_1.u();
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(if_block_1_anchor);
		},

		d: function destroy() {
			if (if_block) if_block.d();
			if (if_block_1) if_block_1.d();
		}
	};
}

function Feed_demo(options) {
	this._debugName = '<Feed_demo>';
	if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
	this.store = store_1();
	this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(data(), options.data);
	this._recompute({ feedUrl: 1 }, this._state);
	if (!('feedUrl' in this._state)) console.warn("<Feed_demo> was created without expected data property 'feedUrl'");
	if (!('page' in this._state)) console.warn("<Feed_demo> was created without expected data property 'page'");
	if (!('feedResults' in this._state)) console.warn("<Feed_demo> was created without expected data property 'feedResults'");
	if (!('MAX_PER_PAGE' in this._state)) console.warn("<Feed_demo> was created without expected data property 'MAX_PER_PAGE'");

	var _oncreate = oncreate.bind(this);

	if (!options.root) {
		this._oncreate = [];
		this._beforecreate = [];
		this._aftercreate = [];
	}

	this._fragment = create_main_fragment(this, this._state);

	this.root._oncreate.push(_oncreate);

	if (options.target) {
		var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		this._mount(options.target, options.anchor);

		this._lock = true;
		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._beforecreate);
		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._oncreate);
		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._aftercreate);
		this._lock = false;
	}
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(Feed_demo.prototype, methods, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

Feed_demo.prototype._checkReadOnly = function _checkReadOnly(newState) {
	if ('feed' in newState && !this._updatingReadonlyProperty) throw new Error("<Feed_demo>: Cannot set read-only property 'feed'");
};

Feed_demo.prototype._recompute = function _recompute(changed, state) {
	if (changed.feedUrl) {
		if (this._differs(state.feed, (state.feed = feed(state.feedUrl)))) changed.feed = true;
	}
}
/* harmony default export */ __webpack_exports__["default"] = (Feed_demo);

/***/ }),

/***/ "../../_src/components/feed/feed.results.html":
/*!****************************************************************************************!*\
  !*** C:/Users/cdl193/Sites/Front-End-Framework/_src/components/feed/feed.results.html ***!
  \****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "../../node_modules/svelte/shared.js");
/* harmony import */ var svelte_transitions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte-transitions */ "../../node_modules/svelte-transitions/module.js");
/* harmony import */ var eases_jsnext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! eases-jsnext */ "../../node_modules/eases-jsnext/dist/eases.es.js");
/* _src\components\feed\feed.results.html generated by Svelte v1.58.0 */




function pageStart(page, MAX_PER_PAGE) {
    return page === 1 ? 0 : Math.max(0, page * (MAX_PER_PAGE + 1));
}

function pageEnd(pageStart, MAX_PER_PAGE) {
    return pageStart + MAX_PER_PAGE + 1;
}

function data() {
    return {
        MAX_PER_PAGE: 25,
        page: 1
    };
};

function description(description) {
    let text = Array.isArray(description) ? description[2] : description;
    let image = /(&lt;img[\s].*\/&gt;)/gi.exec(text);
    image = image ? image[0] :
        description[1] ?
            '&lt;img src="https://uconnect.wisc.edu' + description[1] + '"/&gt;'
            : '';
    text = text.replace(image, '');

    return {text: decodeEntities(text), image: decodeEntities(image)};
}

function oncreate() {
    this.observe('page', (page) => {
        window.scroll(0, 0);
    });
};

var decodeEntities = (function() {
    // this prevents any overhead from creating the object each time
    var element = document ? document.createElement('div') : '';

    function decodeHTMLEntities (str) {
        if (str && typeof str === 'string') {
            // strip script/html tags
            str = str.replace(/<script[^>]*>([\S\s]*?)<\/script>/gmi, '');
            str = str.replace(/<\/?\w(?:[^"'>]|"[^"]*"|'[^']*')*>/gmi, '');
            element.innerHTML = str;
            str = element.textContent;
            element.textContent = '';
        }

        return str;
    }

    return decodeHTMLEntities;
})();

function create_main_fragment(component, state) {
	var if_block_anchor;

	var if_block = (state.results) && create_if_block(component, state);

	return {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])();
		},

		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])();
		},

		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(if_block_anchor, target, anchor);
		},

		p: function update(changed, state) {
			if (state.results) {
				if (if_block) {
					if_block.p(changed, state);
				} else {
					if_block = create_if_block(component, state);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.u();
				if_block.d();
				if_block = null;
			}
		},

		u: function unmount() {
			if (if_block) if_block.u();
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(if_block_anchor);
		},

		d: function destroy() {
			if (if_block) if_block.d();
		}
	};
}

// (2:4) {{#each results.result.slice(pageStart, pageEnd) as result, i}}
function create_each_block(component, state) {
	var result = state.result, each_value = state.each_value, i = state.i;
	var div, text, div_1, strong, text_1, text_2, text_3_value = result.title, text_3, text_4, p, raw_value = description(result.description).text, div_transition, text_7, hr, introing, outroing;

	var if_block = (description(result.description).image) && create_if_block_1(component, state);

	return {
		c: function create() {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			if (if_block) if_block.c();
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n            ");
			div_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			strong = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("strong");
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(i);
			text_2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(":");
			text_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(text_3_value);
			text_4 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n                ");
			p = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("p");
			text_7 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\r\n        ");
			hr = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("hr");
			this.h();
		},

		l: function claim(nodes) {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", { class: true }, false);
			var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			if (if_block) if_block.l(div_nodes);
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(div_nodes, "\r\n            ");

			div_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_nodes, "DIV", { class: true }, false);
			var div_1_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div_1);

			strong = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_1_nodes, "STRONG", {}, false);
			var strong_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(strong);

			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(strong_nodes, i);
			text_2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(strong_nodes, ":");
			text_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(strong_nodes, text_3_value);
			strong_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			text_4 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(div_1_nodes, "\r\n                ");

			p = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_1_nodes, "P", {}, false);
			var p_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(p);

			p_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			div_1_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			text_7 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "\r\n        ");

			hr = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "HR", {}, false);
			var hr_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(hr);

			hr_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			div_1.className = "media-object__body";
			div.className = "media-object";
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(div, target, anchor);
			if (if_block) if_block.m(div, null);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, div);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(div_1, div);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(strong, div_1);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_1, strong);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_2, strong);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_3, strong);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_4, div_1);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(p, div_1);
			p.innerHTML = raw_value;
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(text_7, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(hr, target, anchor);
		},

		p: function update(changed, state) {
			result = state.result;
			each_value = state.each_value;
			i = state.i;
			if (description(result.description).image) {
				if (if_block) {
					if_block.p(changed, state);
				} else {
					if_block = create_if_block_1(component, state);
					if_block.c();
					if_block.m(div, text);
				}
			} else if (if_block) {
				if_block.u();
				if_block.d();
				if_block = null;
			}

			if ((outroing || changed.results || changed.pageStart || changed.pageEnd) && text_3_value !== (text_3_value = result.title)) {
				text_3.data = text_3_value;
			}

			if ((outroing || changed.results || changed.pageStart || changed.pageEnd) && raw_value !== (raw_value = description(result.description).text)) {
				p.innerHTML = raw_value;
			}
		},

		i: function intro(target, anchor) {
			if (introing) return;
			introing = true;
			outroing = false;

			component.root._aftercreate.push(function() {
				if (!div_transition) div_transition = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["wrapTransition"])(component, div, svelte_transitions__WEBPACK_IMPORTED_MODULE_1__["slide"], {}, true, null);
				div_transition.run(true, function() {
					component.fire("intro.end", { node: div });
				});
			});

			this.m(target, anchor);
		},

		o: function outro(outrocallback) {
			if (outroing) return;
			outroing = true;
			introing = false;

			var outros = 1;

			div_transition.run(false, function() {
				component.fire("outro.end", { node: div });
				if (--outros === 0) outrocallback();
				div_transition = null;
			});
		},

		u: function unmount() {
			p.innerHTML = '';

			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(div);
			if (if_block) if_block.u();
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(text_7);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(hr);
		},

		d: function destroy() {
			if (if_block) if_block.d();
		}
	};
}

// (4:12) {{#if description(result.description).image}}
function create_if_block_1(component, state) {
	var result = state.result, each_value = state.each_value, i = state.i;
	var div, raw_value = description(result.description).image;

	return {
		c: function create() {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			this.h();
		},

		l: function claim(nodes) {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", { class: true }, false);
			var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			div.className = "media-object__media";
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(div, target, anchor);
			div.innerHTML = raw_value;
		},

		p: function update(changed, state) {
			result = state.result;
			each_value = state.each_value;
			i = state.i;
			if ((changed.results || changed.pageStart || changed.pageEnd) && raw_value !== (raw_value = description(result.description).image)) {
				div.innerHTML = raw_value;
			}
		},

		u: function unmount() {
			div.innerHTML = '';

			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(div);
		},

		d: svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["noop"]
	};
}

// (1:0) {{#if results}}
function create_if_block(component, state) {
	var each_anchor;

	var each_value = state.results.result.slice(state.pageStart, state.pageEnd);

	var each_blocks = [];

	for (var i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(component, Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])({}, state, {
			each_value: each_value,
			result: each_value[i],
			i: i
		}));
	}

	return {
		c: function create() {
			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])();
		},

		l: function claim(nodes) {
			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])();
		},

		m: function mount(target, anchor) {
			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].i(target, anchor);
			}

			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(each_anchor, target, anchor);
		},

		p: function update(changed, state) {
			var each_value = state.results.result.slice(state.pageStart, state.pageEnd);

			if (changed.results || changed.pageStart || changed.pageEnd) {
				for (var i = 0; i < each_value.length; i += 1) {
					var each_context = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])({}, state, {
						each_value: each_value,
						result: each_value[i],
						i: i
					});

					if (each_blocks[i]) {
						each_blocks[i].p(changed, each_context);
					} else {
						each_blocks[i] = create_each_block(component, each_context);
						each_blocks[i].c();
					}
					each_blocks[i].i(each_anchor.parentNode, each_anchor);
				}

				function outro(i) {
					if (each_blocks[i]) {
						each_blocks[i].o(function() {
							each_blocks[i].u();
							each_blocks[i].d();
							each_blocks[i] = null;
						});
					}
				}

				for (; i < each_blocks.length; i += 1) outro(i);
			}
		},

		u: function unmount() {
			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].u();
			}

			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(each_anchor);
		},

		d: function destroy() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["destroyEach"])(each_blocks);
		}
	};
}

function Feed_results(options) {
	this._debugName = '<Feed_results>';
	if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
	this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(data(), options.data);
	this._recompute({ page: 1, MAX_PER_PAGE: 1, pageStart: 1 }, this._state);
	if (!('page' in this._state)) console.warn("<Feed_results> was created without expected data property 'page'");
	if (!('MAX_PER_PAGE' in this._state)) console.warn("<Feed_results> was created without expected data property 'MAX_PER_PAGE'");

	if (!('results' in this._state)) console.warn("<Feed_results> was created without expected data property 'results'");

	var _oncreate = oncreate.bind(this);

	if (!options.root) {
		this._oncreate = [];
		this._aftercreate = [];
	}

	this._fragment = create_main_fragment(this, this._state);

	this.root._oncreate.push(_oncreate);

	if (options.target) {
		var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		this._mount(options.target, options.anchor);

		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._oncreate);
		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._aftercreate);
	}
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(Feed_results.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

Feed_results.prototype._checkReadOnly = function _checkReadOnly(newState) {
	if ('pageStart' in newState && !this._updatingReadonlyProperty) throw new Error("<Feed_results>: Cannot set read-only property 'pageStart'");
	if ('pageEnd' in newState && !this._updatingReadonlyProperty) throw new Error("<Feed_results>: Cannot set read-only property 'pageEnd'");
};

Feed_results.prototype._recompute = function _recompute(changed, state) {
	if (changed.page || changed.MAX_PER_PAGE) {
		if (this._differs(state.pageStart, (state.pageStart = pageStart(state.page, state.MAX_PER_PAGE)))) changed.pageStart = true;
	}

	if (changed.pageStart || changed.MAX_PER_PAGE) {
		if (this._differs(state.pageEnd, (state.pageEnd = pageEnd(state.pageStart, state.MAX_PER_PAGE)))) changed.pageEnd = true;
	}
}
/* harmony default export */ __webpack_exports__["default"] = (Feed_results);

/***/ })

}]);
//# sourceMappingURL=1.chunk.js.map