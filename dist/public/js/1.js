(window["webpackJsonpuwhealth"] = window["webpackJsonpuwhealth"] || []).push([[1],{

/***/ "../../@src/components/async/async.html":
/*!***********************************************************************************!*\
  !*** /Users/lee/Sites/Other/Front-End-Framework/@src/components/async/async.html ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte/shared.js */ "../../node_modules/svelte/shared.js");
/* harmony import */ var _helpers_find_export_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/helpers/find-export.js */ "../../@src/helpers/find-export.js");
/*Babel»*/


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}
/* @src/components/async/async.html generated by Svelte v2.9.7 */





function SSRComponent(
/*Babel»*/
_ref) {
  /*Babel»*/
  var webpack = _ref.webpack;
  var load = webpack(); // Find module in webpack cache

  var mod = __webpack_require__.m[load];
  var component = requireModule(mod, load);
  return component && component;
}

function data() {
  return {
    props: {},
    component: null,
    loadingComponent: null,
    errorComponent: null,
    loader: null,
    webpack: null,
    error: null,
    loading: false
  };
}

;
var methods = {
  /*Babel»*/
  getComponent: function getComponent() {
    /*Babel»*/
    var _this$get = this.get(),
        loader = _this$get.loader;

    try {
      if (loader) {
        return loader().then(function (Component)
        /*Babel»*/
        {
          return Object(_helpers_find_export_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Component);
        });
      }
    } catch (err) {
      this.set({
        error: err
      });
      return err;
    }
  }
};
/*Babel»*/

function oncreate() {
  return _oncreate.apply(this, arguments);
}
/*Babel»*/


function _oncreate() {
  _oncreate = _asyncToGenerator(
  /*#__PURE__*/
  _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function
  /*Babel»*/
  _callee()
  /*Babel»*/
  {
    var component;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            this.set({
              loading: true
            });
            _context.next = 3;
            return this.getComponent();

          case 3:
            component = _context.sent;
            this.set({
              component: component,
              loading: false
            });

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));
  return _oncreate.apply(this, arguments);
}

;

function requireModule(mod, load) {
  // Reject any modules not found in webpack
  if (typeof mod === 'undefined') {
    return false;
  } // We pass the id, name


  return Object(_helpers_find_export_js__WEBPACK_IMPORTED_MODULE_2__["default"])(__webpack_require__(mod.name || mod.id || load));
}

var file = "src/components/async/async.html";

function create_main_fragment(component, ctx) {
  var if_block_anchor;

  function select_block_type_1(ctx) {
    if (ctx.component) return create_if_block;
    if (ctx.loading && ctx.loadingComponent) return create_if_block_3;
    if (ctx.SSRComponent) return create_if_block_4;
    if (ctx.error) return create_if_block_5;
    return null;
  }

  var current_block_type = select_block_type_1(ctx);
  var if_block = current_block_type && current_block_type(component, ctx);
  return {
    c: function create() {
      if (if_block) if_block.c();
      if_block_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createComment"])();
    },
    l: function claim(nodes) {
      if (if_block) if_block.l(nodes);
      if_block_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createComment"])();
    },
    m: function mount(target, anchor) {
      if (if_block) if_block.m(target, anchor);
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["insertNode"])(if_block_anchor, target, anchor);
    },
    p: function update(changed, ctx) {
      if (current_block_type === (current_block_type = select_block_type_1(ctx)) && if_block) {
        if_block.p(changed, ctx);
      } else {
        if (if_block) if_block.d(1);
        if_block = current_block_type && current_block_type(component, ctx);
        if (if_block) if_block.c();
        if (if_block) if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    },
    d: function destroy(detach) {
      if (if_block) if_block.d(detach);

      if (detach) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["detachNode"])(if_block_anchor);
      }
    }
  };
} // (2:4) {#if component && props}


function create_if_block_1(component, ctx) {
  var switch_instance_anchor;
  var switch_instance_spread_levels = [ctx.props];
  var switch_value = ctx.component;

  function switch_props(ctx) {
    var switch_instance_initial_data = {};

    for (var i = 0; i < switch_instance_spread_levels.length; i += 1) {
      switch_instance_initial_data = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["assign"])(switch_instance_initial_data, switch_instance_spread_levels[i]);
    }

    return {
      root: component.root,
      store: component.store,
      data: switch_instance_initial_data
    };
  }

  if (switch_value) {
    var switch_instance = new switch_value(switch_props(ctx));
  }

  return {
    c: function create() {
      if (switch_instance) switch_instance._fragment.c();
      switch_instance_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createComment"])();
    },
    l: function claim(nodes) {
      if (switch_instance) switch_instance._fragment.l(nodes);
      switch_instance_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createComment"])();
    },
    m: function mount(target, anchor) {
      if (switch_instance) {
        switch_instance._mount(target, anchor);
      }

      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["insertNode"])(switch_instance_anchor, target, anchor);
    },
    p: function update(changed, ctx) {
      var switch_instance_changes = changed.props ? Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["getSpreadUpdate"])(switch_instance_spread_levels, [ctx.props]) : {};

      if (switch_value !== (switch_value = ctx.component)) {
        if (switch_instance) {
          switch_instance.destroy();
        }

        if (switch_value) {
          switch_instance = new switch_value(switch_props(ctx));

          switch_instance._fragment.c();

          switch_instance._mount(switch_instance_anchor.parentNode, switch_instance_anchor);
        } else {
          switch_instance = null;
        }
      } else if (switch_value) {
        switch_instance._set(switch_instance_changes);
      }
    },
    d: function destroy(detach) {
      if (detach) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["detachNode"])(switch_instance_anchor);
      }

      if (switch_instance) switch_instance.destroy(detach);
    }
  };
} // (4:4) {:else}


function create_if_block_2(component, ctx) {
  var switch_instance_anchor;
  var switch_value = ctx.component;

  function switch_props(ctx) {
    return {
      root: component.root,
      store: component.store
    };
  }

  if (switch_value) {
    var switch_instance = new switch_value(switch_props(ctx));
  }

  return {
    c: function create() {
      if (switch_instance) switch_instance._fragment.c();
      switch_instance_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createComment"])();
    },
    l: function claim(nodes) {
      if (switch_instance) switch_instance._fragment.l(nodes);
      switch_instance_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createComment"])();
    },
    m: function mount(target, anchor) {
      if (switch_instance) {
        switch_instance._mount(target, anchor);
      }

      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["insertNode"])(switch_instance_anchor, target, anchor);
    },
    p: function update(changed, ctx) {
      if (switch_value !== (switch_value = ctx.component)) {
        if (switch_instance) {
          switch_instance.destroy();
        }

        if (switch_value) {
          switch_instance = new switch_value(switch_props(ctx));

          switch_instance._fragment.c();

          switch_instance._mount(switch_instance_anchor.parentNode, switch_instance_anchor);
        } else {
          switch_instance = null;
        }
      }
    },
    d: function destroy(detach) {
      if (detach) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["detachNode"])(switch_instance_anchor);
      }

      if (switch_instance) switch_instance.destroy(detach);
    }
  };
} // (1:0) {#if component}


function create_if_block(component, ctx) {
  var if_block_anchor;

  function select_block_type(ctx) {
    if (ctx.component && ctx.props) return create_if_block_1;
    return create_if_block_2;
  }

  var current_block_type = select_block_type(ctx);
  var if_block = current_block_type(component, ctx);
  return {
    c: function create() {
      if_block.c();
      if_block_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createComment"])();
    },
    l: function claim(nodes) {
      if_block.l(nodes);
      if_block_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createComment"])();
    },
    m: function mount(target, anchor) {
      if_block.m(target, anchor);
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["insertNode"])(if_block_anchor, target, anchor);
    },
    p: function update(changed, ctx) {
      if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
        if_block.p(changed, ctx);
      } else {
        if_block.d(1);
        if_block = current_block_type(component, ctx);
        if_block.c();
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    },
    d: function destroy(detach) {
      if_block.d(detach);

      if (detach) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["detachNode"])(if_block_anchor);
      }
    }
  };
} // (7:37) 


function create_if_block_3(component, ctx) {
  var switch_instance_anchor;
  var switch_instance_spread_levels = [ctx.props];
  var switch_value = ctx.loadingComponent;

  function switch_props(ctx) {
    var switch_instance_initial_data = {};

    for (var i = 0; i < switch_instance_spread_levels.length; i += 1) {
      switch_instance_initial_data = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["assign"])(switch_instance_initial_data, switch_instance_spread_levels[i]);
    }

    return {
      root: component.root,
      store: component.store,
      data: switch_instance_initial_data
    };
  }

  if (switch_value) {
    var switch_instance = new switch_value(switch_props(ctx));
  }

  return {
    c: function create() {
      if (switch_instance) switch_instance._fragment.c();
      switch_instance_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createComment"])();
    },
    l: function claim(nodes) {
      if (switch_instance) switch_instance._fragment.l(nodes);
      switch_instance_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createComment"])();
    },
    m: function mount(target, anchor) {
      if (switch_instance) {
        switch_instance._mount(target, anchor);
      }

      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["insertNode"])(switch_instance_anchor, target, anchor);
    },
    p: function update(changed, ctx) {
      var switch_instance_changes = changed.props ? Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["getSpreadUpdate"])(switch_instance_spread_levels, [ctx.props]) : {};

      if (switch_value !== (switch_value = ctx.loadingComponent)) {
        if (switch_instance) {
          switch_instance.destroy();
        }

        if (switch_value) {
          switch_instance = new switch_value(switch_props(ctx));

          switch_instance._fragment.c();

          switch_instance._mount(switch_instance_anchor.parentNode, switch_instance_anchor);
        } else {
          switch_instance = null;
        }
      } else if (switch_value) {
        switch_instance._set(switch_instance_changes);
      }
    },
    d: function destroy(detach) {
      if (detach) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["detachNode"])(switch_instance_anchor);
      }

      if (switch_instance) switch_instance.destroy(detach);
    }
  };
} // (9:22) 


function create_if_block_4(component, ctx) {
  var switch_instance_anchor;
  var switch_instance_spread_levels = [ctx.props];
  var switch_value = ctx.SSRComponent;

  function switch_props(ctx) {
    var switch_instance_initial_data = {};

    for (var i = 0; i < switch_instance_spread_levels.length; i += 1) {
      switch_instance_initial_data = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["assign"])(switch_instance_initial_data, switch_instance_spread_levels[i]);
    }

    return {
      root: component.root,
      store: component.store,
      data: switch_instance_initial_data
    };
  }

  if (switch_value) {
    var switch_instance = new switch_value(switch_props(ctx));
  }

  return {
    c: function create() {
      if (switch_instance) switch_instance._fragment.c();
      switch_instance_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createComment"])();
    },
    l: function claim(nodes) {
      if (switch_instance) switch_instance._fragment.l(nodes);
      switch_instance_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createComment"])();
    },
    m: function mount(target, anchor) {
      if (switch_instance) {
        switch_instance._mount(target, anchor);
      }

      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["insertNode"])(switch_instance_anchor, target, anchor);
    },
    p: function update(changed, ctx) {
      var switch_instance_changes = changed.props ? Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["getSpreadUpdate"])(switch_instance_spread_levels, [ctx.props]) : {};

      if (switch_value !== (switch_value = ctx.SSRComponent)) {
        if (switch_instance) {
          switch_instance.destroy();
        }

        if (switch_value) {
          switch_instance = new switch_value(switch_props(ctx));

          switch_instance._fragment.c();

          switch_instance._mount(switch_instance_anchor.parentNode, switch_instance_anchor);
        } else {
          switch_instance = null;
        }
      } else if (switch_value) {
        switch_instance._set(switch_instance_changes);
      }
    },
    d: function destroy(detach) {
      if (detach) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["detachNode"])(switch_instance_anchor);
      }

      if (switch_instance) switch_instance.destroy(detach);
    }
  };
} // (11:15) 


function create_if_block_5(component, ctx) {
  var div, text, text_1;
  return {
    c: function create() {
      div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createElement"])("div");
      text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createText"])("Oh no: ");
      text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["createText"])(ctx.error);
      this.h();
    },
    l: function claim(nodes) {
      div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["claimElement"])(nodes, "DIV", {}, false);
      var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["children"])(div);
      text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["claimText"])(div_nodes, "Oh no: ");
      text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["claimText"])(div_nodes, ctx.error);
      div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["detachNode"]);
      this.h();
    },
    h: function hydrate() {
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["addLoc"])(div, file, 11, 4, 359);
    },
    m: function mount(target, anchor) {
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["insertNode"])(div, target, anchor);
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["appendNode"])(text, div);
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["appendNode"])(text_1, div);
    },
    p: function update(changed, ctx) {
      if (changed.error) {
        text_1.data = ctx.error;
      }
    },
    d: function destroy(detach) {
      if (detach) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["detachNode"])(div);
      }
    }
  };
}

function Async(options) {
  /*Babel»*/
  var _this = this;

  this._debugName = '<Async>';
  if (!options || !options.target && !options.root) throw new Error("'target' is a required option");
  Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["init"])(this, options);
  this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["assign"])(data(), options.data);

  this._recompute({
    webpack: 1
  }, this._state);

  if (!('webpack' in this._state)) console.warn("<Async> was created without expected data property 'webpack'");
  if (!('component' in this._state)) console.warn("<Async> was created without expected data property 'component'");
  if (!('props' in this._state)) console.warn("<Async> was created without expected data property 'props'");
  if (!('loading' in this._state)) console.warn("<Async> was created without expected data property 'loading'");
  if (!('loadingComponent' in this._state)) console.warn("<Async> was created without expected data property 'loadingComponent'");
  if (!('error' in this._state)) console.warn("<Async> was created without expected data property 'error'");
  this._intro = true;

  if (!options.root) {
    this._oncreate = [];
    this._beforecreate = [];
    this._aftercreate = [];
  }

  this._fragment = create_main_fragment(this, this._state);

  this.root._oncreate.push(function () {
    oncreate.call(_this);

    _this.fire("update", {
      changed: Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["assignTrue"])({}, _this._state),
      current: _this._state
    });
  });

  if (options.target) {
    var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["children"])(options.target);
    options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
    nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["detachNode"]);

    this._mount(options.target, options.anchor);

    this._lock = true;
    Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["callAll"])(this._beforecreate);
    Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["callAll"])(this._oncreate);
    Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["callAll"])(this._aftercreate);
    this._lock = false;
  }
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["assign"])(Async.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["protoDev"]);
Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_1__["assign"])(Async.prototype, methods);

Async.prototype._checkReadOnly = function _checkReadOnly(newState) {
  if ('SSRComponent' in newState && !this._updatingReadonlyProperty) throw new Error("<Async>: Cannot set read-only property 'SSRComponent'");
};

Async.prototype._recompute = function _recompute(changed, state) {
  if (changed.webpack) {
    if (this._differs(state.SSRComponent, state.SSRComponent = SSRComponent(state))) changed.SSRComponent = true;
  }
};

/* harmony default export */ __webpack_exports__["default"] = (Async);

/***/ }),

/***/ "../../@src/components/button/button.demo.html":
/*!******************************************************************************************!*\
  !*** /Users/lee/Sites/Other/Front-End-Framework/@src/components/button/button.demo.html ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "../../node_modules/svelte/shared.js");
/* harmony import */ var _helpers_title_case__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/helpers/title-case */ "../../@src/helpers/title-case.js");
/* harmony import */ var _index_html__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.html */ "../../@src/components/button/index.html");
/* harmony import */ var _modules_demo_index_html__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/modules/demo/index.html */ "../../@src/modules/demo/index.html");
/* harmony import */ var _components_async_async_html__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/async/async.html */ "../../@src/components/async/async.html");
/* @src/components/button/button.demo.html generated by Svelte v2.9.7 */






function data() {
  return {
    widths: ['normal', 'wide', 'compact'],
    asyncButton: {
      loader: function
      /*Babel»*/
      loader()
      /*Babel»*/
      {
        return Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! ./index.html */ "../../@src/components/button/index.html"));
      },
      webpack: function
      /*Babel»*/
      webpack()
      /*Babel»*/
      {
        return /*require.resolve*/(/*! ./index.html */ "../../@src/components/button/index.html");
      },
      props: {
        width: ['wide'],
        body: 'Async button'
      }
    }
  };
}

var file = "src/components/button/button.demo.html";

function add_css() {
  var style = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("style");
  style.id = 'svelte-1o0xyhp-style';
  style.textContent = ".button-holder.svelte-1o0xyhp{display:inline-block;padding:1rem 1rem 1rem 0}.button-holder--wide.svelte-1o0xyhp{min-width:20%}.btn.svelte-1o0xyhp{margin-bottom:1rem;margin-right:1rem;vertical-align:middle}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmRlbW8uaHRtbCIsInNvdXJjZXMiOlsiYnV0dG9uLmRlbW8uaHRtbCJdLCJzb3VyY2VzQ29udGVudCI6WyI8c3R5bGU+XG4gICAgLmJ1dHRvbi1ob2xkZXIge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHBhZGRpbmc6IDFyZW0gMXJlbSAxcmVtIDA7XG4gICAgfVxuICAgIC5idXR0b24taG9sZGVyLS13aWRlIHtcbiAgICAgICAgbWluLXdpZHRoOiAyMCU7XG4gICAgfVxuXG4gICAgLmJ0biB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICB9XG48L3N0eWxlPlxuXG48RGVtbyBkZW1vVGl0bGU9XCJCdXR0b25zXCIgdmFyaWFudHM9XCJ7dHJ1ZX1cIiBjdXJyZW50Um91dGU9XCJCdXR0b25cIj5cbiAgICA8ZGl2IHNsb3Q9XCJoZWFkZXJcIj5cbiAgICAgICAgPEJ1dHRvbj5XaGF0dXA8L0J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IHNsb3Q9XCJ2YXJpYW50c1wiPlxuICAgICAgICB7I2VhY2ggd2lkdGhzIGFzIGJ1dHRvblR5cGV9XG4gICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyIGJ1dHRvbi1ob2xkZXItLXtidXR0b25UeXBlfVwiPlxuICAgICAgICAgICAgPEJ1dHRvbiB0eXBlPVwie2J1dHRvblR5cGV9XCIgYm9keT1cIntjYXBpdGFsaXplKGJ1dHRvblR5cGUpfVwiLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHsvZWFjaH1cbiAgICAgICAgPEFzeW5jIHsuLi5hc3luY0J1dHRvbn0gLz5cbiAgICA8L2Rpdj5cbjwvRGVtbz5cblxuPHNjcmlwdD5cbmltcG9ydCBjYXBpdGFsaXplIGZyb20gJ0AvaGVscGVycy90aXRsZS1jYXNlJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgQnV0dG9uOiAnLi9pbmRleC5odG1sJyxcbiAgICAgICAgRGVtbzogJ0AvbW9kdWxlcy9kZW1vL2luZGV4Lmh0bWwnLFxuICAgICAgICBBc3luYzogJ0AvY29tcG9uZW50cy9hc3luYy9hc3luYy5odG1sJyxcbiAgICB9LFxuICAgIGRhdGE6ICgpID0+ICh7XG4gICAgICAgIHdpZHRoczogWydub3JtYWwnLCAnd2lkZScsICdjb21wYWN0J10sXG4gICAgICAgIGFzeW5jQnV0dG9uOiB7XG4gICAgICAgICAgICBsb2FkZXI6ICgpID0+IGltcG9ydCgnLi9pbmRleC5odG1sJyksXG4gICAgICAgICAgICB3ZWJwYWNrOiAoKSA9PiByZXF1aXJlLnJlc29sdmVXZWFrKCcuL2luZGV4Lmh0bWwnKSxcbiAgICAgICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IFsnd2lkZSddLFxuICAgICAgICAgICAgICAgIGJvZHk6ICdBc3luYyBidXR0b24nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9KSxcbiAgICBoZWxwZXJzOiB7IGNhcGl0YWxpemUgfSxcbn07XG48L3NjcmlwdD5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSSxjQUFjLGVBQUMsQ0FBQyxBQUNaLE9BQU8sQ0FBRSxZQUFZLENBQ3JCLE9BQU8sQ0FBRSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEFBQzdCLENBQUMsQUFDRCxvQkFBb0IsZUFBQyxDQUFDLEFBQ2xCLFNBQVMsQ0FBRSxHQUFHLEFBQ2xCLENBQUMsQUFFRCxJQUFJLGVBQUMsQ0FBQyxBQUNGLGFBQWEsQ0FBRSxJQUFJLENBQ25CLFlBQVksQ0FBRSxJQUFJLENBQ2xCLGNBQWMsQ0FBRSxNQUFNLEFBQzFCLENBQUMifQ== */";
  Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(style, document.head);
}

function create_main_fragment(component, ctx) {
  var text, div, text_1, text_3, div_1, text_4, text_6;
  var button = new _index_html__WEBPACK_IMPORTED_MODULE_2__["default"]({
    root: component.root,
    store: component.store,
    slots: {
      default: Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createFragment"])()
    }
  });
  var each_value = ctx.widths;
  var each_blocks = [];

  for (var i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block(component, get_each_context(ctx, each_value, i));
  }

  var async_spread_levels = [ctx.asyncButton];
  var async_initial_data = {};

  for (var i = 0; i < async_spread_levels.length; i += 1) {
    async_initial_data = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(async_initial_data, async_spread_levels[i]);
  }

  var async = new _components_async_async_html__WEBPACK_IMPORTED_MODULE_4__["default"]({
    root: component.root,
    store: component.store,
    data: async_initial_data
  });
  var demo_initial_data = {
    demoTitle: "Buttons",
    variants: true,
    currentRoute: "Button"
  };
  var demo = new _modules_demo_index_html__WEBPACK_IMPORTED_MODULE_3__["default"]({
    root: component.root,
    store: component.store,
    slots: {
      default: Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createFragment"])(),
      header: Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createFragment"])(),
      variants: Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createFragment"])()
    },
    data: demo_initial_data
  });
  return {
    c: function create() {
      text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\n    ");
      div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
      text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("Whatup");

      button._fragment.c();

      text_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\n    ");
      div_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");

      for (var i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }

      text_4 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\n        ");

      async._fragment.c();

      text_6 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\n");

      demo._fragment.c();

      this.h();
    },
    l: function claim(nodes) {
      text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "\n    ");
      div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", {
        slot: true
      }, false);
      var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
      text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "Whatup");

      button._fragment.l(div_nodes);

      div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
      text_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "\n    ");
      div_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", {
        slot: true
      }, false);
      var div_1_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div_1);

      for (var i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].l(div_1_nodes);
      }

      text_4 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(div_1_nodes, "\n        ");

      async._fragment.l(div_1_nodes);

      div_1_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
      text_6 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "\n");

      demo._fragment.l(nodes);

      this.h();
    },
    h: function hydrate() {
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setAttribute"])(div, "slot", "header");
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(div, file, 17, 4, 346);
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setAttribute"])(div_1, "slot", "variants");
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(div_1, file, 20, 4, 413);
    },
    m: function mount(target, anchor) {
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, demo._slotted.default);
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(div, demo._slotted.header);
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_1, button._slotted.default);

      button._mount(div, null);

      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_3, demo._slotted.default);
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(div_1, demo._slotted.variants);

      for (var i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].m(div_1, null);
      }

      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_4, div_1);

      async._mount(div_1, null);

      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_6, demo._slotted.default);

      demo._mount(target, anchor);
    },
    p: function update(changed, ctx) {
      if (changed.widths) {
        each_value = ctx.widths;

        for (var i = 0; i < each_value.length; i += 1) {
          var child_ctx = get_each_context(ctx, each_value, i);

          if (each_blocks[i]) {
            each_blocks[i].p(changed, child_ctx);
          } else {
            each_blocks[i] = create_each_block(component, child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(div_1, text_4);
          }
        }

        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }

        each_blocks.length = each_value.length;
      }

      var async_changes = changed.asyncButton ? Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["getSpreadUpdate"])(async_spread_levels, [ctx.asyncButton]) : {};

      async._set(async_changes);
    },
    d: function destroy(detach) {
      button.destroy();
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["destroyEach"])(each_blocks, detach);
      async.destroy();
      demo.destroy(detach);
    }
  };
} // (22:8) {#each widths as buttonType}


function create_each_block(component, ctx) {
  var div, div_class_value;
  var button_initial_data = {
    type: ctx.buttonType,
    body: Object(_helpers_title_case__WEBPACK_IMPORTED_MODULE_1__["default"])(ctx.buttonType)
  };
  var button = new _index_html__WEBPACK_IMPORTED_MODULE_2__["default"]({
    root: component.root,
    store: component.store,
    data: button_initial_data
  });
  return {
    c: function create() {
      div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");

      button._fragment.c();

      this.h();
    },
    l: function claim(nodes) {
      div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", {
        class: true
      }, false);
      var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

      button._fragment.l(div_nodes);

      div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
      this.h();
    },
    h: function hydrate() {
      div.className = div_class_value = "button-holder button-holder--" + ctx.buttonType + " svelte-1o0xyhp";
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(div, file, 22, 8, 480);
    },
    m: function mount(target, anchor) {
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(div, target, anchor);

      button._mount(div, null);
    },
    p: function update(changed, ctx) {
      var button_changes = {};
      if (changed.widths) button_changes.type = ctx.buttonType;
      if (changed.widths) button_changes.body = Object(_helpers_title_case__WEBPACK_IMPORTED_MODULE_1__["default"])(ctx.buttonType);

      button._set(button_changes);

      if (changed.widths && div_class_value !== (div_class_value = "button-holder button-holder--" + ctx.buttonType + " svelte-1o0xyhp")) {
        div.className = div_class_value;
      }
    },
    d: function destroy(detach) {
      if (detach) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(div);
      }

      button.destroy();
    }
  };
}

function get_each_context(ctx, list, i) {
  var child_ctx = Object.create(ctx);
  child_ctx.buttonType = list[i];
  child_ctx.each_value = list;
  child_ctx.buttonType_index = i;
  return child_ctx;
}

function Button_demo(options) {
  this._debugName = '<Button_demo>';
  if (!options || !options.target && !options.root) throw new Error("'target' is a required option");
  Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
  this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(data(), options.data);
  if (!('widths' in this._state)) console.warn("<Button_demo> was created without expected data property 'widths'");
  if (!('asyncButton' in this._state)) console.warn("<Button_demo> was created without expected data property 'asyncButton'");
  this._intro = true;
  if (!document.getElementById("svelte-1o0xyhp-style")) add_css();

  if (!options.root) {
    this._oncreate = [];
    this._beforecreate = [];
    this._aftercreate = [];
  }

  this._fragment = create_main_fragment(this, this._state);

  if (options.target) {
    var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
    options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
    nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);

    this._mount(options.target, options.anchor);

    this._lock = true;
    Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._beforecreate);
    Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._oncreate);
    Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._aftercreate);
    this._lock = false;
  }
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(Button_demo.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

Button_demo.prototype._checkReadOnly = function _checkReadOnly(newState) {};

/* harmony default export */ __webpack_exports__["default"] = (Button_demo);

/***/ }),

/***/ "../../@src/components/button/index.html":
/*!************************************************************************************!*\
  !*** /Users/lee/Sites/Other/Front-End-Framework/@src/components/button/index.html ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "../../node_modules/svelte/shared.js");
/* harmony import */ var _helpers_class_modifiers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/helpers/class-modifiers */ "../../@src/helpers/class-modifiers/index.js");
/* harmony import */ var _helpers_title_case_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/helpers/title-case.js */ "../../@src/helpers/title-case.js");
/* @src/components/button/index.html generated by Svelte v2.9.7 */




function data() {
  return {
    body: 'Button',
    icon: false,
    iconUrl: false,
    attrs: false,
    type: []
  };
}

function setup(thisComponent) {
  thisComponent.TYPES = ['wide', 'compact', ''];
}

;
var file = "src/components/button/index.html";

function create_main_fragment(component, ctx) {
  var button,
      span,
      slot_content_default = component._slotted.default,
      text,
      span_class_value,
      text_3,
      button_class_value;

  function select_block_type(ctx) {
    if (ctx.icon) return create_if_block;
    if (ctx.iconUrl) return create_if_block_1;
    return null;
  }

  var current_block_type = select_block_type(ctx);
  var if_block = current_block_type && current_block_type(component, ctx);
  return {
    c: function create() {
      button = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("button");
      span = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("span");

      if (!slot_content_default) {
        text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(ctx.body);
      }

      text_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\n    ");
      if (if_block) if_block.c();
      this.h();
    },
    l: function claim(nodes) {
      button = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "BUTTON", {
        class: true
      }, false);
      var button_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
      span = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(button_nodes, "SPAN", {
        class: true
      }, false);
      var span_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(span);
      text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(span_nodes, ctx.body);
      span_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
      text_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(button_nodes, "\n    ");
      if (if_block) if_block.l(button_nodes);
      button_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
      this.h();
    },
    h: function hydrate() {
      span.className = span_class_value = "btn__body " + Object(_helpers_class_modifiers__WEBPACK_IMPORTED_MODULE_1__["default"])(ctx.type, 'btn__body--');
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(span, file, 1, 4, 52);
      button.className = button_class_value = "btn " + Object(_helpers_class_modifiers__WEBPACK_IMPORTED_MODULE_1__["default"])(ctx.type, 'btn--');
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(button, file, 0, 0, 0);
    },
    m: function mount(target, anchor) {
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(button, target, anchor);
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(span, button);

      if (!slot_content_default) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, span);
      } else {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(slot_content_default, span);
      }

      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_3, button);
      if (if_block) if_block.m(button, null);
    },
    p: function update(changed, ctx) {
      if (!slot_content_default) {
        if (changed.body) {
          text.data = ctx.body;
        }
      }

      if (changed.type && span_class_value !== (span_class_value = "btn__body " + Object(_helpers_class_modifiers__WEBPACK_IMPORTED_MODULE_1__["default"])(ctx.type, 'btn__body--'))) {
        span.className = span_class_value;
      }

      if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
        if_block.p(changed, ctx);
      } else {
        if (if_block) if_block.d(1);
        if_block = current_block_type && current_block_type(component, ctx);
        if (if_block) if_block.c();
        if (if_block) if_block.m(button, null);
      }

      if (changed.type && button_class_value !== (button_class_value = "btn " + Object(_helpers_class_modifiers__WEBPACK_IMPORTED_MODULE_1__["default"])(ctx.type, 'btn--'))) {
        button.className = button_class_value;
      }
    },
    d: function destroy(detach) {
      if (detach) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(button);
      }

      if (slot_content_default) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["reinsertChildren"])(span, slot_content_default);
      }

      if (if_block) if_block.d();
    }
  };
} // (7:4) {#if icon}


function create_if_block(component, ctx) {
  var span,
      slot_content_icon = component._slotted.icon,
      text,
      span_class_value;
  return {
    c: function create() {
      span = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("span");

      if (!slot_content_icon) {
        text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(ctx.icon);
      }

      this.h();
    },
    l: function claim(nodes) {
      span = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "SPAN", {
        class: true
      }, false);
      var span_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(span);
      text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(span_nodes, ctx.icon);
      span_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
      this.h();
    },
    h: function hydrate() {
      span.className = span_class_value = "btn__icon " + Object(_helpers_class_modifiers__WEBPACK_IMPORTED_MODULE_1__["default"])(ctx.type, 'btn__icon--');
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(span, file, 7, 8, 195);
    },
    m: function mount(target, anchor) {
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(span, target, anchor);

      if (!slot_content_icon) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, span);
      } else {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(slot_content_icon, span);
      }
    },
    p: function update(changed, ctx) {
      if (!slot_content_icon) {
        if (changed.icon) {
          text.data = ctx.icon;
        }
      }

      if (changed.type && span_class_value !== (span_class_value = "btn__icon " + Object(_helpers_class_modifiers__WEBPACK_IMPORTED_MODULE_1__["default"])(ctx.type, 'btn__icon--'))) {
        span.className = span_class_value;
      }
    },
    d: function destroy(detach) {
      if (detach) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(span);
      }

      if (slot_content_icon) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["reinsertChildren"])(span, slot_content_icon);
      }
    }
  };
} // (13:21) 


function create_if_block_1(component, ctx) {
  var img, img_class_value, img_src_value;
  return {
    c: function create() {
      img = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("img");
      this.h();
    },
    l: function claim(nodes) {
      img = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "IMG", {
        class: true,
        src: true,
        alt: true
      }, false);
      var img_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(img);
      img_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
      this.h();
    },
    h: function hydrate() {
      img.className = img_class_value = "btn__icon btn__icon--image " + Object(_helpers_class_modifiers__WEBPACK_IMPORTED_MODULE_1__["default"])(ctx.type, 'btn__icon--');
      img.src = img_src_value = {
        iconUrl: ctx.iconUrl
      };
      img.alt = "";
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(img, file, 13, 8, 373);
    },
    m: function mount(target, anchor) {
      Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(img, target, anchor);
    },
    p: function update(changed, ctx) {
      if (changed.type && img_class_value !== (img_class_value = "btn__icon btn__icon--image " + Object(_helpers_class_modifiers__WEBPACK_IMPORTED_MODULE_1__["default"])(ctx.type, 'btn__icon--'))) {
        img.className = img_class_value;
      }

      if (changed.iconUrl && img_src_value !== (img_src_value = {
        iconUrl: ctx.iconUrl
      })) {
        img.src = img_src_value;
      }
    },
    d: function destroy(detach) {
      if (detach) {
        Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(img);
      }
    }
  };
}

function Index(options) {
  this._debugName = '<Index>';
  if (!options || !options.target && !options.root) throw new Error("'target' is a required option");
  Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
  this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(data(), options.data);
  if (!('type' in this._state)) console.warn("<Index> was created without expected data property 'type'");
  if (!('body' in this._state)) console.warn("<Index> was created without expected data property 'body'");
  if (!('icon' in this._state)) console.warn("<Index> was created without expected data property 'icon'");
  if (!('iconUrl' in this._state)) console.warn("<Index> was created without expected data property 'iconUrl'");
  this._intro = true;
  this._slotted = options.slots || {};
  this.slots = {};
  this._fragment = create_main_fragment(this, this._state);

  if (options.target) {
    var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
    options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
    nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);

    this._mount(options.target, options.anchor);
  }
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(Index.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

Index.prototype._checkReadOnly = function _checkReadOnly(newState) {};

setup(Index);
/* harmony default export */ __webpack_exports__["default"] = (Index);

/***/ })

}]);
//# sourceMappingURL=1.js.map