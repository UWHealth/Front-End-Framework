{"version":3,"file":"shared.js","sources":["webpack://uwhealth//Users/lee/Sites/Other/Front-End-Framework/@src/helpers/class-modifiers/index.js","webpack://uwhealth//Users/lee/Sites/Other/Front-End-Framework/@src/modules/demo/demo.nav.html","webpack://uwhealth//Users/lee/Sites/Other/Front-End-Framework/@src/modules/demo/index.html","webpack://uwhealth//Users/lee/Sites/Other/Front-End-Framework/@src/modules/main-wrapper/index.html","webpack://uwhealth//Users/lee/Sites/Other/Front-End-Framework/node_modules/history/es/index.js","webpack://uwhealth//Users/lee/Sites/Other/Front-End-Framework/node_modules/svelte-routing/NavLink.html"],"sourcesContent":["export default function (modifier, classPrefix, classSuffix) {\n  //eslint-disable-line\n  classSuffix = classSuffix || '';\n\n  if (!modifier) {\n    return '';\n  }\n\n  if (modifier.length > 1 && typeof modifier === 'string') {\n    modifier = [modifier];\n  }\n\n  if (modifier.length > 0 && Array.isArray(modifier)) {\n    return modifier.reduce(function (prev, name) {\n      return prev + ' ' + classPrefix + name + classSuffix;\n    }, '');\n  }\n\n  return '';\n}","/* @src/modules/demo/demo.nav.html generated by Svelte v2.9.7 */\nimport { addLoc, appendNode, assign, blankObject, callAll, children, claimElement, claimText, createComment, createElement, createFragment, createText, destroyBlock, detachNode, init, insertNode, protoDev, setStyle, updateKeyedEach } from \"svelte/shared.js\";\nimport { createMemoryHistory, createBrowserHistory } from 'svelte-routing';\nimport NavLink from \"svelte-routing/NavLink.html\";\nvar history;\n\nif (typeof window === 'undefined') {\n  history = createMemoryHistory();\n} else {\n  history = createBrowserHistory();\n}\n\nfunction data() {\n  return {\n    links: [['Button', '/demo/button/'], ['Generic', '/demo/generic/'], ['Feed', '/demo/feed/']],\n    \"history\": history\n  };\n}\n\nvar file = \"src/modules/demo/demo.nav.html\";\n\nfunction create_main_fragment(component, ctx) {\n  var nav,\n      img,\n      text,\n      each_blocks_1 = [],\n      each_lookup = blankObject();\n  var each_value = ctx.links;\n\n  var get_key = function get_key(ctx)\n  /*Babel»*/\n  {\n    return ctx.url;\n  };\n\n  for (var i = 0; i < each_value.length; i += 1) {\n    var child_ctx = get_each_context(ctx, each_value, i);\n    var key = get_key(child_ctx);\n    each_blocks_1[i] = each_lookup[key] = create_each_block(component, key, child_ctx);\n  }\n\n  return {\n    c: function create() {\n      nav = createElement(\"nav\");\n      img = createElement(\"img\");\n      text = createText(\"\\n    \");\n\n      for (i = 0; i < each_blocks_1.length; i += 1)\n      /*Babel»*/\n      {\n        each_blocks_1[i].c();\n      }\n\n      this.h();\n    },\n    l: function claim(nodes) {\n      nav = claimElement(nodes, \"NAV\", {\n        class: true\n      }, false);\n      var nav_nodes = children(nav);\n      img = claimElement(nav_nodes, \"IMG\", {\n        src: true,\n        style: true,\n        alt: true\n      }, false);\n      var img_nodes = children(img);\n      img_nodes.forEach(detachNode);\n      text = claimText(nav_nodes, \"\\n    \");\n\n      for (i = 0; i < each_blocks_1.length; i += 1)\n      /*Babel»*/\n      {\n        each_blocks_1[i].l(nav_nodes);\n      }\n\n      nav_nodes.forEach(detachNode);\n      this.h();\n    },\n    h: function hydrate() {\n      img.src = \"/public/static/img/favicons/icon.svg\";\n      setStyle(img, \"height\", \"\" + 60 / 16 + \"rem\");\n      img.alt = \"\";\n      addLoc(img, file, 2, 4, 119);\n      nav.className = \"demo-navigation\";\n      addLoc(nav, file, 1, 0, 70);\n    },\n    m: function mount(target, anchor) {\n      insertNode(nav, target, anchor);\n      appendNode(img, nav);\n      appendNode(text, nav);\n\n      for (i = 0; i < each_blocks_1.length; i += 1)\n      /*Babel»*/\n      {\n        each_blocks_1[i].m(nav, null);\n      }\n\n      component.refs.navigation = nav;\n    },\n    p: function update(changed, ctx) {\n      var each_value = ctx.links;\n      each_blocks_1 = updateKeyedEach(each_blocks_1, component, changed, get_key, 1, ctx, each_value, each_lookup, nav, destroyBlock, create_each_block, \"m\", null, get_each_context);\n    },\n    d: function destroy(detach) {\n      if (detach) {\n        detachNode(nav);\n      }\n\n      for (i = 0; i < each_blocks_1.length; i += 1)\n      /*Babel»*/\n      {\n        each_blocks_1[i].d();\n      }\n\n      if (component.refs.navigation === nav) component.refs.navigation = null;\n    }\n  };\n} // (4:4) {#each links as [name, url] (url)}\n\n\nfunction create_each_block(component, key_1, ctx) {\n  var first,\n      text_value = ctx.name,\n      text;\n  var navlink_initial_data = {\n    to: ctx.url,\n    className: \"demo-navigation__link\"\n  };\n  var navlink = new NavLink({\n    root: component.root,\n    store: component.store,\n    slots: {\n      default: createFragment()\n    },\n    data: navlink_initial_data\n  });\n  component.refs.url = navlink;\n  return {\n    key: key_1,\n    first: null,\n    c: function create() {\n      first = createComment();\n      text = createText(text_value);\n\n      navlink._fragment.c();\n\n      this.h();\n    },\n    l: function claim(nodes) {\n      first = createComment();\n      text = claimText(nodes, text_value);\n\n      navlink._fragment.l(nodes);\n\n      this.h();\n    },\n    h: function hydrate() {\n      this.first = first;\n    },\n    m: function mount(target, anchor) {\n      insertNode(first, target, anchor);\n      appendNode(text, navlink._slotted.default);\n\n      navlink._mount(target, anchor);\n    },\n    p: function update(changed, ctx) {\n      if (changed.links && text_value !== (text_value = ctx.name)) {\n        text.data = text_value;\n      }\n\n      var navlink_changes = {};\n      if (changed.links) navlink_changes.to = ctx.url;\n\n      navlink._set(navlink_changes);\n    },\n    d: function destroy(detach) {\n      if (detach) {\n        detachNode(first);\n      }\n\n      navlink.destroy(detach);\n      if (component.refs.url === navlink) component.refs.url = null;\n    }\n  };\n}\n\nfunction get_each_context(ctx, list, i) {\n  var child_ctx = Object.create(ctx);\n  child_ctx.name = list[i][0];\n  child_ctx.url = list[i][1];\n  child_ctx.each_value = list;\n  child_ctx.each_index = i;\n  return child_ctx;\n}\n\nfunction Demo_nav(options) {\n  this._debugName = '<Demo_nav>';\n  if (!options || !options.target && !options.root) throw new Error(\"'target' is a required option\");\n  init(this, options);\n  this.refs = {};\n  this._state = assign(data(), options.data);\n  if (!('links' in this._state)) console.warn(\"<Demo_nav> was created without expected data property 'links'\");\n  this._intro = true;\n\n  if (!options.root) {\n    this._oncreate = [];\n    this._beforecreate = [];\n    this._aftercreate = [];\n  }\n\n  this._fragment = create_main_fragment(this, this._state);\n\n  if (options.target) {\n    var nodes = children(options.target);\n    options.hydrate ? this._fragment.l(nodes) : this._fragment.c();\n    nodes.forEach(detachNode);\n\n    this._mount(options.target, options.anchor);\n\n    this._lock = true;\n    callAll(this._beforecreate);\n    callAll(this._oncreate);\n    callAll(this._aftercreate);\n    this._lock = false;\n  }\n}\n\nassign(Demo_nav.prototype, protoDev);\n\nDemo_nav.prototype._checkReadOnly = function _checkReadOnly(newState) {};\n\nexport default Demo_nav;","/* @src/modules/demo/index.html generated by Svelte v2.9.7 */\nimport { addLoc, appendNode, assign, assignTrue, callAll, children, claimElement, claimText, createComment, createElement, createFragment, createText, detachNode, init, insertNode, protoDev, reinsertBetween, reinsertChildren } from \"svelte/shared.js\";\nimport store from './demo.store.js';\nimport Main from \"@/modules/main-wrapper/index.html\";\nimport Nav from \"@/modules/demo/demo.nav.html\";\n\nfunction lowercaseRoute(\n/*Babel»*/\n_ref) {\n  /*Babel»*/\n  var currentRoute = _ref.currentRoute;\n  return currentRoute.toLowerCase();\n}\n\nfunction data() {\n  return {\n    demoTitle: 'Demo',\n    variantTitle: false,\n    variants: false,\n    stylesheet: true\n  };\n}\n\n;\n\nfunction oncreate() {\n  if (this.slots.variants) {\n    this.set({\n      'variants': true\n    });\n  }\n}\n\n;\n\nfunction store_1() {\n  return store;\n}\n\nvar file = \"src/modules/demo/index.html\";\n\nfunction create_main_fragment(component, ctx) {\n  var text,\n      text_1,\n      div,\n      header,\n      div_1,\n      h1,\n      text_2,\n      text_4,\n      div_2,\n      slot_content_header = component._slotted.header,\n      div_3,\n      text_9,\n      text_10,\n      div_4,\n      text_12;\n  var if_block = ctx.stylesheet && create_if_block(component, ctx);\n  var nav = new Nav({\n    root: component.root,\n    store: component.store\n  });\n  var if_block_1 = (ctx.variants || ctx.variantTitle) && create_if_block_1(component, ctx);\n  var main_initial_data = {\n    mainClass: \"demo-body\"\n  };\n  var main = new Main({\n    root: component.root,\n    store: component.store,\n    slots: {\n      default: createFragment()\n    },\n    data: main_initial_data\n  });\n  return {\n    c: function create() {\n      if (if_block) if_block.c();\n      text = createText(\"\\n\\n\");\n\n      nav._fragment.c();\n\n      text_1 = createText(\"\\n\\n\");\n      div = createElement(\"div\");\n      header = createElement(\"header\");\n      div_1 = createElement(\"div\");\n      h1 = createElement(\"h1\");\n      text_2 = createText(ctx.demoTitle);\n      text_4 = createText(\"\\n            \");\n      div_2 = createElement(\"div\");\n\n      if (!slot_content_header) {\n        div_3 = createElement(\"div\");\n      }\n\n      text_9 = createText(\"\\n\\n    \");\n      text_10 = createText(\"\\n        \");\n      div_4 = createElement(\"div\");\n      if (if_block_1) if_block_1.c();\n      text_12 = createText(\"\\n    \");\n\n      main._fragment.c();\n\n      this.h();\n    },\n    l: function claim(nodes) {\n      if (if_block) if_block.l(nodes);\n      text = claimText(nodes, \"\\n\\n\");\n\n      nav._fragment.l(nodes);\n\n      text_1 = claimText(nodes, \"\\n\\n\");\n      div = claimElement(nodes, \"DIV\", {\n        class: true\n      }, false);\n      var div_nodes = children(div);\n      header = claimElement(div_nodes, \"HEADER\", {\n        class: true\n      }, false);\n      var header_nodes = children(header);\n      div_1 = claimElement(header_nodes, \"DIV\", {\n        class: true\n      }, false);\n      var div_1_nodes = children(div_1);\n      h1 = claimElement(div_1_nodes, \"H1\", {\n        class: true\n      }, false);\n      var h1_nodes = children(h1);\n      text_2 = claimText(h1_nodes, ctx.demoTitle);\n      h1_nodes.forEach(detachNode);\n      text_4 = claimText(div_1_nodes, \"\\n            \");\n      div_2 = claimElement(div_1_nodes, \"DIV\", {\n        class: true\n      }, false);\n      var div_2_nodes = children(div_2);\n      div_3 = claimElement(div_2_nodes, \"DIV\", {}, false);\n      var div_3_nodes = children(div_3);\n      div_3_nodes.forEach(detachNode);\n      div_2_nodes.forEach(detachNode);\n      div_1_nodes.forEach(detachNode);\n      header_nodes.forEach(detachNode);\n      text_9 = claimText(div_nodes, \"\\n\\n    \");\n      text_10 = claimText(nodes, \"\\n        \");\n      div_4 = claimElement(nodes, \"DIV\", {\n        class: true\n      }, false);\n      var div_4_nodes = children(div_4);\n      if (if_block_1) if_block_1.l(div_4_nodes);\n      div_4_nodes.forEach(detachNode);\n      text_12 = claimText(nodes, \"\\n    \");\n\n      main._fragment.l(div_nodes);\n\n      div_nodes.forEach(detachNode);\n      this.h();\n    },\n    h: function hydrate() {\n      h1.className = \"demo-header__title\";\n      addLoc(h1, file, 9, 12, 197);\n\n      if (!slot_content_header) {\n        addLoc(div_3, file, 14, 20, 381);\n      }\n\n      div_2.className = \"demo-header__component\";\n      addLoc(div_2, file, 12, 12, 287);\n      div_1.className = \"wrap\";\n      addLoc(div_1, file, 8, 8, 166);\n      header.className = \"demo-header\";\n      addLoc(header, file, 7, 4, 129);\n      div_4.className = \"wrap\";\n      addLoc(div_4, file, 21, 8, 507);\n      div.className = \"demo\";\n      addLoc(div, file, 6, 0, 106);\n    },\n    m: function mount(target, anchor) {\n      if (if_block) if_block.m(target, anchor);\n      insertNode(text, target, anchor);\n\n      nav._mount(target, anchor);\n\n      insertNode(text_1, target, anchor);\n      insertNode(div, target, anchor);\n      appendNode(header, div);\n      appendNode(div_1, header);\n      appendNode(h1, div_1);\n      appendNode(text_2, h1);\n      appendNode(text_4, div_1);\n      appendNode(div_2, div_1);\n\n      if (!slot_content_header) {\n        appendNode(div_3, div_2);\n      } else {\n        appendNode(slot_content_header, div_2);\n      }\n\n      appendNode(text_9, div);\n      appendNode(text_10, main._slotted.default);\n      appendNode(div_4, main._slotted.default);\n      if (if_block_1) if_block_1.m(div_4, null);\n      appendNode(text_12, main._slotted.default);\n\n      main._mount(div, null);\n    },\n    p: function update(changed, ctx) {\n      if (ctx.stylesheet) {\n        if (!if_block) {\n          if_block = create_if_block(component, ctx);\n          if_block.c();\n          if_block.m(text.parentNode, text);\n        }\n      } else if (if_block) {\n        if_block.d(1);\n        if_block = null;\n      }\n\n      if (changed.demoTitle) {\n        text_2.data = ctx.demoTitle;\n      }\n\n      if (ctx.variants || ctx.variantTitle) {\n        if (if_block_1) {\n          if_block_1.p(changed, ctx);\n        } else {\n          if_block_1 = create_if_block_1(component, ctx);\n          if_block_1.c();\n          if_block_1.m(div_4, null);\n        }\n      } else if (if_block_1) {\n        if_block_1.d(1);\n        if_block_1 = null;\n      }\n    },\n    d: function destroy(detach) {\n      if (if_block) if_block.d(detach);\n\n      if (detach) {\n        detachNode(text);\n      }\n\n      nav.destroy(detach);\n\n      if (detach) {\n        detachNode(text_1);\n        detachNode(div);\n      }\n\n      if (slot_content_header) {\n        reinsertChildren(div_2, slot_content_header);\n      }\n\n      if (if_block_1) if_block_1.d();\n      main.destroy();\n    }\n  };\n} // (1:0) {#if stylesheet}\n\n\nfunction create_if_block(component, ctx) {\n  var link;\n  return {\n    c: function create() {\n      link = createElement(\"link\");\n      this.h();\n    },\n    l: function claim(nodes) {\n      link = claimElement(nodes, \"LINK\", {\n        rel: true,\n        media: true,\n        href: true\n      }, false);\n      var link_nodes = children(link);\n      link_nodes.forEach(detachNode);\n      this.h();\n    },\n    h: function hydrate() {\n      link.rel = \"stylesheet\";\n      link.media = \"screen\";\n      link.href = \"/public/css/demo/demo.css\";\n      addLoc(link, file, 1, 0, 17);\n    },\n    m: function mount(target, anchor) {\n      insertNode(link, target, anchor);\n    },\n    d: function destroy(detach) {\n      if (detach) {\n        detachNode(link);\n      }\n    }\n  };\n} // (23:12) {#if variants || variantTitle}\n\n\nfunction create_if_block_1(component, ctx) {\n  var h2,\n      text_value = ctx.variantTitle || ctx.demoTitle,\n      text,\n      text_1,\n      text_2,\n      slot_content_variants = component._slotted.variants,\n      slot_content_variants_before,\n      slot_content_variants_after;\n  return {\n    c: function create() {\n      h2 = createElement(\"h2\");\n      text = createText(text_value);\n      text_1 = createText(\" Variants\");\n      text_2 = createText(\"\\n            \");\n      this.h();\n    },\n    l: function claim(nodes) {\n      h2 = claimElement(nodes, \"H2\", {\n        class: true\n      }, false);\n      var h2_nodes = children(h2);\n      text = claimText(h2_nodes, text_value);\n      text_1 = claimText(h2_nodes, \" Variants\");\n      h2_nodes.forEach(detachNode);\n      text_2 = claimText(nodes, \"\\n            \");\n      this.h();\n    },\n    h: function hydrate() {\n      h2.className = \"demo-body__head\";\n      addLoc(h2, file, 23, 12, 581);\n    },\n    m: function mount(target, anchor) {\n      insertNode(h2, target, anchor);\n      appendNode(text, h2);\n      appendNode(text_1, h2);\n      insertNode(text_2, target, anchor);\n\n      if (slot_content_variants) {\n        insertNode(slot_content_variants_before || (slot_content_variants_before = createComment()), target, anchor);\n        insertNode(slot_content_variants, target, anchor);\n        insertNode(slot_content_variants_after || (slot_content_variants_after = createComment()), target, anchor);\n      }\n    },\n    p: function update(changed, ctx) {\n      if ((changed.variantTitle || changed.demoTitle) && text_value !== (text_value = ctx.variantTitle || ctx.demoTitle)) {\n        text.data = text_value;\n      }\n    },\n    d: function destroy(detach) {\n      if (detach) {\n        detachNode(h2);\n        detachNode(text_2);\n      }\n\n      if (slot_content_variants) {\n        reinsertBetween(slot_content_variants_before, slot_content_variants_after, slot_content_variants);\n        detachNode(slot_content_variants_before);\n        detachNode(slot_content_variants_after);\n      }\n    }\n  };\n}\n\nfunction Index(options) {\n  /*Babel»*/\n  var _this = this;\n\n  this._debugName = '<Index>';\n  if (!options || !options.target && !options.root) throw new Error(\"'target' is a required option\");\n  init(this, options);\n  this.store = store_1();\n  this._state = assign(data(), options.data);\n\n  this._recompute({\n    currentRoute: 1\n  }, this._state);\n\n  if (!('currentRoute' in this._state)) console.warn(\"<Index> was created without expected data property 'currentRoute'\");\n  if (!('stylesheet' in this._state)) console.warn(\"<Index> was created without expected data property 'stylesheet'\");\n  if (!('demoTitle' in this._state)) console.warn(\"<Index> was created without expected data property 'demoTitle'\");\n  if (!('variants' in this._state)) console.warn(\"<Index> was created without expected data property 'variants'\");\n  if (!('variantTitle' in this._state)) console.warn(\"<Index> was created without expected data property 'variantTitle'\");\n  this._intro = true;\n  this._slotted = options.slots || {};\n\n  if (!options.root) {\n    this._oncreate = [];\n    this._beforecreate = [];\n    this._aftercreate = [];\n  }\n\n  this.slots = {};\n  this._fragment = create_main_fragment(this, this._state);\n\n  this.root._oncreate.push(function () {\n    oncreate.call(_this);\n\n    _this.fire(\"update\", {\n      changed: assignTrue({}, _this._state),\n      current: _this._state\n    });\n  });\n\n  if (options.target) {\n    var nodes = children(options.target);\n    options.hydrate ? this._fragment.l(nodes) : this._fragment.c();\n    nodes.forEach(detachNode);\n\n    this._mount(options.target, options.anchor);\n\n    this._lock = true;\n    callAll(this._beforecreate);\n    callAll(this._oncreate);\n    callAll(this._aftercreate);\n    this._lock = false;\n  }\n}\n\nassign(Index.prototype, protoDev);\n\nIndex.prototype._checkReadOnly = function _checkReadOnly(newState) {\n  if ('lowercaseRoute' in newState && !this._updatingReadonlyProperty) throw new Error(\"<Index>: Cannot set read-only property 'lowercaseRoute'\");\n};\n\nIndex.prototype._recompute = function _recompute(changed, state) {\n  if (changed.currentRoute) {\n    if (this._differs(state.lowercaseRoute, state.lowercaseRoute = lowercaseRoute(state))) changed.lowercaseRoute = true;\n  }\n};\n\nexport default Index;","/* @src/modules/main-wrapper/index.html generated by Svelte v2.9.7 */\nimport { addLoc, appendNode, assign, children, claimElement, createElement, detachNode, init, insertNode, protoDev, reinsertChildren } from \"svelte/shared.js\";\n\nfunction data() {\n  return {\n    mainClass: \"main\"\n  };\n}\n\n;\nvar file = \"src/modules/main-wrapper/index.html\";\n\nfunction create_main_fragment(component, ctx) {\n  var main,\n      slot_content_default = component._slotted.default;\n  return {\n    c: function create() {\n      main = createElement(\"main\");\n      this.h();\n    },\n    l: function claim(nodes) {\n      main = claimElement(nodes, \"MAIN\", {\n        class: true\n      }, false);\n      var main_nodes = children(main);\n      main_nodes.forEach(detachNode);\n      this.h();\n    },\n    h: function hydrate() {\n      main.className = ctx.mainClass;\n      addLoc(main, file, 0, 0, 0);\n    },\n    m: function mount(target, anchor) {\n      insertNode(main, target, anchor);\n\n      if (slot_content_default) {\n        appendNode(slot_content_default, main);\n      }\n    },\n    p: function update(changed, ctx) {\n      if (changed.mainClass) {\n        main.className = ctx.mainClass;\n      }\n    },\n    d: function destroy(detach) {\n      if (detach) {\n        detachNode(main);\n      }\n\n      if (slot_content_default) {\n        reinsertChildren(main, slot_content_default);\n      }\n    }\n  };\n}\n\nfunction Index(options) {\n  this._debugName = '<Index>';\n  if (!options || !options.target && !options.root) throw new Error(\"'target' is a required option\");\n  init(this, options);\n  this._state = assign(data(), options.data);\n  if (!('mainClass' in this._state)) console.warn(\"<Index> was created without expected data property 'mainClass'\");\n  this._intro = true;\n  this._slotted = options.slots || {};\n  this.slots = {};\n  this._fragment = create_main_fragment(this, this._state);\n\n  if (options.target) {\n    var nodes = children(options.target);\n    options.hydrate ? this._fragment.l(nodes) : this._fragment.c();\n    nodes.forEach(detachNode);\n\n    this._mount(options.target, options.anchor);\n  }\n}\n\nassign(Index.prototype, protoDev);\n\nIndex.prototype._checkReadOnly = function _checkReadOnly(newState) {};\n\nexport default Index;","import _createBrowserHistory from './createBrowserHistory';\nexport { _createBrowserHistory as createBrowserHistory };\nimport _createHashHistory from './createHashHistory';\nexport { _createHashHistory as createHashHistory };\nimport _createMemoryHistory from './createMemoryHistory';\nexport { _createMemoryHistory as createMemoryHistory };\nexport { createLocation, locationsAreEqual } from './LocationUtils';\nexport { parsePath, createPath } from './PathUtils';","/* node_modules/svelte-routing/NavLink.html generated by Svelte v2.9.7 */\nimport { addListener, addLoc, appendNode, assign, assignTrue, callAll, children, claimElement, createElement, detachNode, init, insertNode, protoDev, reinsertChildren, removeListener, setAttribute } from \"svelte/shared.js\";\nimport { createLocation } from 'history';\nimport { getHistory, isModifiedEvent, matchPath } from './index.js';\n\nfunction href(\n/*Babel»*/\n_ref) {\n  /*Babel»*/\n  var to = _ref.to,\n      history = _ref.history;\n  var location = createLocation(to, null, null, history.location);\n  return history.createHref(location);\n}\n\nfunction escapedPath(\n/*Babel»*/\n_ref2) {\n  /*Babel»*/\n  var to = _ref2.to;\n  var path = typeof to === 'object' ? to.pathname : to; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n\n  return path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n}\n\nfunction isActive(\n/*Babel»*/\n_ref3) {\n  /*Babel»*/\n  var escapedPath = _ref3.escapedPath,\n      pathname = _ref3.pathname,\n      exact = _ref3.exact,\n      strict = _ref3.strict;\n  var path = escapedPath;\n  return matchPath(pathname, {\n    path: path,\n    exact: exact,\n    strict: strict\n  });\n}\n\nfunction computedClass(\n/*Babel»*/\n_ref4) {\n  /*Babel»*/\n  var isActive = _ref4.isActive,\n      className = _ref4.className,\n      activeClassName = _ref4.activeClassName;\n  var classes = [];\n\n  if (className !== '') {\n    classes.push(className);\n  }\n\n  if (isActive) {\n    classes.push(activeClassName);\n  }\n\n  return classes.join(' ');\n}\n\nfunction computedAriaCurrent(\n/*Babel»*/\n_ref5) {\n  /*Babel»*/\n  var isActive = _ref5.isActive,\n      ariaCurrent = _ref5.ariaCurrent;\n  return isActive && ariaCurrent || 'false';\n}\n\nfunction data() {\n  var history = getHistory();\n  return {\n    to: '#',\n    replace: false,\n    target: '',\n    exact: false,\n    strict: false,\n    pathname: history.location.pathname,\n    activeClassName: 'active',\n    className: '',\n    ariaCurrent: 'true',\n    history: history\n  };\n}\n\n;\nvar methods = {\n  /*Babel»*/\n  handleClick: function handleClick(event) {\n    /*Babel»*/\n    var _this$get = this.get(),\n        target = _this$get.target,\n        history = _this$get.history,\n        to = _this$get.to,\n        replace = _this$get.replace; // Ignore everything but left clicks, let browser handle\n    // \"target=_blank\" etc., ignore clicks with modifier keys\n\n\n    if (event.button !== 0 || target !== '' || isModifiedEvent(event)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (replace) {\n      history.replace(to);\n    } else {\n      history.push(to);\n    }\n  }\n};\n\nfunction oncreate() {\n  /*Babel»*/\n  var _this = this;\n\n  var _this$get2 = this.get(),\n      history = _this$get2.history;\n\n  this.unlisten = history.listen(function (location) {\n    /*Babel»*/\n    var pathname = location.pathname;\n\n    _this.set({\n      pathname: pathname\n    });\n  });\n}\n\n;\n\nfunction ondestroy() {\n  this.unlisten();\n}\n\n;\nvar file = \"node_modules/svelte-routing/NavLink.html\";\n\nfunction create_main_fragment(component, ctx) {\n  var a,\n      slot_content_default = component._slotted.default;\n\n  function click_handler(event) {\n    component.handleClick(event);\n  }\n\n  return {\n    c: function create() {\n      a = createElement(\"a\");\n      this.h();\n    },\n    l: function claim(nodes) {\n      a = claimElement(nodes, \"A\", {\n        href: true,\n        target: true,\n        class: true,\n        \"aria-current\": true\n      }, false);\n      var a_nodes = children(a);\n      a_nodes.forEach(detachNode);\n      this.h();\n    },\n    h: function hydrate() {\n      addListener(a, \"click\", click_handler);\n      a.href = ctx.href;\n      a.target = ctx.target;\n      a.className = ctx.computedClass;\n      setAttribute(a, \"aria-current\", ctx.computedAriaCurrent);\n      addLoc(a, file, 0, 0, 0);\n    },\n    m: function mount(target, anchor) {\n      insertNode(a, target, anchor);\n\n      if (slot_content_default) {\n        appendNode(slot_content_default, a);\n      }\n    },\n    p: function update(changed, ctx) {\n      if (changed.href) {\n        a.href = ctx.href;\n      }\n\n      if (changed.target) {\n        a.target = ctx.target;\n      }\n\n      if (changed.computedClass) {\n        a.className = ctx.computedClass;\n      }\n\n      if (changed.computedAriaCurrent) {\n        setAttribute(a, \"aria-current\", ctx.computedAriaCurrent);\n      }\n    },\n    d: function destroy(detach) {\n      if (detach) {\n        detachNode(a);\n      }\n\n      if (slot_content_default) {\n        reinsertChildren(a, slot_content_default);\n      }\n\n      removeListener(a, \"click\", click_handler);\n    }\n  };\n}\n\nfunction NavLink(options) {\n  /*Babel»*/\n  var _this2 = this;\n\n  this._debugName = '<NavLink>';\n  if (!options || !options.target && !options.root) throw new Error(\"'target' is a required option\");\n  init(this, options);\n  this._state = assign(data(), options.data);\n\n  this._recompute({\n    to: 1,\n    history: 1,\n    escapedPath: 1,\n    pathname: 1,\n    exact: 1,\n    strict: 1,\n    isActive: 1,\n    className: 1,\n    activeClassName: 1,\n    ariaCurrent: 1\n  }, this._state);\n\n  if (!('to' in this._state)) console.warn(\"<NavLink> was created without expected data property 'to'\");\n  if (!('history' in this._state)) console.warn(\"<NavLink> was created without expected data property 'history'\");\n  if (!('pathname' in this._state)) console.warn(\"<NavLink> was created without expected data property 'pathname'\");\n  if (!('exact' in this._state)) console.warn(\"<NavLink> was created without expected data property 'exact'\");\n  if (!('strict' in this._state)) console.warn(\"<NavLink> was created without expected data property 'strict'\");\n  if (!('className' in this._state)) console.warn(\"<NavLink> was created without expected data property 'className'\");\n  if (!('activeClassName' in this._state)) console.warn(\"<NavLink> was created without expected data property 'activeClassName'\");\n  if (!('ariaCurrent' in this._state)) console.warn(\"<NavLink> was created without expected data property 'ariaCurrent'\");\n  if (!('target' in this._state)) console.warn(\"<NavLink> was created without expected data property 'target'\");\n  this._intro = true;\n  this._handlers.destroy = [ondestroy];\n  this._slotted = options.slots || {};\n\n  if (!options.root) {\n    this._oncreate = [];\n  }\n\n  this.slots = {};\n  this._fragment = create_main_fragment(this, this._state);\n\n  this.root._oncreate.push(function () {\n    oncreate.call(_this2);\n\n    _this2.fire(\"update\", {\n      changed: assignTrue({}, _this2._state),\n      current: _this2._state\n    });\n  });\n\n  if (options.target) {\n    var nodes = children(options.target);\n    options.hydrate ? this._fragment.l(nodes) : this._fragment.c();\n    nodes.forEach(detachNode);\n\n    this._mount(options.target, options.anchor);\n\n    callAll(this._oncreate);\n  }\n}\n\nassign(NavLink.prototype, protoDev);\nassign(NavLink.prototype, methods);\n\nNavLink.prototype._checkReadOnly = function _checkReadOnly(newState) {\n  if ('href' in newState && !this._updatingReadonlyProperty) throw new Error(\"<NavLink>: Cannot set read-only property 'href'\");\n  if ('escapedPath' in newState && !this._updatingReadonlyProperty) throw new Error(\"<NavLink>: Cannot set read-only property 'escapedPath'\");\n  if ('isActive' in newState && !this._updatingReadonlyProperty) throw new Error(\"<NavLink>: Cannot set read-only property 'isActive'\");\n  if ('computedClass' in newState && !this._updatingReadonlyProperty) throw new Error(\"<NavLink>: Cannot set read-only property 'computedClass'\");\n  if ('computedAriaCurrent' in newState && !this._updatingReadonlyProperty) throw new Error(\"<NavLink>: Cannot set read-only property 'computedAriaCurrent'\");\n};\n\nNavLink.prototype._recompute = function _recompute(changed, state) {\n  if (changed.to || changed.history) {\n    if (this._differs(state.href, state.href = href(state))) changed.href = true;\n  }\n\n  if (changed.to) {\n    if (this._differs(state.escapedPath, state.escapedPath = escapedPath(state))) changed.escapedPath = true;\n  }\n\n  if (changed.escapedPath || changed.pathname || changed.exact || changed.strict) {\n    if (this._differs(state.isActive, state.isActive = isActive(state))) changed.isActive = true;\n  }\n\n  if (changed.isActive || changed.className || changed.activeClassName) {\n    if (this._differs(state.computedClass, state.computedClass = computedClass(state))) changed.computedClass = true;\n  }\n\n  if (changed.isActive || changed.ariaCurrent) {\n    if (this._differs(state.computedAriaCurrent, state.computedAriaCurrent = computedAriaCurrent(state))) changed.computedAriaCurrent = true;\n  }\n};\n\nexport default NavLink;"],"mappings":";;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnvvaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChsourceRoot":""}