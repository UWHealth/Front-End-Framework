/* SG
# Config [[dev]]

See [UWHealth sass tools documenation](https://uwhealth.github.io/sass-tools/) for configuration variable details.
What is set here are reasonable defaults.

*/

// Import base sass toolset and default config variables
@import "NODE/@uwhealth/sass-tools/index.scss";


//------------------------------------------
// 1.0 - Typography configration
//------------------------------------------

$base-font-size:            16px;
$base-line-height:          24px;
$font-looseness:            15%;
$auto-scale-type:           false;
$scale-ratio:               1.35;

$vertical-space:            $base-line-height; // Maintains best vertical rhythm
$horizontal-space:          $base-line-height; // Simplifies measurements

$rem-px-fallback:           false;

$indented-paragraphs:       false;

$type-h1-size:           (modular-scale(6));
$type-h2-size:           (modular-scale(5));
$type-h3-size:           (modular-scale(4));
$type-h4-size:           (modular-scale(3));
$type-h5-size:           (modular-scale(2));
$type-h6-size:           (modular-scale(1));
$type-small-size: 		 (ceil(modular-scale(-1)));


//------------------------------------------
// 1.1 - Font configuration
//------------------------------------------

$use-web-fonts:             true;

$primary-font-stack:        "opensans", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
$secondary-font-stack:      $system-font-stack;
$monospace-font-stack:      "Consolas", "Andale Mono WT", "Andale Mono", "Lucida Console", "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono", "Nimbus Mono L", "Monaco", "Courier New", "Courier", monospace;
$icon-font-stack:           null;

$font-file-location: 	'/public/fonts'; //Paths are relative to CSS file
$web-fonts: (
    'opensans': (
        'weights': (400, 700),
        'italics': (400, 700),
        'formats': ('woff', 'svg', 'ttf')
    )
);


//------------------------------------------
// 2.0 - Responsive configuration
//------------------------------------------

$max-site-width:         1360px;
$max-content-width: 	 690px;
$max-wide-content-width: 910px;

$breakpoint-namespace-character: "_";
$breakpoints: (
    // Mostly phones
    "smalls": "(max-width:#{ems($max-wide-content-width)})",
    // Small Phones
    "small": "(max-width: #{ems($max-content-width)})",
    // Large (Modern) phones/phablets
    "smallish":
        "(min-width: #{ems($max-content-width+1px)})" +
        " and (max-width: #{ems($max-wide-content-width)})",
    // Tablets, Desktops and larger
    "bigs": "(min-width: #{ems($max-wide-content-width+1px)})",
    // Mostly Tablets and small laptops. Overrides Bigs
    "lap":
        "(min-width: #{ems($max-wide-content-width + 1px)})" +
        " and (max-width: #{ems($max-site-width)})",
    // Large Tablets and Desktops. Overrides Bigs.
    "desk": "(min-width: #{ems($max-site-width)})"
);


//------------------------------------------
// 2.1 - Grid configuration
//------------------------------------------

$grid-columns:           12;
$grid-gutter:            32px;
$grid-silent-classes:    true;
$grid-push:              true;
$grid-pull:              true;

$grid-flex:              true;
$grid-floats:            false;

$grid-inline-block:      true; // Fallback for older browsers
$grid-letter-space-fix:  -0.45em; // Should be based on $primary-font-stack

$grid-bem-naming:        true; // Generated classes use BEM instead of snake_case

// Include classes for each named breakpoint in $breakpoints
$breakpoint-has-widths: ('smalls', 'small', 'smallish', 'bigs', 'lap', 'desk');
$breakpoint-has-push:   ('smalls', 'small', 'smallish', 'bigs', 'lap', 'desk');
$breakpoint-has-pull:   ('smalls', 'small', 'smallish', 'bigs', 'lap', 'desk');


//------------------------------------------
// 2.2 - Utility class configuration
//------------------------------------------

$display-classes: (
    "show": block,
    "il": inline,
    "i-block": inline-block,
    "hide": none,
    "flex": flex,
);

// If $breakpoint-has-spacing-classes is false, this can be ignored
$spacing-classes: (
    properties: (
        "pad": padding,
        "space": margin,
    ),
    directions: (
        "": "",
        "-t": "top",
        "-b": "bottom",
        "-l": "left",
        "-r": "right",
        "-v": "top" "bottom",
        "-h": "right" "left",
    ),
    units: (
        "-0": 0,
        "": 1,
        "-quarter": 0.25,
        "-half": 0.5,
        "-2": 2,
        "-neg-quarter": -0.25,
        "-neg-half": -0.5,
        "-neg": -1,
        "-neg-2": -2,
    ),
);


// Determines what utility classes get generated at `$$breakpoints`.
// The list's order determines cascade (output order).
// This is useful if you want one breakpoint to override another.
$breakpoint-has-alignment-classes: ("smalls", "bigs", "desk");
$breakpoint-has-spacing-classes:   ("smalls", "bigs", "desk");
$breakpoint-has-display-classes:   ("smalls", "bigs");
$breakpoint-has-type-classes:      ("smalls", "bigs");


//------------------------------------------
// 3.0 - Color configuration
//------------------------------------------

$base-colors: (
    'type': #0a1c2b, //Required

    'links': #0d497b, //Required

    'bg': #f6f8fb, //Required

    //Change the following names and colors project-specific
    'styleguide': (
        'base': #5E839E,
        'light': #CADDE2,
        'lighter': #F5D1DD,
        'lightest': #E0ECF0,
        'highlight':#f60255,
        'dark': #175CA2,
        'darker': #114a84,
        'darkest': #081D33
    ),

    'accent': mix(#d40026, #AD0909, 45%),

    'success': #bada55
);

// Create color variations based
// NOTE: This is here as an example and can be removed from a real project.
$base-colors: generate-color-variations(
    $base-colors,
    $variations: ( //Color variation names
        'light', 'lighter', 'lightest',
        'dark', 'darker', 'darkest'
    ),
    $functions: ( //functions to use when creating variations
        'linearlight', 'lineardodge', 'tint',
        'darken', 'linearburn', 'linearburn'
    ),
    $blending-colors: ( //Allows for more uniform colors
        #bfccd6, #dee9ec, null,
        null, #4c5a66, #323d42
    ),
    $increments: ( //How strongly each color should be blended
        50%,   60%,   80%,
        5%,   40%,   70%
    )
);


/* SG
# Config/Debug Settings [[dev]]

_NOTE: These settings, when set to `true`, will slow down compilation somewhat._

##### `$$debug-fonts`
###### Boolean
Whether to include debug statements about font sizes and line-heights as they're generated. Useful if you're getting weird values on auto-generated line-heights.

* %: Distance from the lowest font-size.
* ub: Line-height upperbounds
* lb: Line-height lowerbounds
* lh: Final line-height (in pixels and unit-less).
* loops: Number of times it took to process the line-height. High numbers can indicate font-sizes that are very difficult to process.

##### `$$debug-baseline`
###### Boolean
Adds style for a `baseline-on` class that will show a grid of the baseline on any element (most useful on the `body` or `html` tag). Makes vertical alignment easier.


##### `$$debug-silent-classes`
###### Boolean
Stores all auto-generated silent classes into a map that is then output as a comment at the end of the final css. Useful for getting an overview of values that are stored by the framework.

##### `$$debug-breakpoints`
###### Boolean
Displays the current breakpoint (from `$$breakpoints`) name on a psuedo element on the body. Makes debugging media queries a little simpler.

*/


//------------------------------------------
// 4.0 - Debug configuration
//------------------------------------------

$debug-fonts: false;
// Adds style for a `baseline-on` class that will show a grid of the baseline
// on any element (most useful on the `body` or `html` tag).
// Makes vertical alignment easier.
$debug-baseline: true;
// Displays the current breakpoint (from `$$breakpoints`) name
// on a psuedo element on the body.
// Makes debugging media queries a little simpler.
$debug-breakpoints: true;
 // Stores all silent classes in $_silents-registry
$debug-silent-classes: false;


// Initialize and propogate framework variables
@include globalize-config();
