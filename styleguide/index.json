{"sections":[{"id":"Color_Blocks-","isFunction":false,"isSubsection":false,"section":"Color Blocks","heading":"","code":"<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>","markup":"&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;","comment":"<p>A good way to look over your color pallete.</p>\n<p>Include a bunch of elements with <code>class=&quot;color-blocks&quot;</code>, and the css will do the rest. Requires <code>@color-palette-output()</code> to generate.</p>"},{"id":"Tabs-","isFunction":false,"isSubsection":false,"section":"Tabs","heading":"","code":"<a href=\"#tab1\" class=\"tab_button\">Tab 1</a>\n<div id=\"tab1\" class=\"tab_content\">\n    Content Here\n</div>\n<a href=\"#tab2\" class=\"tab_button\">Tab 1</a>\n<div id=\"tab2\" class=\"tab_content\">\n    Secondary Content Here\n</div>","markup":"&lt;a href=<span class=\"hljs-string\">\"#tab1\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_button\"</span>&gt;Tab <span class=\"hljs-number\">1</span>&lt;/a&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-property\">id</span>=<span class=\"hljs-string\">\"tab1\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_content\"</span>&gt;\n    Content Here\n&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;a href=<span class=\"hljs-string\">\"#tab2\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_button\"</span>&gt;Tab <span class=\"hljs-number\">1</span>&lt;/a&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-property\">id</span>=<span class=\"hljs-string\">\"tab2\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_content\"</span>&gt;\n    Secondary Content Here\n&lt;/<span class=\"hljs-keyword\">div</span>&gt;","comment":"<p>Tabs start out as simple anchor + element pairings (with the anchor&apos;s href referring to an element&apos;s ID).</p>\n<p>Using <code>.tab_button</code> on the anchor, and <code>.tab_content</code> on the element, javascript will group the tabs together until an element breaks the pattern. It will then attach the navigation and event handlers.</p>"},{"id":"Tabs-Another","isFunction":false,"isSubsection":true,"section":"Tabs","heading":"Another","code":"<div class=\"tabbed\" data-tabbed=\"true\">\n    <nav class=\"tabs\">\n        <a class=\"tab active\" href=\"#tab3\">Tab 1</a>\n        <a class=\"tab\" href=\"#tab4\">Tab 2</a>\n    </nav>\n    <a href=\"#tab3\" class=\"tab_button\">tab 1</a>\n    <div id=\"tab3\" class=\"tab_content\">\n        Content Here\n    </div>\n    <a href=\"#tab4\" class=\"tab_button\">tab 2</a>\n    <div id=\"tab4\" class=\"tab_content\">\n        Secondary Content Here\n    </div>\n</div>","markup":"&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tabbed\"</span> data-tabbed=<span class=\"hljs-string\">\"true\"</span>&gt;\n    &lt;nav <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tabs\"</span>&gt;\n        &lt;a <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab active\"</span> href=<span class=\"hljs-string\">\"#tab3\"</span>&gt;Tab <span class=\"hljs-number\">1</span>&lt;/a&gt;\n        &lt;a <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab\"</span> href=<span class=\"hljs-string\">\"#tab4\"</span>&gt;Tab <span class=\"hljs-number\">2</span>&lt;/a&gt;\n    &lt;/nav&gt;\n    &lt;a href=<span class=\"hljs-string\">\"#tab3\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_button\"</span>&gt;<span class=\"hljs-constant\">tab</span> <span class=\"hljs-number\">1</span>&lt;/a&gt;\n    &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-property\">id</span>=<span class=\"hljs-string\">\"tab3\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_content\"</span>&gt;\n        Content Here\n    &lt;/<span class=\"hljs-keyword\">div</span>&gt;\n    &lt;a href=<span class=\"hljs-string\">\"#tab4\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_button\"</span>&gt;<span class=\"hljs-constant\">tab</span> <span class=\"hljs-number\">2</span>&lt;/a&gt;\n    &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-property\">id</span>=<span class=\"hljs-string\">\"tab4\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_content\"</span>&gt;\n        Secondary Content Here\n    &lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;/<span class=\"hljs-keyword\">div</span>&gt;","comment":"<p>Another tab example.</p>"}],"menus":{"sections":[{"name":"Color Blocks","headings":[{"id":"Color_Blocks-","name":""}]},{"name":"Tabs","headings":[{"id":"Tabs-","name":""},{"id":"Tabs-Another","name":"Another"}]}],"functions":[{"name":"Globals","headings":[{"id":"Globals-Config","name":"Config"},{"id":"Globals-Functions","name":"Functions"}]},{"name":"Main","headings":[{"id":"Main-","name":""}]}]},"functions":[{"id":"Globals-Config","isFunction":true,"isSubsection":true,"section":"Globals","heading":"Config","code":"","markup":"","comment":"<p>/globals/_config.scss</p>\n<hr>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$base-font-size&lt;/code&gt;\"><code>$base-font-size</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Pixel_value\">Pixel value</h6>\n<p>Font size all other values will use for calculation. Will be converted to <code>rems</code>.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$base-line-height&lt;/code&gt;\"><code>$base-line-height</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Pixel_value\">Pixel value</h6>\n<p>Line-height for base font-size. Will be used to determine the vertical spacing values when <code>type-space()</code> is used.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$auto-scale-type&lt;/code&gt;\"><code>$auto-scale-type</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Boolean\">Boolean</h6>\n<p>Uses the <code>$scale-ratio</code> var to create font sizes for headings starting from the <code>$base-font-size</code>. Overwrites <code>$type-[h#]-size</code> vars.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$scale-ratio&lt;/code&gt;\"><code>$scale-ratio</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Numeric_(float)\">Numeric (float)</h6>\n<p>Used for <code>$auto-scale-type</code> and for <code>modular-scale()</code>.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$[primary,_secondary,_monospace]-font-stack&lt;/code&gt;\"><code>$[primary, secondary, monospace]-font-stack</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-String\">String</h6>\n<p>Used wherever font-families are declared.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$use-web-fonts&lt;/code&gt;\"><code>$use-web-fonts</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Boolean\">Boolean</h6>\n<p>Whether to generate <code>@font-face</code> values based on <code>$font-[]</code> vars or not.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$font-file-name&lt;/code&gt;\"><code>$font-file-name</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-List_(string)\">List (string)</h6>\n<p>Uses for <code>@font-face</code> declarations as well as pointing to the actual font file names. <em>File names and @font-face values must be the same (e.g. &apos;opensans&apos; and &apos;opensans.ttf&apos;)</em> See <a href=\"#Sass-Tools-Fontface\">/globals/tools/_fontface.scss</a> for more.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$font-weights&lt;/code&gt;\"><code>$font-weights</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-List_(nested)_(string)\">List (nested) (string)</h6>\n<p>Each parenthesis corresponds to each name in <code>$font-file-name</code>. Determines how many <code>@font-face</code> weights are generated per font.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$font-italics&lt;/code&gt;\"><code>$font-italics</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-List_(nested)_(boolean)\">List (nested) (boolean)</h6>\n<p>Corresponds to each value in <code>$font-weights</code>. (e.g. if <code>$font-weights: (400,700),(200,400)</code> and <code>$font-italics: (true), (false,true)</code> then the first font will have italics in the 400 and 700 weights while second font will have italics in the 400 weight).</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$font-include-eot&lt;/code&gt;\"><code>$font-include-eot</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Boolean\">Boolean</h6>\n<p>Determines whether to generate <code>@font-face</code> values that point at an .eot file. Fallback for IE8.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$gutter&lt;/code&gt;\"><code>$gutter</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Pixel_value\">Pixel value</h6>\n<p>Space between grid items.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$use-silent-classes&lt;/code&gt;\"><code>$use-silent-classes</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Boolean\">Boolean</h6>\n<p>If set to false, actual classes will be output to generated CSS.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$push&lt;/code&gt;,_&lt;code&gt;$pull&lt;/code&gt;\"><code>$push</code>, <code>$pull</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Boolean\">Boolean</h6>\n<p>Determines whether to include extra grid classes for positional grid modifiers.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$use-markup-fix&lt;/code&gt;\"><code>$use-markup-fix</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Boolean\">Boolean</h6>\n<p>If set to true, html must have comments between grid items. Almost always set to false.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$use-floats&lt;/code&gt;\"><code>$use-floats</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Boolean\">Boolean</h6>\n<p>If set to true, uses floats instead of inline-block</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$show-baseline&lt;/code&gt;\"><code>$show-baseline</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Boolean\">Boolean</h6>\n<p>For development purposes only. Adds a <code>.baseline_on</code> class that will show horizontal lines on an element with heights determined by <code>$base-line-height</code>.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$breakpoints&lt;/code&gt;\"><code>$breakpoints</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-List_(nested)_(string)\">List (nested) (string)</h6>\n<p>Sets up variables for media-queries. Used in <code>media-query()</code>.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$breakpoints-has-widths&lt;/code&gt;,_&lt;code&gt;$breakpoints-has-push&lt;/code&gt;,_&lt;code&gt;$breakpoints-has-pull&lt;/code&gt;\"><code>$breakpoints-has-widths</code>, <code>$breakpoints-has-push</code>, <code>$breakpoints-has-pull</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-List_(string)\">List (string)</h6>\n<p>Determines what classes get generated at <code>$breakpoints</code>. List order determines cascade.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$breakpoints-has-alignment-classes&lt;/code&gt;,_&lt;code&gt;$breakpoints-has-spacing-classes&lt;/code&gt;,_&lt;code&gt;$breakpoints-has-display-classes&lt;/code&gt;,_&lt;code&gt;$breakpoint-has-type-classes&lt;/code&gt;\"><code>$breakpoints-has-alignment-classes</code>, <code>$breakpoints-has-spacing-classes</code>, <code>$breakpoints-has-display-classes</code>, <code>$breakpoint-has-type-classes</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-List_(string)\">List (string)</h6>\n<p>Same as <code>breakpoint-has-widths</code>, but for utility classes.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$display-classes&lt;/code&gt;\"><code>$display-classes</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Map\">Map</h6>\n<p>Variable used generate display classes. Key value pairs determine the class name and the display value (e.g. &apos;show&apos;:&apos;block&apos; would create a <code>.show { display: block }</code>).</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$colors&lt;/code&gt;\"><code>$colors</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-Map\">Map</h6>\n<p>Set up variable names to be used for color-palette. Dark and light values will be automatically generated. Variables can be accessed through the <code>color()</code> (e.g. <code>color(highlight, light)</code> ). The automatically generated styles can be modified in <code>colors/_colorfunctions.scss</code></p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;$slick-[]-[]&lt;/code&gt;\"><code>$slick-[]-[]</code></h5>\n<p>Configuration for slick carousel jQuery plugin.<br>Reference: <a href=\"https://github.com/kenwheeler/slick/#sass-variables\">https://github.com/kenwheeler/slick/#sass-variables</a></p>"},{"id":"Globals-Functions","isFunction":true,"isSubsection":true,"section":"Globals","heading":"Functions","code":"","markup":"","comment":"<h3 class=\"main-section-sg-markdown\" id=\"section-Math_Functions\">Math Functions</h3>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;exponent()&lt;/code&gt;\"><code>exponent()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[number-you-want-to-multiply]&lt;/code&gt;,_&lt;code&gt;[exponent]&lt;/code&gt;\"><code>[number-you-want-to-multiply]</code>, <code>[exponent]</code></h6>\n<p>Exponentially multiply (cube, square, etc) a number.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;pow()&lt;/code&gt;\"><code>pow()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[number-you-want-to-multiply]&lt;/code&gt;,_&lt;code&gt;[exponent]&lt;/code&gt;\"><code>[number-you-want-to-multiply]</code>, <code>[exponent]</code></h6>\n<p>A more robust exponent multiplication which allows for decimal-based exponents. This replaces Compass&apos; pow() function.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;gcd()&lt;/code&gt;\"><code>gcd()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[first-number],_[second-number]&lt;/code&gt;\"><code>[first-number], [second-number]</code></h6>\n<p>Greatest Common Divisor calculation (useful for calculating grids and widths)</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;lcm()&lt;/code&gt;\"><code>lcm()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[first-number],_[second-number]&lt;/code&gt;\"><code>[first-number], [second-number]</code></h6>\n<p>Finds the least common multiple.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;nth_root()&lt;/code&gt;\"><code>nth_root()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[number-you-want-to-find-the-root-of],_[root-divisor]&lt;/code&gt;\"><code>[number-you-want-to-find-the-root-of], [root-divisor]</code></h6>\n<p>Advanced calculation for square roots, cube roots, etc. of a value.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;sqrt()&lt;/code&gt;\"><code>sqrt()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[number-you-want-the-square-root-of]&lt;/code&gt;\"><code>[number-you-want-the-square-root-of]</code></h6>\n<p>Find the square root of a value.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;golden()&lt;/code&gt;\"><code>golden()</code></h5>\n<p>Generate the golden ratio. Useful for multiplication and division.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;sin()&lt;/code&gt;\"><code>sin()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[angle]&lt;/code&gt;\"><code>[angle]</code></h6>\n<p>Determines the Sine of an angle.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;cos()&lt;/code&gt;\"><code>cos()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[angle]&lt;/code&gt;\"><code>[angle]</code></h6>\n<p>Determines the Cosine of an angle.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;tan()&lt;/code&gt;\"><code>tan()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[angle]&lt;/code&gt;\"><code>[angle]</code></h6>\n<p>Determines the Tangent of an angle.</p>\n<hr>\n<h3 class=\"main-section-sg-markdown\" id=\"section-Sass_Helpers\">Sass Helpers</h3>\n<h3 class=\"main-section-sg-markdown\" id=\"section-Converter_Functions\">Converter Functions</h3>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;strip-units()&lt;/code&gt;\"><code>strip-units()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[value-you-want-units-removed-from]&lt;/code&gt;\"><code>[value-you-want-units-removed-from]</code></h6>\n<p>Remove px,em,rem, etc. from a value. Usually a variable.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;percentage-to-decimal()&lt;/code&gt;\"><code>percentage-to-decimal()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[percent]&lt;/code&gt;\"><code>[percent]</code></h6>\n<p>Changes percent value to decimal.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;px-to-vw()&lt;/code&gt;\"><code>px-to-vw()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[pixel_value]&lt;/code&gt;\"><code>[pixel value]</code></h6>\n<p>Converts pixel dimensions to viewport width (vw) dimensions.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;px-to-rems()&lt;/code&gt;,&lt;code&gt;rems()&lt;/code&gt;\"><code>px-to-rems()</code>,<code>rems()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[pixel-value-you-need-converted],_[base-font-size-override]&lt;/code&gt;\"><code>[pixel-value-you-need-converted], [base-font-size-override]</code></h6>\n<p>Function for calculating stripped-unit REM values. Used by rems() mixin. Override base font size for media-queries where the breakpoint has a smaller/larger base-font.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;list-to-string()&lt;/code&gt;,_&lt;code&gt;str-join()&lt;/code&gt;\"><code>list-to-string()</code>, <code>str-join()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[list-you-need-converted],_[list-seperator]&lt;/code&gt;\"><code>[list-you-need-converted], [list-seperator]</code></h6>\n<p>Converts a list to a string with an optional separator.</p>\n<h3 class=\"main-section-sg-markdown\" id=\"section-String_&amp;_List_Functions\">String &amp; List Functions</h3>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;str-contains()&lt;/code&gt;\"><code>str-contains()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[string-you-need-parsed],[sub-string],_[start-position]&lt;/code&gt;\"><code>[string-you-need-parsed],[sub-string], [start-position]</code></h6>\n<p>Parses a string for a value (from an optional starting position).</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;str-append()&lt;/code&gt;\"><code>str-append()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[string],_[string-to-append]&lt;/code&gt;\"><code>[string], [string-to-append]</code></h6>\n<p>Adds one string to another (e.g. <code>str-append(&apos;hello&apos;, &apos;world&apos;)</code> becomes <code>hello world</code>). Used by str-join.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;list-contains()&lt;/code&gt;\"><code>list-contains()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[list],_[value]&lt;/code&gt;\"><code>[list], [value]</code></h6>\n<p>Checks whether a list contains a value.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;list-print()&lt;/code&gt;\"><code>list-print()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[list]&lt;/code&gt;\"><code>[list]</code></h6>\n<p>Used to lay out turn a list into a flat string. For debug purposes.</p>\n<h4 class=\"main-section-sg-markdown\" id=\"section-Map_Functions\">Map Functions</h4>\n<p><em>Reference: <a href=\"http://www.sitepoint.com/extra-map-functions-sass/\">http://www.sitepoint.com/extra-map-functions-sass/</a></em></p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;map-deep-set()&lt;/code&gt;\"><code>map-deep-set()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[map],_[keys_to_be_updated_...],_[new_value]&lt;/code&gt;\"><code>[map], [keys to be updated ...], [new value]</code></h6>\n<p>Add to a deeply nested map key. Accepts any number of keys, but the final value is the new key.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;map-depth()&lt;/code&gt;\"><code>map-depth()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[map]&lt;/code&gt;\"><code>[map]</code></h6>\n<p>Find depth of a map. Returns number.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;map-has-keys()&lt;/code&gt;,&lt;code&gt;map-contains-keys()&lt;/code&gt;\"><code>map-has-keys()</code>,<code>map-contains-keys()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[map],_[key(s)_to_be_checked_...]&lt;/code&gt;\"><code>[map], [key(s) to be checked ...]</code></h6>\n<p>Determine whether a map contains certain keys.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;map-has-nested-keys()&lt;/code&gt;,_&lt;code&gt;map-contains-nested-keys()&lt;/code&gt;\"><code>map-has-nested-keys()</code>, <code>map-contains-nested-keys()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[map],_[key(s)_to_be_checked...]&lt;/code&gt;\"><code>[map], [key(s) to be checked...]</code></h6>\n<p>Check for the value of a nested key. Returns boolean value.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;map-get-nested()&lt;/code&gt;\"><code>map-get-nested()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[map],_[key(s)_to_find_value..._]&lt;/code&gt;\"><code>[map], [key(s) to find value... ]</code></h6>\n<p>Returns nested map values. A deep version of Sass&apos; <code>map-get()</code>.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;map-extend()&lt;/code&gt;\"><code>map-extend()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[map],_[map(s)_to_merge_..._],_[deep?]&lt;/code&gt;\"><code>[map], [map(s) to merge ... ], [deep?]</code></h6>\n<p>Merges multiple maps. Similar to jQuery&apos;s .extend().</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;map-add-depth()&lt;/code&gt;\"><code>map-add-depth()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[map],_[new_key]&lt;/code&gt;\"><code>[map], [new key]</code></h6>\n<p>Adds one level to a map using the new key to a map. Used by color map generator function (colors/_colorfunctions). (e.g. <code>(key: value, key: value)</code> becomes <code>(key:(new-key: value), key:(new-key: value))</code> )</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;map-inspect()&lt;/code&gt;\"><code>map-inspect()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[map],_[starting_indent_level]&lt;/code&gt;\"><code>[map], [starting indent level]</code></h6>\n<p>Prints map into a string. Useful for debugging.</p>\n<hr>\n<h2 class=\"main-section-sg-markdown\" id=\"section-Photoshop_Converters\">Photoshop Converters</h2>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;photoshop-shadow()&lt;/code&gt;,_&lt;code&gt;photoshop-text-shadow()&lt;/code&gt;,_&lt;code&gt;photoshop-gradient-overlay()&lt;/code&gt;\"><code>photoshop-shadow()</code>, <code>photoshop-text-shadow()</code>, <code>photoshop-gradient-overlay()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[various]&lt;/code&gt;\"><code>[various]</code></h6>\n<p>MIXINs: Interprets Photoshop layer styles as they&apos;d appear in Photoshop into CSS. See functions for their accepted arguments.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;convert-angle()&lt;/code&gt;\"><code>convert-angle()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[angle]&lt;/code&gt;\"><code>[angle]</code></h6>\n<p>Converts Photoshop angles to CSS angles.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;stop-scale()&lt;/code&gt;\"><code>stop-scale()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[stop],_[scale]&lt;/code&gt;\"><code>[stop], [scale]</code></h6>\n<p>Converts Photoshop gradient-stops to CSS gradients.</p>\n<hr>\n<h2 class=\"main-section-sg-markdown\" id=\"section-Type_Functions\">Type Functions</h2>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;baseline()&lt;/code&gt;\"><code>baseline()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[font-size]&lt;/code&gt;,_&lt;code&gt;[baseline]&lt;/code&gt;\"><code>[font-size]</code>, <code>[baseline]</code></h6>\n<p>Aligns a font-size to a baseline. Dividing by the $font-size yields a unitless-REM value.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;baseline-lcm()&lt;/code&gt;\"><code>baseline-lcm()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[font-size]&lt;/code&gt;,_&lt;code&gt;[line-height]&lt;/code&gt;\"><code>[font-size]</code>, <code>[line-height]</code></h6>\n<p>Calculate the least-common-denominator between a font-size and a baseline.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;baseline-calc()&lt;/code&gt;\"><code>baseline-calc()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[font-size-in-pixels]&lt;/code&gt;,_&lt;code&gt;[base-font-size]&lt;/code&gt;,&lt;code&gt;[override?]&lt;/code&gt;\"><code>[font-size-in-pixels]</code>, <code>[base-font-size]</code>,<code>[override?]</code></h6>\n<p>Used generating line-heights that line up to the baseline grid. Override recommended behavior with a boolean third value to gain most eye-pleasing values.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;modular-scale()&lt;/code&gt;\"><code>modular-scale()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[number-on-the-scale-you-want],[ratio-to-use-as-scale]&lt;/code&gt;\"><code>[number-on-the-scale-you-want],[ratio-to-use-as-scale]</code></h6>\n<p>Generates a pixel value that is an exponent of a ratio (defaults to $scale-ratio value). Used by <code>type-scale()</code>.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;get-type()&lt;/code&gt;,&lt;code&gt;type()&lt;/code&gt;\"><code>get-type()</code>,<code>type()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[font-size],[font-size-value]&lt;/code&gt;\"><code>[font-size],[font-size-value]</code></h6>\n<p>function for finding the value of an indexed type-size. H1-H6, p, and small are all indexed values. px, rem, and line-height are available.</p>\n<h5 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;define-type()&lt;/code&gt;\"><code>define-type()</code></h5>\n<h6 class=\"main-section-sg-markdown\" id=\"section-&lt;code&gt;[font-size],_[property],_[new_value]&lt;/code&gt;\"><code>[font-size], [property], [new value]</code></h6>\n<p>Registers new values to type map. [Property] accepts px, rem, and line-height.</p>"},{"id":"Main-","isFunction":true,"isSubsection":false,"section":"Main","heading":"","code":"<div class=\"whatever\"></div>","markup":"&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"whatever\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;","comment":"<p>Stuff about sass</p>"}],"customVars":{"pageTitle":"Style Guide"}}