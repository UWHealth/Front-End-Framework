{"sections":[{"id":"color_blocks-","isSubsection":false,"isDevelopment":false,"section":"Color Blocks","heading":"","code":"<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>\n<div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div><div class=\"color-block\"></div>","codeLang":"","markup":"&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"color-block\"</span>&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;","comment":"<p>A good way to look over your color pallete.</p>\n<p>Include a bunch of elements with <code>class=&quot;color-blocks&quot;</code>, and the css will do the rest. Requires <code id=\"color-palette-output()\" class=\"global global_variable\" data-code-id=\"color-palette-output()\">@color-palette-output()</code> to generate. Uses $$colors map.</p>","globalVars":["@color-palette-output()"]},{"id":"lists-bordered_lists","isSubsection":true,"isDevelopment":false,"section":"Lists","heading":"Bordered Lists","code":"<ul class=\"list_bordered\">\n    <li>List Item</li>\n    <li>List Item</li>\n    <li>List Item</li>\n</ul>\n\n<ul class=\"list_bordered_short\">\n    <li>List Item</li>\n    <li>List Item</li>\n    <li>List Item</li>\n</ul>","codeLang":"","markup":"&lt;ul <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"list_bordered\"</span>&gt;\n    &lt;<span class=\"hljs-keyword\">li</span>&gt;<span class=\"hljs-keyword\">List</span> Item&lt;/<span class=\"hljs-keyword\">li</span>&gt;\n    &lt;<span class=\"hljs-keyword\">li</span>&gt;<span class=\"hljs-keyword\">List</span> Item&lt;/<span class=\"hljs-keyword\">li</span>&gt;\n    &lt;<span class=\"hljs-keyword\">li</span>&gt;<span class=\"hljs-keyword\">List</span> Item&lt;/<span class=\"hljs-keyword\">li</span>&gt;\n&lt;/ul&gt;\n\n&lt;ul <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"list_bordered_short\"</span>&gt;\n    &lt;<span class=\"hljs-keyword\">li</span>&gt;<span class=\"hljs-keyword\">List</span> Item&lt;/<span class=\"hljs-keyword\">li</span>&gt;\n    &lt;<span class=\"hljs-keyword\">li</span>&gt;<span class=\"hljs-keyword\">List</span> Item&lt;/<span class=\"hljs-keyword\">li</span>&gt;\n    &lt;<span class=\"hljs-keyword\">li</span>&gt;<span class=\"hljs-keyword\">List</span> Item&lt;/<span class=\"hljs-keyword\">li</span>&gt;\n&lt;/ul&gt;","comment":"<p>Creates a list with borders above and below each list item. Appending <code>list_bordered</code> with <code>_short</code> will make reduce the padding between each item.</p>","globalVars":[]},{"id":"lists-breadcrumbs","isSubsection":true,"isDevelopment":false,"section":"Lists","heading":"Breadcrumbs","code":"<ul class=\"breadcrumbs\">\n    <li class=\"breadcrumb\">List Item</li>\n    <li class=\"breadcrumb\">List Item</li>\n    <li class=\"breadcrumb\">List Item</li>\n</ul>","codeLang":"","markup":"&lt;ul <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"breadcrumbs\"</span>&gt;\n    &lt;<span class=\"hljs-keyword\">li</span> <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"breadcrumb\"</span>&gt;<span class=\"hljs-keyword\">List</span> Item&lt;/<span class=\"hljs-keyword\">li</span>&gt;\n    &lt;<span class=\"hljs-keyword\">li</span> <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"breadcrumb\"</span>&gt;<span class=\"hljs-keyword\">List</span> Item&lt;/<span class=\"hljs-keyword\">li</span>&gt;\n    &lt;<span class=\"hljs-keyword\">li</span> <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"breadcrumb\"</span>&gt;<span class=\"hljs-keyword\">List</span> Item&lt;/<span class=\"hljs-keyword\">li</span>&gt;\n&lt;/ul&gt;","comment":"<p>A list where each item is in a row, with a &#x25B8; between each item.</p>","globalVars":[]},{"id":"lists-inline_lists","isSubsection":true,"isDevelopment":false,"section":"Lists","heading":"Inline Lists","code":"<ul class=\"list_inline\">\n    <li>List Item</li>\n    <li>List Item</li>\n    <li>List Item</li>\n</ul>","codeLang":"","markup":"&lt;ul <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"list_inline\"</span>&gt;\n    &lt;<span class=\"hljs-keyword\">li</span>&gt;<span class=\"hljs-keyword\">List</span> Item&lt;/<span class=\"hljs-keyword\">li</span>&gt;\n    &lt;<span class=\"hljs-keyword\">li</span>&gt;<span class=\"hljs-keyword\">List</span> Item&lt;/<span class=\"hljs-keyword\">li</span>&gt;\n    &lt;<span class=\"hljs-keyword\">li</span>&gt;<span class=\"hljs-keyword\">List</span> Item&lt;/<span class=\"hljs-keyword\">li</span>&gt;\n&lt;/ul&gt;","comment":"<p>A list where each item is in a row, with spacing to the right of each item</p>","globalVars":[]},{"id":"lists-navigation_list","isSubsection":true,"isDevelopment":false,"section":"Lists","heading":"Navigation List","code":"<ul class=\"list_nav\">\n    <li>\n        <a href=\"#\">List Item</a>\n    </li>\n    <li>\n        <a href=\"#\">List Item</a>\n    </li>\n    <li>\n        <a href=\"#\">List Item</a>\n    </li>\n</ul>","codeLang":"","markup":"<span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">ul</span> <span class=\"hljs-attribute\">class</span>=<span class=\"hljs-value\">\"list_nav\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">a</span> <span class=\"hljs-attribute\">href</span>=<span class=\"hljs-value\">\"#\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">a</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">a</span> <span class=\"hljs-attribute\">href</span>=<span class=\"hljs-value\">\"#\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">a</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">a</span> <span class=\"hljs-attribute\">href</span>=<span class=\"hljs-value\">\"#\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">a</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">ul</span>&gt;</span>","comment":"<p>List where anchor tags fill the space of their containers. Useful as a modifier class. Can be used on any item with multiple child anchors (doesn&apos;t have to be an <code>ol</code> or <code>ul</code>).</p>","globalVars":[]},{"id":"tabs-","isSubsection":false,"isDevelopment":false,"section":"Tabs","heading":"","code":"<a href=\"#tab1\" class=\"tab_button\">Tab 1</a>\n<div id=\"tab1\" class=\"tab_content\">\n    Content Here\n</div>\n<a href=\"#tab2\" class=\"tab_button\">Tab 2</a>\n<div id=\"tab2\" class=\"tab_content\">\n    Secondary Content Here\n</div>","codeLang":"","markup":"&lt;a href=<span class=\"hljs-string\">\"#tab1\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_button\"</span>&gt;Tab <span class=\"hljs-number\">1</span>&lt;/a&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-property\">id</span>=<span class=\"hljs-string\">\"tab1\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_content\"</span>&gt;\n    Content Here\n&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;a href=<span class=\"hljs-string\">\"#tab2\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_button\"</span>&gt;Tab <span class=\"hljs-number\">2</span>&lt;/a&gt;\n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-property\">id</span>=<span class=\"hljs-string\">\"tab2\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_content\"</span>&gt;\n    Secondary Content Here\n&lt;/<span class=\"hljs-keyword\">div</span>&gt;","comment":"<p>A way to show groups of content, with buttons to toggle between them (like tabs in a folder or browser window).</p>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-set_up\">Set Up</h6>\n<p>Tabs start out as simple anchor + element pairings (with the anchor&apos;s href referring to an element&apos;s ID).</p>\n<p>Using <code>.tab_button</code> on the anchor, and <code>.tab_content</code> on the element, javascript will group the tabs together until an element breaks the pattern. It will then attach the navigation and event handlers.</p>","globalVars":[]},{"id":"tabs-premade","isSubsection":true,"isDevelopment":false,"section":"Tabs","heading":"Premade","code":"<div class=\"tabbed\" data-tabbed=\"true\">\n    <nav class=\"tabs\">\n        <a class=\"tab active\" href=\"#tab-1\">Tab 1</a>\n        <a class=\"tab\" href=\"#tab-2\">Tab 2</a>\n    </nav>\n    <a href=\"#tab-1\" class=\"tab_button\">tab 1</a>\n    <div id=\"tab-1\" class=\"tab_content\">\n        Content Here\n    </div>\n    <a href=\"#tab-2\" class=\"tab_button\">tab 2</a>\n    <div id=\"tab-2\" class=\"tab_content\">\n        Secondary Content Here\n    </div>\n</div>","codeLang":"","markup":"&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tabbed\"</span> data-tabbed=<span class=\"hljs-string\">\"true\"</span>&gt;\n    &lt;nav <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tabs\"</span>&gt;\n        &lt;a <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab active\"</span> href=<span class=\"hljs-string\">\"#tab-1\"</span>&gt;Tab <span class=\"hljs-number\">1</span>&lt;/a&gt;\n        &lt;a <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab\"</span> href=<span class=\"hljs-string\">\"#tab-2\"</span>&gt;Tab <span class=\"hljs-number\">2</span>&lt;/a&gt;\n    &lt;/nav&gt;\n    &lt;a href=<span class=\"hljs-string\">\"#tab-1\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_button\"</span>&gt;<span class=\"hljs-constant\">tab</span> <span class=\"hljs-number\">1</span>&lt;/a&gt;\n    &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-property\">id</span>=<span class=\"hljs-string\">\"tab-1\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_content\"</span>&gt;\n        Content Here\n    &lt;/<span class=\"hljs-keyword\">div</span>&gt;\n    &lt;a href=<span class=\"hljs-string\">\"#tab-2\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_button\"</span>&gt;<span class=\"hljs-constant\">tab</span> <span class=\"hljs-number\">2</span>&lt;/a&gt;\n    &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-property\">id</span>=<span class=\"hljs-string\">\"tab-2\"</span> <span class=\"hljs-type\">class</span>=<span class=\"hljs-string\">\"tab_content\"</span>&gt;\n        Secondary Content Here\n    &lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;/<span class=\"hljs-keyword\">div</span>&gt;","comment":"<p>You can force the tabs.js to ignore a group of pre-made tab elements by adding a <code>data-tabbed=&quot;true&quot;</code> to either the wrapping element or one of the <code>.tab_button</code>s.</p>","globalVars":[]}],"menus":{"sections":[{"name":"Color Blocks","headings":[{"id":"color_blocks-","name":""}]},{"name":"Lists","headings":[{"id":"lists-bordered_lists","name":"Bordered Lists"},{"id":"lists-breadcrumbs","name":"Breadcrumbs"},{"id":"lists-inline_lists","name":"Inline Lists"},{"id":"lists-navigation_list","name":"Navigation List"}]},{"name":"Tabs","headings":[{"id":"tabs-","name":""},{"id":"tabs-premade","name":"Premade"}]}],"developmentSections":[{"name":"Config","headings":[{"id":"config-","name":""},{"id":"config-general_settings_","name":"General Settings "},{"id":"config-grid_settings_","name":"Grid Settings "},{"id":"config-typography_settings_","name":"Typography Settings "}]},{"name":"Functions","headings":[{"id":"functions-colors_","name":"Colors "},{"id":"functions-general_functions_","name":"General Functions "}]},{"name":"Main ","headings":[{"id":"main_-","name":""}]},{"name":"Tools","headings":[{"id":"tools-type_utilities_","name":"Type Utilities "}]}]},"developmentSections":[{"id":"config-","isSubsection":true,"isDevelopment":true,"section":"Config","heading":"","code":"","codeLang":"","markup":"","comment":"<p>/globals/_config.scss</p>","globalVars":[]},{"id":"config-general_settings_","isSubsection":true,"isDevelopment":true,"section":"Config","heading":"General Settings ","code":"","codeLang":"","markup":"","comment":"<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$breakpoints_class=global_global_variable_data-code-id=$breakpoints_$breakpoints__code_\"><code id=\"$breakpoints\" class=\"global global_variable\" data-code-id=\"$breakpoints\">$breakpoints</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-list_nested_string\">List (nested) (string)</h6>\n<p>Sets up variables for media-queries. Used in <code id=\"media-query()\" class=\"global global_function\" data-code-id=\"media-query()\">media-query()</code>.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$breakpoints-has-alignment-classes_class=global_global_variable_data-code-id=$breakpoints-has-alignment-classes_$breakpoints-has-alignment-classes__code_,__code_id=$breakpoints-has-spacing-classes_class=global_global_variable_data-code-id=$breakpoints-has-spacing-classes_$breakpoints-has-spacing-classes_/code_,__code_$breakpoints-has-display-classes_/code_,__code_$breakpoint-has-type-classes_/code_\"><code id=\"$breakpoints-has-alignment-classes\" class=\"global global_variable\" data-code-id=\"$breakpoints-has-alignment-classes\">$breakpoints-has-alignment-classes</code>, <code id=\"$breakpoints-has-spacing-classes\" class=\"global global_variable\" data-code-id=\"$breakpoints-has-spacing-classes\">$breakpoints-has-spacing-classes</code>, <code>$breakpoints-has-display-classes</code>, <code>$breakpoint-has-type-classes</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-list_string\">List (string)</h6>\n<p>Same as <code>breakpoint-has-widths</code>, but for utility classes.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$display-classes_class=global_global_variable_data-code-id=$display-classes_$display-classes__code_\"><code id=\"$display-classes\" class=\"global global_variable\" data-code-id=\"$display-classes\">$display-classes</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-map_string:_string\">Map (string: string)</h6>\n<p>Variable used generate display classes. Key value pairs determine the class name and the display value (e.g. &apos;show&apos;:&apos;block&apos; would create a <code>.show { display: block }</code>).</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$colors_class=global_global_variable_data-code-id=$colors_$colors__code_\"><code id=\"$colors\" class=\"global global_variable\" data-code-id=\"$colors\">$colors</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-map_string:_color\">Map (string: color)</h6>\n<p>Set up variable names to be used for color-palette. Dark and light values will be automatically generated. Variables can be accessed through the <code id=\"color()\" class=\"global global_function\" data-code-id=\"color()\">color()</code> (e.g. <code>color(highlight, light)</code> ). The automatically generated styles can be modified in <code>colors/_colorfunctions.scss</code></p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$slick-[]-[]_class=global_global_variable_data-code-id=$slick-[]-[]_$slick-[]-[]__code_\"><code id=\"$slick-[]-[]\" class=\"global global_variable\" data-code-id=\"$slick-[]-[]\">$slick-[]-[]</code></h5>\n<p>Configuration for slick carousel jQuery plugin.<br>Reference: <a href=\"https://github.com/kenwheeler/slick/#sass-variables\">https://github.com/kenwheeler/slick/#sass-variables</a></p>","globalVars":["$breakpoints","$breakpoints-has-alignment-classes","$breakpoints-has-spacing-classes","$display-classes","$colors","$slick-[]-[]"]},{"id":"config-grid_settings_","isSubsection":true,"isDevelopment":true,"section":"Config","heading":"Grid Settings ","code":"","codeLang":"","markup":"","comment":"<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$gutter_class=global_global_variable_data-code-id=$gutter_$gutter__code_\"><code id=\"$gutter\" class=\"global global_variable\" data-code-id=\"$gutter\">$gutter</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-pixel_value\">Pixel value</h6>\n<p>Space between grid items. Also used in <code id=\"type-space()\" class=\"global global_function\" data-code-id=\"type-space()\">type-space()</code> for horizontal spacing units.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$use-silent-classes_class=global_global_variable_data-code-id=$use-silent-classes_$use-silent-classes__code_\"><code id=\"$use-silent-classes\" class=\"global global_variable\" data-code-id=\"$use-silent-classes\">$use-silent-classes</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-boolean\">Boolean</h6>\n<p>If set to false, actual grid classes will be output to CSS.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$push_class=global_global_variable_data-code-id=$push_$push__code_,__code_id=$pull_class=global_global_variable_data-code-id=$pull_$pull_/code_\"><code id=\"$push\" class=\"global global_variable\" data-code-id=\"$push\">$push</code>, <code id=\"$pull\" class=\"global global_variable\" data-code-id=\"$pull\">$pull</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-boolean\">Boolean</h6>\n<p>Determines whether to include extra grid classes for positional grid modifiers.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$use-markup-fix_class=global_global_variable_data-code-id=$use-markup-fix_$use-markup-fix__code_\"><code id=\"$use-markup-fix\" class=\"global global_variable\" data-code-id=\"$use-markup-fix\">$use-markup-fix</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-boolean\">Boolean</h6>\n<p>If set to <code>true</code>, html must have comments between grid items. Almost always set to <code>false</code>.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$use-floats_class=global_global_variable_data-code-id=$use-floats_$use-floats__code_\"><code id=\"$use-floats\" class=\"global global_variable\" data-code-id=\"$use-floats\">$use-floats</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-boolean\">Boolean</h6>\n<p>If set to <code>true</code>, uses floats instead of inline-block.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_$show-baseline__code_\"><code>$show-baseline</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-boolean\">Boolean</h6>\n<p>For development purposes only. Adds a <code>.baseline_on</code> class that will show horizontal lines on an element with heights determined by <code>$base-line-height</code>.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$breakpoints-has-widths_class=global_global_variable_data-code-id=$breakpoints-has-widths_$breakpoints-has-widths__code_,__code_id=$breakpoints-has-push_class=global_global_variable_data-code-id=$breakpoints-has-push_$breakpoints-has-push_/code_,__code_id=$breakpoints-has-pull_class=global_global_variable_data-code-id=$breakpoints-has-pull_$breakpoints-has-pull_/code_\"><code id=\"$breakpoints-has-widths\" class=\"global global_variable\" data-code-id=\"$breakpoints-has-widths\">$breakpoints-has-widths</code>, <code id=\"$breakpoints-has-push\" class=\"global global_variable\" data-code-id=\"$breakpoints-has-push\">$breakpoints-has-push</code>, <code id=\"$breakpoints-has-pull\" class=\"global global_variable\" data-code-id=\"$breakpoints-has-pull\">$breakpoints-has-pull</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-list_string\">List (string)</h6>\n<p>Determines what classes get generated at <code id=\"$breakpoints\" class=\"global global_variable\" data-code-id=\"$breakpoints\">$breakpoints</code>. The list&apos;s order determines cascade (e.g. ).</p>","globalVars":["$gutter","$use-silent-classes","$push","$pull","$use-markup-fix","$use-floats","$breakpoints-has-widths","$breakpoints-has-push","$breakpoints-has-pull","$breakpoints"]},{"id":"config-typography_settings_","isSubsection":true,"isDevelopment":true,"section":"Config","heading":"Typography Settings ","code":"","codeLang":"","markup":"","comment":"<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$base-font-size_class=global_global_variable_data-code-id=$base-font-size_$base-font-size__code_\"><code id=\"$base-font-size\" class=\"global global_variable\" data-code-id=\"$base-font-size\">$base-font-size</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-pixel_value\">Pixel value</h6>\n<p>Font size all other values will use for calculation. Will be converted to <code>rems</code>.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$base-line-height_class=global_global_variable_data-code-id=$base-line-height_$base-line-height__code_\"><code id=\"$base-line-height\" class=\"global global_variable\" data-code-id=\"$base-line-height\">$base-line-height</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-pixel_value\">Pixel value</h6>\n<p>Line-height for base font-size. Will be used to determine the vertical spacing values when <code id=\"type-space()\" class=\"global global_function\" data-code-id=\"type-space()\">type-space()</code> is used.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$auto-scale-type_class=global_global_variable_data-code-id=$auto-scale-type_$auto-scale-type__code_\"><code id=\"$auto-scale-type\" class=\"global global_variable\" data-code-id=\"$auto-scale-type\">$auto-scale-type</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-boolean\">Boolean</h6>\n<p>Uses the <code>$scale-ratio</code> var to create font sizes for headings starting from the <code>$base-font-size</code>. Overwrites <code>$type-[h#]-size</code> vars.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$scale-ratio_class=global_global_variable_data-code-id=$scale-ratio_$scale-ratio__code_\"><code id=\"$scale-ratio\" class=\"global global_variable\" data-code-id=\"$scale-ratio\">$scale-ratio</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-numeric_float\">Numeric (float)</h6>\n<p>Used for <code>$auto-scale-type</code> and for <code id=\"modular-scale()\" class=\"global global_function\" data-code-id=\"modular-scale()\">modular-scale()</code>.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$rem-px-fallback_class=global_global_variable_data-code-id=$rem-px-fallback_$rem-px-fallback__code_\"><code id=\"$rem-px-fallback\" class=\"global global_variable\" data-code-id=\"$rem-px-fallback\">$rem-px-fallback</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-boolean\">Boolean</h6>\n<p>Determines whether <code id=\"rems()\" class=\"global global_function\" data-code-id=\"rems()\">rems()</code> conversion includes a pixel-value fallback for older browsers like IE8.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$[primary,_secondary,_monospace]-font-stack_class=global_global_variable_data-code-id=$[primary,_secondary,_monospace]-font-stack_$[primary,_secondary,_monospace]-font-stack__code_\"><code id=\"$[primary, secondary, monospace]-font-stack\" class=\"global global_variable\" data-code-id=\"$[primary, secondary, monospace]-font-stack\">$[primary, secondary, monospace]-font-stack</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-string\">String</h6>\n<p>Used wherever font-families are declared.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$use-web-fonts_class=global_global_variable_data-code-id=$use-web-fonts_$use-web-fonts__code_\"><code id=\"$use-web-fonts\" class=\"global global_variable\" data-code-id=\"$use-web-fonts\">$use-web-fonts</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-boolean\">Boolean</h6>\n<p>Whether to generate <code>@font-face</code> values based on <code>$font-[]</code> vars or not.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$font-file-name_class=global_global_variable_data-code-id=$font-file-name_$font-file-name__code_\"><code id=\"$font-file-name\" class=\"global global_variable\" data-code-id=\"$font-file-name\">$font-file-name</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-list_string\">List (string)</h6>\n<p>Uses for automatically generated <code>@font-face</code> declarations. Describes the filename as well as the font-family name reference. <em>File names and @font-face values must be the same (e.g. &apos;opensans&apos; and &apos;opensans.ttf&apos;)</em> See <a href=\"#Sass-Tools-Fontface\">/globals/tools/_fontface.scss</a> for more.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$font-weights_class=global_global_variable_data-code-id=$font-weights_$font-weights__code_\"><code id=\"$font-weights\" class=\"global global_variable\" data-code-id=\"$font-weights\">$font-weights</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-list_nested_string\">List (nested) (string)</h6>\n<p>Each parenthesis corresponds to each name in <code>$font-file-name</code>. Determines how many <code>@font-face</code> weights are generated per font.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$font-italics_class=global_global_variable_data-code-id=$font-italics_$font-italics__code_\"><code id=\"$font-italics\" class=\"global global_variable\" data-code-id=\"$font-italics\">$font-italics</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-list_nested_boolean\">List (nested) (boolean)</h6>\n<p>Corresponds to each value in <code>$font-weights</code>. (e.g. if <code>$font-weights: (400,700),(200,400)</code> and <code>$font-italics: (true), (false,true)</code> then the first font will have italics in the 400 and 700 weights while second font will have italics in the 400 weight).</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=$font-include-eot_class=global_global_variable_data-code-id=$font-include-eot_$font-include-eot__code_\"><code id=\"$font-include-eot\" class=\"global global_variable\" data-code-id=\"$font-include-eot\">$font-include-eot</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-boolean\">Boolean</h6>\n<p>Determines whether to generate <code>@font-face</code> values that point at an .eot file. Fallback for IE8.</p>","globalVars":["$base-font-size","$base-line-height","$auto-scale-type","$scale-ratio","$rem-px-fallback","$[primary, secondary, monospace]-font-stack","$use-web-fonts","$font-file-name","$font-weights","$font-italics","$font-include-eot"]},{"id":"functions-colors_","isSubsection":true,"isDevelopment":true,"section":"Functions","heading":"Colors ","code":"","codeLang":"","markup":"","comment":"<p>/globals/_gl-color-functions.scss</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=colors_class=global_global_function_data-code-id=colors_colors__code_,__code_id=color_class=global_global_function_data-code-id=color_color_/code_\"><code id=\"colors()\" class=\"global global_function\" data-code-id=\"colors()\">colors()</code>, <code id=\"color()\" class=\"global global_function\" data-code-id=\"color()\">color()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-function_code_$color-name__code__,__code_$tone:base_/code__,__code_$opacity:1_/code_\">function(<code>$color-name</code> , <code>$tone:base</code> , <code>$opacity:1</code>)</h6>\n<p>Get a color value from the global <code id=\"$color\" class=\"global global_variable\" data-code-id=\"$color\">$color</code> map. Darker and lighter tones are available by passing a second tone string (e.g. <code>background-color: colors(links, light)</code>).<br>Passing only a color name will default to the &apos;base&apos; color.</p>\n<p><a href=\"http://blog.12spokes.com/web-design-development/simple-css-color-management-with-sass/\">Reference</a></p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=combine-color-maps_class=global_global_function_data-code-id=combine-color-maps_combine-color-maps__code_\"><code id=\"combine-color-maps()\" class=\"global global_function\" data-code-id=\"combine-color-maps()\">combine-color-maps()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-function_code_$map1__code__,__code_$map2_/code_\">function(<code>$map1</code> , <code>$map2</code>)</h6>\n<p>Specialized function used by <code id=\"generate_color_variations()\" class=\"global global_function\" data-code-id=\"generate_color_variations()\">generate_color_variations()</code> to merge two color maps.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=generate_color_varations_class=global_global_function_data-code-id=generate_color_varations_generate_color_varations__code_\"><code id=\"generate_color_varations()\" class=\"global global_function\" data-code-id=\"generate_color_varations()\">generate_color_varations()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-function_code_$map:_$colors__code_,__code_$functions:_(tint,_tint,_tint,_shade,_shade,_shade_/code_,______________code_$increments:20%,_40%,_80%,_20%,_40%,_80%_/code_,__code_$variations:_light,_lighter,_lightest,_dark,_darker,_darkest_/code_,__code_$blending-colors:_null_/code_)\">function(<code>$map: $colors</code>, <code>$functions: (tint, tint, tint, shade, shade, shade)</code>,             <code>$increments:(20%, 40%, 80%, 20%, 40%, 80%)</code>, <code>$variations: (light, lighter, lightest, dark, darker, darkest)</code>, <code>$blending-colors: null</code>)</h6>\n<p>Takes base color values and generates a full color palette. Used by the <code id=\"$colors\" class=\"global global_variable\" data-code-id=\"$colors\">$colors</code> map to create a project&apos;s palette, accessible via <code id=\"colors()\" class=\"global global_function\" data-code-id=\"colors()\">colors()</code>.</p>\n<p><strong>Arguments:</strong><br><code>$map</code>: Color map you want to create variations of.<br><code>$functions</code>: color functions used to generate variations (e.g. lighten or darken). Can use any <code id=\"blend-()\" class=\"global global_function\" data-code-id=\"blend-()\">blend-()</code> function as well, provided <code>$blending-colors</code> are provided.<br><code>$</code></p>","globalVars":["$color","$colors"]},{"id":"functions-general_functions_","isSubsection":true,"isDevelopment":true,"section":"Functions","heading":"General Functions ","code":"","codeLang":"","markup":"","comment":"<p>/globals/_gl-functions.scss</p>\n<hr>\n<h3 class=\"main-section-sg-by-emiloberg\" id=\"section-math_functions\">Math Functions</h3>\n<hr>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=exponent_class=global_global_function_data-code-id=exponent_exponent__code_\"><code id=\"exponent()\" class=\"global global_function\" data-code-id=\"exponent()\">exponent()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[number-you-want-to-multiply]__code_,__code_[exponent]_/code_\"><code>[number-you-want-to-multiply]</code>, <code>[exponent]</code></h6>\n<p>Exponentially multiply (cube, square, etc) a number.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=pow_class=global_global_function_data-code-id=pow_pow__code_\"><code id=\"pow()\" class=\"global global_function\" data-code-id=\"pow()\">pow()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[number-you-want-to-multiply]__code_,__code_[exponent]_/code_\"><code>[number-you-want-to-multiply]</code>, <code>[exponent]</code></h6>\n<p>A more robust exponent multiplication which allows for decimal-based exponents. This replaces Compass&apos; pow() function.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=gcd_class=global_global_function_data-code-id=gcd_gcd__code_\"><code id=\"gcd()\" class=\"global global_function\" data-code-id=\"gcd()\">gcd()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[first-number],_[second-number]__code_\"><code>[first-number], [second-number]</code></h6>\n<p>Greatest Common Divisor calculation (useful for calculating grids and widths)</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=lcm_class=global_global_function_data-code-id=lcm_lcm__code_\"><code id=\"lcm()\" class=\"global global_function\" data-code-id=\"lcm()\">lcm()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[first-number],_[second-number]__code_\"><code>[first-number], [second-number]</code></h6>\n<p>Finds the least common multiple.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=nth_root_class=global_global_function_data-code-id=nth_root_nth_root__code_\"><code id=\"nth_root()\" class=\"global global_function\" data-code-id=\"nth_root()\">nth_root()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[number-you-want-to-find-the-root-of],_[root-divisor]__code_\"><code>[number-you-want-to-find-the-root-of], [root-divisor]</code></h6>\n<p>Advanced calculation for square roots, cube roots, etc. of a value.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=sqrt_class=global_global_function_data-code-id=sqrt_sqrt__code_\"><code id=\"sqrt()\" class=\"global global_function\" data-code-id=\"sqrt()\">sqrt()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[number-you-want-the-square-root-of]__code_\"><code>[number-you-want-the-square-root-of]</code></h6>\n<p>Find the square root of a value.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=golden_class=global_global_function_data-code-id=golden_golden__code_\"><code id=\"golden()\" class=\"global global_function\" data-code-id=\"golden()\">golden()</code></h5>\n<p>Generate the golden ratio. Useful for multiplication and division.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=sin_class=global_global_function_data-code-id=sin_sin__code_\"><code id=\"sin()\" class=\"global global_function\" data-code-id=\"sin()\">sin()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[angle]__code_\"><code>[angle]</code></h6>\n<p>Determines the Sine of an angle.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=cos_class=global_global_function_data-code-id=cos_cos__code_\"><code id=\"cos()\" class=\"global global_function\" data-code-id=\"cos()\">cos()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[angle]__code_\"><code>[angle]</code></h6>\n<p>Determines the Cosine of an angle.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=tan_class=global_global_function_data-code-id=tan_tan__code_\"><code id=\"tan()\" class=\"global global_function\" data-code-id=\"tan()\">tan()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[angle]__code_\"><code>[angle]</code></h6>\n<p>Determines the Tangent of an angle.</p>\n<hr>\n<h3 class=\"main-section-sg-by-emiloberg\" id=\"section-sass_helpers\">Sass Helpers</h3>\n<hr>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-converter_functions\">Converter Functions</h5>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=strip-units_class=global_global_function_data-code-id=strip-units_strip-units__code_\"><code id=\"strip-units()\" class=\"global global_function\" data-code-id=\"strip-units()\">strip-units()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[value-you-want-units-removed-from]__code_\"><code>[value-you-want-units-removed-from]</code></h6>\n<p>Remove px,em,rem, etc. from a value. Usually a variable.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=percentage-to-decimal_class=global_global_function_data-code-id=percentage-to-decimal_percentage-to-decimal__code_\"><code id=\"percentage-to-decimal()\" class=\"global global_function\" data-code-id=\"percentage-to-decimal()\">percentage-to-decimal()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[percent]__code_\"><code>[percent]</code></h6>\n<p>Changes percent value to decimal.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=px-to-vw_class=global_global_function_data-code-id=px-to-vw_px-to-vw__code_\"><code id=\"px-to-vw()\" class=\"global global_function\" data-code-id=\"px-to-vw()\">px-to-vw()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[pixel_value]__code_\"><code>[pixel value]</code></h6>\n<p>Converts pixel dimensions to viewport width (vw) dimensions.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=px-to-rems_class=global_global_function_data-code-id=px-to-rems_px-to-rems__code_,_code_id=rems_class=global_global_function_data-code-id=rems_rems_/code_\"><code id=\"px-to-rems()\" class=\"global global_function\" data-code-id=\"px-to-rems()\">px-to-rems()</code>,<code id=\"rems()\" class=\"global global_function\" data-code-id=\"rems()\">rems()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[pixel-value-you-need-converted],_[base-font-size-override]__code_\"><code>[pixel-value-you-need-converted], [base-font-size-override]</code></h6>\n<p>Function for calculating stripped-unit REM values. Used by rems() mixin. Override base font size for media-queries where the breakpoint has a smaller/larger base-font.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=list-to-string_class=global_global_function_data-code-id=list-to-string_list-to-string__code_,__code_id=str-join_class=global_global_function_data-code-id=str-join_str-join_/code_\"><code id=\"list-to-string()\" class=\"global global_function\" data-code-id=\"list-to-string()\">list-to-string()</code>, <code id=\"str-join()\" class=\"global global_function\" data-code-id=\"str-join()\">str-join()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[list-you-need-converted],_[list-seperator]__code_\"><code>[list-you-need-converted], [list-seperator]</code></h6>\n<p>Converts a list to a string with an optional separator.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-string_&amp;_list_functions\">String &amp; List Functions</h5>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=str-contains_class=global_global_function_data-code-id=str-contains_str-contains__code_\"><code id=\"str-contains()\" class=\"global global_function\" data-code-id=\"str-contains()\">str-contains()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[string-you-need-parsed],[sub-string],_[start-position]__code_\"><code>[string-you-need-parsed],[sub-string], [start-position]</code></h6>\n<p>Parses a string for a value (from an optional starting position).</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=str-append_class=global_global_function_data-code-id=str-append_str-append__code_\"><code id=\"str-append()\" class=\"global global_function\" data-code-id=\"str-append()\">str-append()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[string],_[string-to-append]__code_\"><code>[string], [string-to-append]</code></h6>\n<p>Adds one string to another (e.g. <code>str-append(&apos;hello&apos;, &apos;world&apos;)</code> becomes <code>hello world</code>). Used by str-join.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=list-contains_class=global_global_function_data-code-id=list-contains_list-contains__code_\"><code id=\"list-contains()\" class=\"global global_function\" data-code-id=\"list-contains()\">list-contains()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[list],_[value]__code_\"><code>[list], [value]</code></h6>\n<p>Checks whether a list contains a value.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=list-print_class=global_global_function_data-code-id=list-print_list-print__code_\"><code id=\"list-print()\" class=\"global global_function\" data-code-id=\"list-print()\">list-print()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[list]__code_\"><code>[list]</code></h6>\n<p>Used to turn a list into a flat string. For debug purposes.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-map_functions\">Map Functions</h5>\n<p><em>Reference: <a href=\"http://www.sitepoint.com/extra-map-functions-sass/\">http://www.sitepoint.com/extra-map-functions-sass/</a></em></p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=map-deep-set_class=global_global_function_data-code-id=map-deep-set_map-deep-set__code_\"><code id=\"map-deep-set()\" class=\"global global_function\" data-code-id=\"map-deep-set()\">map-deep-set()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[map],_[keys_to_be_updated_...],_[new_value]__code_\"><code>[map], [keys to be updated ...], [new value]</code></h6>\n<p>Add to a deeply nested map key. Accepts any number of keys, but the final value is the new key.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=map-depth_class=global_global_function_data-code-id=map-depth_map-depth__code_\"><code id=\"map-depth()\" class=\"global global_function\" data-code-id=\"map-depth()\">map-depth()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[map]__code_\"><code>[map]</code></h6>\n<p>Find depth of a map. Returns number.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=map-has-keys_class=global_global_function_data-code-id=map-has-keys_map-has-keys__code_,_code_id=map-contains-keys_class=global_global_function_data-code-id=map-contains-keys_map-contains-keys_/code_\"><code id=\"map-has-keys()\" class=\"global global_function\" data-code-id=\"map-has-keys()\">map-has-keys()</code>,<code id=\"map-contains-keys()\" class=\"global global_function\" data-code-id=\"map-contains-keys()\">map-contains-keys()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[map],_[keys_to_be_checked_...]__code_\"><code>[map], [key(s) to be checked ...]</code></h6>\n<p>Determine whether a map contains certain keys.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=map-has-nested-keys_class=global_global_function_data-code-id=map-has-nested-keys_map-has-nested-keys__code_,__code_id=map-contains-nested-keys_class=global_global_function_data-code-id=map-contains-nested-keys_map-contains-nested-keys_/code_\"><code id=\"map-has-nested-keys()\" class=\"global global_function\" data-code-id=\"map-has-nested-keys()\">map-has-nested-keys()</code>, <code id=\"map-contains-nested-keys()\" class=\"global global_function\" data-code-id=\"map-contains-nested-keys()\">map-contains-nested-keys()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[map],_[keys_to_be_checked...]__code_\"><code>[map], [key(s) to be checked...]</code></h6>\n<p>Check for the value of a nested key. Returns boolean value.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=map-get-nested_class=global_global_function_data-code-id=map-get-nested_map-get-nested__code_\"><code id=\"map-get-nested()\" class=\"global global_function\" data-code-id=\"map-get-nested()\">map-get-nested()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[map],_[keys_to_find_value..._]__code_\"><code>[map], [key(s) to find value... ]</code></h6>\n<p>Returns nested map values. A deep version of Sass&apos; <code id=\"map-get()\" class=\"global global_function\" data-code-id=\"map-get()\">map-get()</code>.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=map-extend_class=global_global_function_data-code-id=map-extend_map-extend__code_\"><code id=\"map-extend()\" class=\"global global_function\" data-code-id=\"map-extend()\">map-extend()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[map],_[maps_to_merge_..._],_[deep?]__code_\"><code>[map], [map(s) to merge ... ], [deep?]</code></h6>\n<p>Merges multiple maps. Similar to jQuery&apos;s .extend().</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=map-add-depth_class=global_global_function_data-code-id=map-add-depth_map-add-depth__code_\"><code id=\"map-add-depth()\" class=\"global global_function\" data-code-id=\"map-add-depth()\">map-add-depth()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[map],_[new_key]__code_\"><code>[map], [new key]</code></h6>\n<p>Adds one level to a map using the new key to a map. Used by color map generator function (colors/_colorfunctions). (e.g. <code>(key: value, key: value)</code> becomes <code>(key:(new-key: value), key:(new-key: value))</code> )</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=map-inspect_class=global_global_function_data-code-id=map-inspect_map-inspect__code_\"><code id=\"map-inspect()\" class=\"global global_function\" data-code-id=\"map-inspect()\">map-inspect()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[map],_[starting_indent_level]__code_\"><code>[map], [starting indent level]</code></h6>\n<p>Prints map into a string. Useful for debugging.</p>\n<hr>\n<h3 class=\"main-section-sg-by-emiloberg\" id=\"section-photoshop_converters\">Photoshop Converters</h3>\n<hr>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=photoshop-shadow_class=global_global_function_data-code-id=photoshop-shadow_photoshop-shadow__code_,__code_id=photoshop-text-shadow_class=global_global_function_data-code-id=photoshop-text-shadow_photoshop-text-shadow_/code_,__code_id=photoshop-gradient-overlay_class=global_global_function_data-code-id=photoshop-gradient-overlay_photoshop-gradient-overlay_/code_\"><code id=\"photoshop-shadow()\" class=\"global global_function\" data-code-id=\"photoshop-shadow()\">photoshop-shadow()</code>, <code id=\"photoshop-text-shadow()\" class=\"global global_function\" data-code-id=\"photoshop-text-shadow()\">photoshop-text-shadow()</code>, <code id=\"photoshop-gradient-overlay()\" class=\"global global_function\" data-code-id=\"photoshop-gradient-overlay()\">photoshop-gradient-overlay()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[various]__code_\"><code>[various]</code></h6>\n<p>MIXINs: Interprets Photoshop layer styles as they&apos;d appear in Photoshop into CSS. See functions for their accepted arguments.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=convert-angle_class=global_global_function_data-code-id=convert-angle_convert-angle__code_\"><code id=\"convert-angle()\" class=\"global global_function\" data-code-id=\"convert-angle()\">convert-angle()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[angle]__code_\"><code>[angle]</code></h6>\n<p>Converts Photoshop angles to CSS angles.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=stop-scale_class=global_global_function_data-code-id=stop-scale_stop-scale__code_\"><code id=\"stop-scale()\" class=\"global global_function\" data-code-id=\"stop-scale()\">stop-scale()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[stop],_[scale]__code_\"><code>[stop], [scale]</code></h6>\n<p>Converts Photoshop gradient-stops to CSS gradients.</p>\n<hr>\n<h3 class=\"main-section-sg-by-emiloberg\" id=\"section-type_functions\">Type Functions</h3>\n<hr>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=baseline_class=global_global_function_data-code-id=baseline_baseline__code_\"><code id=\"baseline()\" class=\"global global_function\" data-code-id=\"baseline()\">baseline()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[font-size]__code_,__code_[baseline]_/code_\"><code>[font-size]</code>, <code>[baseline]</code></h6>\n<p>Aligns a font-size to a baseline. Dividing by the $font-size yields a unitless-REM value.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=baseline-lcm_class=global_global_function_data-code-id=baseline-lcm_baseline-lcm__code_\"><code id=\"baseline-lcm()\" class=\"global global_function\" data-code-id=\"baseline-lcm()\">baseline-lcm()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[font-size]__code_,__code_[line-height]_/code_\"><code>[font-size]</code>, <code>[line-height]</code></h6>\n<p>Calculate the least-common-denominator between a font-size and a baseline.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=baseline-calc_class=global_global_function_data-code-id=baseline-calc_baseline-calc__code_\"><code id=\"baseline-calc()\" class=\"global global_function\" data-code-id=\"baseline-calc()\">baseline-calc()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[font-size-in-pixels]__code_,__code_[base-font-size]_/code_,_code_[override?]_/code_\"><code>[font-size-in-pixels]</code>, <code>[base-font-size]</code>,<code>[override?]</code></h6>\n<p>Used generating line-heights that line up to the baseline grid. Override recommended behavior with a boolean third value to gain most eye-pleasing values.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=modular-scale_class=global_global_function_data-code-id=modular-scale_modular-scale__code_\"><code id=\"modular-scale()\" class=\"global global_function\" data-code-id=\"modular-scale()\">modular-scale()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[number-on-the-scale-you-want],[ratio-to-use-as-scale]__code_\"><code>[number-on-the-scale-you-want],[ratio-to-use-as-scale]</code></h6>\n<p>Generates a pixel value that is an exponent of a ratio (defaults to $scale-ratio value). Used by <code id=\"type-scale()\" class=\"global global_function\" data-code-id=\"type-scale()\">type-scale()</code>.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=get-type_class=global_global_function_data-code-id=get-type_get-type__code_,_code_id=type_class=global_global_function_data-code-id=type_type_/code_\"><code id=\"get-type()\" class=\"global global_function\" data-code-id=\"get-type()\">get-type()</code>,<code id=\"type()\" class=\"global global_function\" data-code-id=\"type()\">type()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[font-size],[font-size-value]__code_\"><code>[font-size],[font-size-value]</code></h6>\n<p>function for finding the value of an indexed type-size. H1-H6, p, and small are all indexed values. px, rem, and line-height are available.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=define-type_class=global_global_function_data-code-id=define-type_define-type__code_\"><code id=\"define-type()\" class=\"global global_function\" data-code-id=\"define-type()\">define-type()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_[font-size],_[property],_[new_value]__code_\"><code>[font-size], [property], [new value]</code></h6>\n<p>Registers new values to type map. [Property] accepts px, rem, and line-height.</p>","globalVars":[]},{"id":"main_-","isSubsection":false,"isDevelopment":true,"section":"Main ","heading":"","code":"","codeLang":"","markup":"","comment":"<p>/main.scss</p>\n<p>Imports all Sass files in order from lowest specificity to highest.</p>\n<ol>\n<li>(globals) global functions</li>\n<li>(globals) Settings</li>\n<li>(globals) default variables</li>\n<li>(tools) general-use mixins and sass utilities</li>\n<li>(generic) normalize/reset styles</li>\n<li>(base) element styles</li>\n<li>(layout) basic layout and object styles</li>\n<li>(components) module and component styles</li>\n<li>(Sections) view- and page-specific and scoped styles.</li>\n<li>(Overrides) utility styles, usually end in <code>!important</code></li>\n</ol>","globalVars":[]},{"id":"tools-type_utilities_","isSubsection":true,"isDevelopment":true,"section":"Tools","heading":"Type Utilities ","code":"","codeLang":"","markup":"","comment":"<p>globals/tools/_t-type.scss</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=type-utilities_class=global_global_variable_data-code-id=type-utilities_@type-utilities__code_\"><code id=\"type-utilities()\" class=\"global global_variable\" data-code-id=\"type-utilities()\">@type-utilities()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-mixin_code_$namespace:&quot;&quot;__code_,__code_$silent:_true_/code_,__code_$important:_false_/code_\">mixin(<code>$namespace:&quot;&quot;</code>, <code>$silent: true</code>, <code>$important: false)</code></h6>\n<p>A set of typography-based utility classes that can be generated within media-queries via the <code>$namespace</code> argument. Can output silent or real css classes. Can also make declarations <code>!important</code>.</p>\n<h5 class=\"main-section-sg-by-emiloberg\" id=\"section-_code_id=type-utilities-init_class=global_global_variable_data-code-id=type-utilities-init_@type-utilities-init__code_\"><code id=\"type-utilities-init()\" class=\"global global_variable\" data-code-id=\"type-utilities-init()\">@type-utilities-init()</code></h5>\n<h6 class=\"main-section-sg-by-emiloberg\" id=\"section-mixin_code_id=$all-breakpoints_class=global_global_variable_data-code-id=$all-breakpoints_$all-breakpoints__code_,__code_$namespace:&quot;&quot;_/code_,__code_$silent:_true_/code_,__code_$important:_false_/code_\">mixin(<code id=\"$all-breakpoints\" class=\"global global_variable\" data-code-id=\"$all-breakpoints\">$all-breakpoints</code>, <code>$namespace:&quot;&quot;</code>, <code>$silent: true</code>), <code>$important: false</code></h6>\n<p>The responsive component to <code id=\"type-utilities()\" class=\"global global_variable\" data-code-id=\"type-utilities()\">@type-utilities()</code>. Invoke <code id=\"type-utilites()\" class=\"global global_variable\" data-code-id=\"type-utilites()\">@type-utilites()</code> within a set of media-queries that match names in <code id=\"$breakpoints\" class=\"global global_variable\" data-code-id=\"$breakpoints\">$breakpoints</code>. This is most useful for creating responsive utility classes.</p>","globalVars":["@type-utilities()","@type-utilities-init()","$all-breakpoints","@type-utilities()","@type-utilites()","$breakpoints"]}],"customVars":{"sampleVar":"Hello from customVars!","pageTitle":"Style Guide"},"codeRefs":{"vars":["$base-font-size","$base-line-height","$auto-scale-type","$scale-ratio","$rem-px-fallback","$[primary, secondary, monospace]-font-stack","$use-web-fonts","$font-file-name","$font-weights","$font-italics","$font-include-eot","$gutter","$use-silent-classes","$push","$pull","$use-markup-fix","$use-floats","$breakpoints-has-widths","$breakpoints-has-push","$breakpoints-has-pull","$breakpoints","$breakpoints","$breakpoints-has-alignment-classes","$breakpoints-has-spacing-classes","$display-classes","$colors","$slick-[]-[]","$color","$colors","$all-breakpoints","$breakpoints"],"funs":["type-space()","modular-scale()","rems()","type-space()","media-query()","color()","colors()","color()","combine-color-maps()","generate_color_variations()","generate_color_varations()","colors()","blend-()","exponent()","pow()","gcd()","lcm()","nth_root()","sqrt()","golden()","sin()","cos()","tan()","strip-units()","percentage-to-decimal()","px-to-vw()","px-to-rems()","rems()","list-to-string()","str-join()","str-contains()","str-append()","list-contains()","list-print()","map-deep-set()","map-depth()","map-has-keys()","map-contains-keys()","map-has-nested-keys()","map-contains-nested-keys()","map-get-nested()","map-get()","map-extend()","map-add-depth()","map-inspect()","photoshop-shadow()","photoshop-text-shadow()","photoshop-gradient-overlay()","convert-angle()","stop-scale()","baseline()","baseline-lcm()","baseline-calc()","modular-scale()","type-scale()","get-type()","type()","define-type()"],"mixins":["@color-palette-output()","@type-utilities()","@type-utilities-init()","@type-utilities()","@type-utilites()"]}}